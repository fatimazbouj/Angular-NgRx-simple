{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, Input, Output, signal, computed, effect, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i3 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport * as i7 from 'primeng/autofocus';\nimport { AutoFocusModule } from 'primeng/autofocus';\nimport { DomHandler } from 'primeng/dom';\nimport * as i4 from 'primeng/overlay';\nimport { OverlayModule } from 'primeng/overlay';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i6 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\nimport * as i5 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ObjectUtils, UniqueComponentId } from 'primeng/utils';\nimport { TimesIcon } from 'primeng/icons/times';\nimport { ChevronDownIcon } from 'primeng/icons/chevrondown';\nimport { SearchIcon } from 'primeng/icons/search';\nfunction DropdownItem_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate((tmp_0_0 = ctx_r0.label) !== null && tmp_0_0 !== undefined ? tmp_0_0 : \"empty\");\n  }\n}\nfunction DropdownItem_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    height: a0\n  };\n};\nconst _c1 = function (a1, a2, a3) {\n  return {\n    \"p-dropdown-item\": true,\n    \"p-highlight\": a1,\n    \"p-disabled\": a2,\n    \"p-focus\": a3\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nconst _c3 = [\"container\"];\nconst _c4 = [\"filter\"];\nconst _c5 = [\"focusInput\"];\nconst _c6 = [\"editableInput\"];\nconst _c7 = [\"items\"];\nconst _c8 = [\"scroller\"];\nconst _c9 = [\"overlay\"];\nconst _c10 = [\"firstHiddenFocusableEl\"];\nconst _c11 = [\"lastHiddenFocusableEl\"];\nfunction Dropdown_span_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r9.label() === \"p-emptylabel\" ? \"\\xA0\" : ctx_r9.label());\n  }\n}\nfunction Dropdown_span_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dropdown_span_2_ng_template_4_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r13.label() === \"p-emptylabel\" ? \"\\xA0\" : ctx_r13.placeholder);\n  }\n}\nfunction Dropdown_span_2_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_span_2_ng_template_4_span_0_Template, 2, 1, \"span\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r12.modelValue() && (ctx_r12.label() === ctx_r12.placeholder || ctx_r12.label() && !ctx_r12.placeholder));\n  }\n}\nfunction Dropdown_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 10, 11);\n    i0.ɵɵlistener(\"focus\", function Dropdown_span_2_Template_span_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onInputFocus($event));\n    })(\"blur\", function Dropdown_span_2_Template_span_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onInputBlur($event));\n    })(\"keydown\", function Dropdown_span_2_Template_span_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onKeyDown($event));\n    });\n    i0.ɵɵtemplate(2, Dropdown_span_2_ng_container_2_Template, 2, 1, \"ng-container\", 12);\n    i0.ɵɵtemplate(3, Dropdown_span_2_ng_container_3_Template, 1, 0, \"ng-container\", 13);\n    i0.ɵɵtemplate(4, Dropdown_span_2_ng_template_4_Template, 1, 1, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r11 = i0.ɵɵreference(5);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.inputClass)(\"pTooltip\", ctx_r1.tooltip)(\"tooltipPosition\", ctx_r1.tooltipPosition)(\"positionStyle\", ctx_r1.tooltipPositionStyle)(\"tooltipStyleClass\", ctx_r1.tooltipStyleClass)(\"autofocus\", ctx_r1.autofocus);\n    i0.ɵɵattribute(\"aria-disabled\", ctx_r1.disabled)(\"id\", ctx_r1.inputId)(\"aria-label\", ctx_r1.ariaLabel || (ctx_r1.label() === \"p-emptylabel\" ? undefined : ctx_r1.label()))(\"aria-labelledby\", ctx_r1.ariaLabelledBy)(\"aria-haspopup\", \"listbox\")(\"aria-expanded\", ctx_r1.overlayVisible)(\"aria-controls\", ctx_r1.id + \"_list\")(\"tabindex\", !ctx_r1.disabled ? ctx_r1.tabindex : -1)(\"aria-activedescendant\", ctx_r1.focused ? ctx_r1.focusedOptionId : undefined);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.selectedItemTemplate)(\"ngIfElse\", _r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.selectedItemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(19, _c2, ctx_r1.selectedOption));\n  }\n}\nfunction Dropdown_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 15, 16);\n    i0.ɵɵlistener(\"input\", function Dropdown_input_3_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.onEditableInput($event));\n    })(\"keydown\", function Dropdown_input_3_Template_input_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.onKeyDown($event));\n    })(\"focus\", function Dropdown_input_3_Template_input_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.onInputFocus($event));\n    })(\"blur\", function Dropdown_input_3_Template_input_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.onInputBlur($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r2.inputClass)(\"disabled\", ctx_r2.disabled);\n    i0.ɵɵattribute(\"maxlength\", ctx_r2.maxlength)(\"placeholder\", ctx_r2.placeholder)(\"aria-expanded\", ctx_r2.overlayVisible);\n  }\n}\nfunction Dropdown_ng_container_4_TimesIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"TimesIcon\", 19);\n    i0.ɵɵlistener(\"click\", function Dropdown_ng_container_4_TimesIcon_1_Template_TimesIcon_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r26.clear($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-dropdown-clear-icon\");\n    i0.ɵɵattribute(\"data-pc-section\", \"clearicon\");\n  }\n}\nfunction Dropdown_ng_container_4_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction Dropdown_ng_container_4_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_container_4_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Dropdown_ng_container_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 20);\n    i0.ɵɵlistener(\"click\", function Dropdown_ng_container_4_span_2_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r30.clear($event));\n    });\n    i0.ɵɵtemplate(1, Dropdown_ng_container_4_span_2_1_Template, 1, 0, null, 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"data-pc-section\", \"clearicon\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r25.clearIconTemplate);\n  }\n}\nfunction Dropdown_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_container_4_TimesIcon_1_Template, 1, 2, \"TimesIcon\", 17);\n    i0.ɵɵtemplate(2, Dropdown_ng_container_4_span_2_Template, 2, 2, \"span\", 18);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.clearIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.clearIconTemplate);\n  }\n}\nfunction Dropdown_ng_container_6_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 24);\n  }\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r32.dropdownIcon);\n  }\n}\nfunction Dropdown_ng_container_6_ChevronDownIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronDownIcon\", 25);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-dropdown-trigger-icon\");\n  }\n}\nfunction Dropdown_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_container_6_span_1_Template, 1, 1, \"span\", 22);\n    i0.ɵɵtemplate(2, Dropdown_ng_container_6_ChevronDownIcon_2_Template, 1, 1, \"ChevronDownIcon\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.dropdownIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.dropdownIcon);\n  }\n}\nfunction Dropdown_span_7_1_ng_template_0_Template(rf, ctx) {}\nfunction Dropdown_span_7_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_span_7_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Dropdown_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtemplate(1, Dropdown_span_7_1_Template, 1, 0, null, 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.dropdownIconTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_10_div_4_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c12 = function (a0) {\n  return {\n    options: a0\n  };\n};\nfunction Dropdown_ng_template_10_div_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_10_div_4_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r45 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r45.filterTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c12, ctx_r45.filterOptions));\n  }\n}\nfunction Dropdown_ng_template_10_div_4_ng_template_2_SearchIcon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"SearchIcon\", 25);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-dropdown-filter-icon\");\n  }\n}\nfunction Dropdown_ng_template_10_div_4_ng_template_2_span_4_1_ng_template_0_Template(rf, ctx) {}\nfunction Dropdown_ng_template_10_div_4_ng_template_2_span_4_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_template_10_div_4_ng_template_2_span_4_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Dropdown_ng_template_10_div_4_ng_template_2_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 41);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_10_div_4_ng_template_2_span_4_1_Template, 1, 0, null, 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r51 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r51.filterIconTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_div_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r55 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"input\", 38, 39);\n    i0.ɵɵlistener(\"input\", function Dropdown_ng_template_10_div_4_ng_template_2_Template_input_input_1_listener($event) {\n      i0.ɵɵrestoreView(_r55);\n      const ctx_r54 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r54.onFilterInputChange($event));\n    })(\"keydown\", function Dropdown_ng_template_10_div_4_ng_template_2_Template_input_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r55);\n      const ctx_r56 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r56.onFilterKeyDown($event));\n    })(\"blur\", function Dropdown_ng_template_10_div_4_ng_template_2_Template_input_blur_1_listener($event) {\n      i0.ɵɵrestoreView(_r55);\n      const ctx_r57 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r57.onFilterBlur($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, Dropdown_ng_template_10_div_4_ng_template_2_SearchIcon_3_Template, 1, 1, \"SearchIcon\", 23);\n    i0.ɵɵtemplate(4, Dropdown_ng_template_10_div_4_ng_template_2_span_4_Template, 2, 1, \"span\", 40);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r47 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r47._filterValue() || \"\");\n    i0.ɵɵattribute(\"placeholder\", ctx_r47.filterPlaceholder)(\"aria-owns\", ctx_r47.id + \"_list\")(\"aria-label\", ctx_r47.ariaFilterLabel)(\"aria-activedescendant\", ctx_r47.focusedOptionId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r47.filterIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r47.filterIconTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵlistener(\"click\", function Dropdown_ng_template_10_div_4_Template_div_click_0_listener($event) {\n      return $event.stopPropagation();\n    });\n    i0.ɵɵtemplate(1, Dropdown_ng_template_10_div_4_ng_container_1_Template, 2, 4, \"ng-container\", 12);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_10_div_4_ng_template_2_Template, 5, 7, \"ng-template\", null, 36, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r46 = i0.ɵɵreference(3);\n    const ctx_r38 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r38.filterTemplate)(\"ngIfElse\", _r46);\n  }\n}\nfunction Dropdown_ng_template_10_p_scroller_6_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c13 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    options: a1\n  };\n};\nfunction Dropdown_ng_template_10_p_scroller_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_template_10_p_scroller_6_ng_template_2_ng_container_0_Template, 1, 0, \"ng-container\", 13);\n  }\n  if (rf & 2) {\n    const items_r62 = ctx.$implicit;\n    const scrollerOptions_r63 = ctx.options;\n    i0.ɵɵnextContext(2);\n    const _r41 = i0.ɵɵreference(9);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r41)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c13, items_r62, scrollerOptions_r63));\n  }\n}\nfunction Dropdown_ng_template_10_p_scroller_6_ng_container_3_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_10_p_scroller_6_ng_container_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_template_10_p_scroller_6_ng_container_3_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 13);\n  }\n  if (rf & 2) {\n    const scrollerOptions_r66 = ctx.options;\n    const ctx_r65 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r65.loaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c12, scrollerOptions_r66));\n  }\n}\nfunction Dropdown_ng_template_10_p_scroller_6_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_10_p_scroller_6_ng_container_3_ng_template_1_Template, 1, 4, \"ng-template\", 44);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction Dropdown_ng_template_10_p_scroller_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r69 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-scroller\", 42, 43);\n    i0.ɵɵlistener(\"onLazyLoad\", function Dropdown_ng_template_10_p_scroller_6_Template_p_scroller_onLazyLoad_0_listener($event) {\n      i0.ɵɵrestoreView(_r69);\n      const ctx_r68 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r68.onLazyLoad.emit($event));\n    });\n    i0.ɵɵtemplate(2, Dropdown_ng_template_10_p_scroller_6_ng_template_2_Template, 1, 5, \"ng-template\", 9);\n    i0.ɵɵtemplate(3, Dropdown_ng_template_10_p_scroller_6_ng_container_3_Template, 2, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r39 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(8, _c0, ctx_r39.scrollHeight));\n    i0.ɵɵproperty(\"items\", ctx_r39.visibleOptions())(\"itemSize\", ctx_r39.virtualScrollItemSize || ctx_r39._itemSize)(\"autoSize\", true)(\"lazy\", ctx_r39.lazy)(\"options\", ctx_r39.virtualScrollOptions);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r39.loaderTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_ng_container_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c14 = function () {\n  return {};\n};\nfunction Dropdown_ng_template_10_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_10_ng_container_7_ng_container_1_Template, 1, 0, \"ng-container\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r41 = i0.ɵɵreference(9);\n    const ctx_r40 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r41)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(3, _c13, ctx_r40.visibleOptions(), i0.ɵɵpureFunction0(2, _c14)));\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r77 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r81 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r81.getOptionGroupLabel(option_r77.optionGroup));\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\", 49);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_span_2_Template, 2, 1, \"span\", 4);\n    i0.ɵɵtemplate(3, Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_ng_container_3_Template, 1, 0, \"ng-container\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r85 = i0.ɵɵnextContext();\n    const i_r78 = ctx_r85.index;\n    const option_r77 = ctx_r85.$implicit;\n    const scrollerOptions_r72 = i0.ɵɵnextContext().options;\n    const ctx_r79 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(5, _c0, scrollerOptions_r72.itemSize + \"px\"));\n    i0.ɵɵattribute(\"id\", ctx_r79.id + \"_\" + ctx_r79.getOptionIndex(i_r78, scrollerOptions_r72));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r79.groupTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r79.groupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c2, option_r77.optionGroup));\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r88 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p-dropdownItem\", 50);\n    i0.ɵɵlistener(\"onClick\", function Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_1_Template_p_dropdownItem_onClick_1_listener($event) {\n      i0.ɵɵrestoreView(_r88);\n      const option_r77 = i0.ɵɵnextContext().$implicit;\n      const ctx_r86 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r86.onOptionSelect($event, option_r77));\n    })(\"onMouseEnter\", function Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_1_Template_p_dropdownItem_onMouseEnter_1_listener($event) {\n      i0.ɵɵrestoreView(_r88);\n      const i_r78 = i0.ɵɵnextContext().index;\n      const scrollerOptions_r72 = i0.ɵɵnextContext().options;\n      const ctx_r89 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r89.onOptionMouseEnter($event, ctx_r89.getOptionIndex(i_r78, scrollerOptions_r72)));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r92 = i0.ɵɵnextContext();\n    const i_r78 = ctx_r92.index;\n    const option_r77 = ctx_r92.$implicit;\n    const scrollerOptions_r72 = i0.ɵɵnextContext().options;\n    const ctx_r80 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", ctx_r80.id + \"_\" + ctx_r80.getOptionIndex(i_r78, scrollerOptions_r72))(\"option\", option_r77)(\"selected\", ctx_r80.isSelected(option_r77))(\"label\", ctx_r80.getOptionLabel(option_r77))(\"disabled\", ctx_r80.isOptionDisabled(option_r77))(\"template\", ctx_r80.itemTemplate)(\"focused\", ctx_r80.focusedOptionIndex() === ctx_r80.getOptionIndex(i_r78, scrollerOptions_r72))(\"ariaPosInset\", ctx_r80.getAriaPosInset(ctx_r80.getOptionIndex(i_r78, scrollerOptions_r72)))(\"ariaSetSize\", ctx_r80.ariaSetSize);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_Template, 4, 9, \"ng-container\", 4);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_1_Template, 2, 9, \"ng-container\", 4);\n  }\n  if (rf & 2) {\n    const option_r77 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", option_r77.group);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !option_r77.group);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r94 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r94.emptyFilterMessageLabel, \" \");\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 52);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 51);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_10_ng_template_8_li_3_ng_container_1_Template, 2, 1, \"ng-container\", 12);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_10_ng_template_8_li_3_ng_container_2_Template, 2, 0, \"ng-container\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const scrollerOptions_r72 = i0.ɵɵnextContext().options;\n    const ctx_r75 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, scrollerOptions_r72.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r75.emptyFilterTemplate && !ctx_r75.emptyTemplate)(\"ngIfElse\", ctx_r75.emptyFilter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r75.emptyFilterTemplate || ctx_r75.emptyTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r98 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r98.emptyMessageLabel, \" \");\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_4_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 53);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 51);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_10_ng_template_8_li_4_ng_container_1_Template, 2, 1, \"ng-container\", 12);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_10_ng_template_8_li_4_ng_container_2_Template, 2, 0, \"ng-container\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const scrollerOptions_r72 = i0.ɵɵnextContext().options;\n    const ctx_r76 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, scrollerOptions_r72.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r76.emptyTemplate)(\"ngIfElse\", ctx_r76.empty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r76.emptyTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 45, 46);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_10_ng_template_8_ng_template_2_Template, 2, 2, \"ng-template\", 47);\n    i0.ɵɵtemplate(3, Dropdown_ng_template_10_ng_template_8_li_3_Template, 3, 6, \"li\", 48);\n    i0.ɵɵtemplate(4, Dropdown_ng_template_10_ng_template_8_li_4_Template, 3, 6, \"li\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const items_r71 = ctx.$implicit;\n    const scrollerOptions_r72 = ctx.options;\n    const ctx_r42 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(scrollerOptions_r72.contentStyle);\n    i0.ɵɵproperty(\"ngClass\", scrollerOptions_r72.contentStyleClass);\n    i0.ɵɵattribute(\"id\", ctx_r42.id + \"_list\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", items_r71);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r42.filterValue && ctx_r42.isEmpty());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r42.filterValue && ctx_r42.isEmpty());\n  }\n}\nfunction Dropdown_ng_template_10_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r103 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"span\", 28, 29);\n    i0.ɵɵlistener(\"focus\", function Dropdown_ng_template_10_Template_span_focus_1_listener($event) {\n      i0.ɵɵrestoreView(_r103);\n      const ctx_r102 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r102.onFirstHiddenFocus($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, Dropdown_ng_template_10_ng_container_3_Template, 1, 0, \"ng-container\", 21);\n    i0.ɵɵtemplate(4, Dropdown_ng_template_10_div_4_Template, 4, 2, \"div\", 30);\n    i0.ɵɵelementStart(5, \"div\", 31);\n    i0.ɵɵtemplate(6, Dropdown_ng_template_10_p_scroller_6_Template, 4, 10, \"p-scroller\", 32);\n    i0.ɵɵtemplate(7, Dropdown_ng_template_10_ng_container_7_Template, 2, 6, \"ng-container\", 4);\n    i0.ɵɵtemplate(8, Dropdown_ng_template_10_ng_template_8_Template, 5, 7, \"ng-template\", null, 33, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, Dropdown_ng_template_10_ng_container_10_Template, 1, 0, \"ng-container\", 21);\n    i0.ɵɵelementStart(11, \"span\", 28, 34);\n    i0.ɵɵlistener(\"focus\", function Dropdown_ng_template_10_Template_span_focus_11_listener($event) {\n      i0.ɵɵrestoreView(_r103);\n      const ctx_r104 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r104.onLastHiddenFocus($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r7.panelStyleClass);\n    i0.ɵɵproperty(\"ngClass\", \"p-dropdown-panel p-component\")(\"ngStyle\", ctx_r7.panelStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"tabindex\", 0)(\"data-p-hidden-accessible\", true)(\"data-p-hidden-focusable\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.filter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"max-height\", ctx_r7.virtualScroll ? \"auto\" : ctx_r7.scrollHeight || \"auto\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.virtualScroll);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r7.virtualScroll);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.footerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"tabindex\", 0)(\"data-p-hidden-accessible\", true)(\"data-p-hidden-focusable\", true);\n  }\n}\nconst DROPDOWN_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Dropdown),\n  multi: true\n};\nclass DropdownItem {\n  id;\n  option;\n  selected;\n  focused;\n  label;\n  disabled;\n  visible;\n  itemSize;\n  ariaPosInset;\n  ariaSetSize;\n  template;\n  onClick = new EventEmitter();\n  onMouseEnter = new EventEmitter();\n  ngOnInit() {}\n  onOptionClick(event) {\n    this.onClick.emit(event);\n  }\n  onOptionMouseEnter(event) {\n    this.onMouseEnter.emit(event);\n  }\n  static ɵfac = function DropdownItem_Factory(t) {\n    return new (t || DropdownItem)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DropdownItem,\n    selectors: [[\"p-dropdownItem\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      id: \"id\",\n      option: \"option\",\n      selected: \"selected\",\n      focused: \"focused\",\n      label: \"label\",\n      disabled: \"disabled\",\n      visible: \"visible\",\n      itemSize: \"itemSize\",\n      ariaPosInset: \"ariaPosInset\",\n      ariaSetSize: \"ariaSetSize\",\n      template: \"template\"\n    },\n    outputs: {\n      onClick: \"onClick\",\n      onMouseEnter: \"onMouseEnter\"\n    },\n    decls: 3,\n    vars: 21,\n    consts: [[\"role\", \"option\", \"pRipple\", \"\", 3, \"id\", \"ngStyle\", \"ngClass\", \"click\", \"mouseenter\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function DropdownItem_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"li\", 0);\n        i0.ɵɵlistener(\"click\", function DropdownItem_Template_li_click_0_listener($event) {\n          return ctx.onOptionClick($event);\n        })(\"mouseenter\", function DropdownItem_Template_li_mouseenter_0_listener($event) {\n          return ctx.onOptionMouseEnter($event);\n        });\n        i0.ɵɵtemplate(1, DropdownItem_span_1_Template, 2, 1, \"span\", 1);\n        i0.ɵɵtemplate(2, DropdownItem_ng_container_2_Template, 1, 0, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"id\", ctx.id)(\"ngStyle\", i0.ɵɵpureFunction1(13, _c0, ctx.itemSize + \"px\"))(\"ngClass\", i0.ɵɵpureFunction3(15, _c1, ctx.selected, ctx.disabled, ctx.focused));\n        i0.ɵɵattribute(\"aria-label\", ctx.label)(\"aria-setsize\", ctx.ariaSetSize)(\"aria-posinset\", ctx.ariaPosInset)(\"aria-selected\", ctx.selected)(\"data-p-focused\", ctx.focused)(\"data-p-highlight\", ctx.selected)(\"data-p-disabled\", ctx.disabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.template);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(19, _c2, ctx.option));\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i2.Ripple],\n    encapsulation: 2\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownItem, [{\n    type: Component,\n    args: [{\n      selector: 'p-dropdownItem',\n      template: `\n        <li\n            [id]=\"id\"\n            (click)=\"onOptionClick($event)\"\n            (mouseenter)=\"onOptionMouseEnter($event)\"\n            role=\"option\"\n            pRipple\n            [attr.aria-label]=\"label\"\n            [attr.aria-setsize]=\"ariaSetSize\"\n            [attr.aria-posinset]=\"ariaPosInset\"\n            [attr.aria-selected]=\"selected\"\n            [attr.data-p-focused]=\"focused\"\n            [attr.data-p-highlight]=\"selected\"\n            [attr.data-p-disabled]=\"disabled\"\n            [ngStyle]=\"{ height: itemSize + 'px' }\"\n            [ngClass]=\"{ 'p-dropdown-item': true, 'p-highlight': selected, 'p-disabled': disabled, 'p-focus': focused }\"\n        >\n            <span *ngIf=\"!template\">{{ label ?? 'empty' }}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: { $implicit: option }\"></ng-container>\n        </li>\n    `,\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }],\n    option: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    focused: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    ariaPosInset: [{\n      type: Input\n    }],\n    ariaSetSize: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Dropdown also known as Select, is used to choose an item from a collection of options.\n * @group Components\n */\nclass Dropdown {\n  el;\n  renderer;\n  cd;\n  zone;\n  filterService;\n  config;\n  /**\n   * Unique identifier of the component\n   * @group Props\n   */\n  id;\n  /**\n   * Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\n   * @group Props\n   */\n  scrollHeight = '200px';\n  /**\n   * When specified, displays an input field to filter the items on keyup.\n   * @group Props\n   */\n  filter;\n  /**\n   * Name of the input element.\n   * @group Props\n   */\n  name;\n  /**\n   * Inline style of the element.\n   * @group Props\n   */\n  style;\n  /**\n   * Inline style of the overlay panel element.\n   * @group Props\n   */\n  panelStyle;\n  /**\n   * Style class of the element.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Style class of the overlay panel element.\n   * @group Props\n   */\n  panelStyleClass;\n  /**\n   * When present, it specifies that the component cannot be edited.\n   * @group Props\n   */\n  readonly;\n  /**\n   * When present, it specifies that an input field must be filled out before submitting the form.\n   * @group Props\n   */\n  required;\n  /**\n   * When present, custom value instead of predefined options can be entered using the editable input field.\n   * @group Props\n   */\n  editable;\n  /**\n   * Target element to attach the overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n   * @group Props\n   */\n  appendTo;\n  /**\n   * Index of the element in tabbing order.\n   * @group Props\n   */\n  tabindex = 0;\n  /**\n   * Default text to display when no option is selected.\n   * @group Props\n   */\n  placeholder;\n  /**\n   * Placeholder text to show when filter input is empty.\n   * @group Props\n   */\n  filterPlaceholder;\n  /**\n   * Locale to use in filtering. The default locale is the host environment's current locale.\n   * @group Props\n   */\n  filterLocale;\n  /**\n   * Identifier of the accessible input element.\n   * @group Props\n   */\n  inputId;\n  /**\n   * A property to uniquely identify a value in options.\n   * @group Props\n   */\n  dataKey;\n  /**\n   * When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.\n   * @group Props\n   */\n  filterBy;\n  /**\n   * Fields used when filtering the options, defaults to optionLabel.\n   * @group Props\n   */\n  filterFields;\n  /**\n   * When present, it specifies that the component should automatically get focus on load.\n   * @group Props\n   */\n  autofocus;\n  /**\n   * Clears the filter value when hiding the dropdown.\n   * @group Props\n   */\n  resetFilterOnHide = false;\n  /**\n   * Icon class of the dropdown icon.\n   * @group Props\n   */\n  dropdownIcon;\n  /**\n   * Name of the label field of an option.\n   * @group Props\n   */\n  optionLabel;\n  /**\n   * Name of the value field of an option.\n   * @group Props\n   */\n  optionValue;\n  /**\n   * Name of the disabled field of an option.\n   * @group Props\n   */\n  optionDisabled;\n  /**\n   * Name of the label field of an option group.\n   * @group Props\n   */\n  optionGroupLabel = 'label';\n  /**\n   * Name of the options field of an option group.\n   * @group Props\n   */\n  optionGroupChildren = 'items';\n  /**\n   * Whether to display the first item as the label if no placeholder is defined and value is null.\n   * @group Props\n   */\n  autoDisplayFirst = true;\n  /**\n   * Whether to display options as grouped when nested options are provided.\n   * @deprecated since v17.3.0, set initial value by model instead.\n   * @group Props\n   */\n  group;\n  /**\n   * When enabled, a clear icon is displayed to clear the value.\n   * @group Props\n   */\n  showClear;\n  /**\n   * Text to display when filtering does not return any results. Defaults to global value in i18n translation configuration.\n   * @group Props\n   */\n  emptyFilterMessage = '';\n  /**\n   * Text to display when there is no data. Defaults to global value in i18n translation configuration.\n   * @group Props\n   */\n  emptyMessage = '';\n  /**\n   * Defines if data is loaded and interacted with in lazy manner.\n   * @group Props\n   */\n  lazy = false;\n  /**\n   * Whether the data should be loaded on demand during scroll.\n   * @group Props\n   */\n  virtualScroll;\n  /**\n   * Height of an item in the list for VirtualScrolling.\n   * @group Props\n   */\n  virtualScrollItemSize;\n  /**\n   * Whether to use the scroller feature. The properties of scroller component can be used like an object in it.\n   * @group Props\n   */\n  virtualScrollOptions;\n  /**\n   * Whether to use overlay API feature. The properties of overlay API can be used like an object in it.\n   * @group Props\n   */\n  overlayOptions;\n  /**\n   * Defines a string that labels the filter input.\n   * @group Props\n   */\n  ariaFilterLabel;\n  /**\n   * Used to define a aria label attribute the current element.\n   * @group Props\n   */\n  ariaLabel;\n  /**\n   * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n   * @group Props\n   */\n  ariaLabelledBy;\n  /**\n   * Defines how the items are filtered.\n   * @group Props\n   */\n  filterMatchMode = 'contains';\n  /**\n   * Maximum number of character allows in the editable input field.\n   * @group Props\n   */\n  maxlength;\n  /**\n   * Advisory information to display in a tooltip on hover.\n   * @group Props\n   */\n  tooltip = '';\n  /**\n   * Position of the tooltip.\n   * @group Props\n   */\n  tooltipPosition = 'right';\n  /**\n   * Type of CSS position.\n   * @group Props\n   */\n  tooltipPositionStyle = 'absolute';\n  /**\n   * Style class of the tooltip.\n   * @group Props\n   */\n  tooltipStyleClass;\n  /**\n   * Fields used when filtering the options, defaults to optionLabel.\n   * @group Props\n   */\n  focusOnHover = false;\n  /**\n   * Determines if the option will be selected on focus.\n   * @group Props\n   */\n  selectOnFocus = false;\n  /**\n   * Whether to focus on the first visible or selected element when the overlay panel is shown.\n   * @group Props\n   */\n  autoOptionFocus = true;\n  /**\n   * Applies focus to the filter element when the overlay is shown.\n   * @group Props\n   */\n  autofocusFilter = true;\n  /**\n   * When present, it specifies that the component should be disabled.\n   * @group Props\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(_disabled) {\n    if (_disabled) {\n      this.focused = false;\n      if (this.overlayVisible) this.hide();\n    }\n    this._disabled = _disabled;\n    if (!this.cd.destroyed) {\n      this.cd.detectChanges();\n    }\n  }\n  /**\n   * Item size of item to be virtual scrolled.\n   * @group Props\n   * @deprecated use virtualScrollItemSize property instead.\n   */\n  get itemSize() {\n    return this._itemSize;\n  }\n  set itemSize(val) {\n    this._itemSize = val;\n    console.warn('The itemSize property is deprecated, use virtualScrollItemSize property instead.');\n  }\n  _itemSize;\n  /**\n   * Whether to automatically manage layering.\n   * @group Props\n   * @deprecated since v14.2.0, use overlayOptions property instead.\n   */\n  get autoZIndex() {\n    return this._autoZIndex;\n  }\n  set autoZIndex(val) {\n    this._autoZIndex = val;\n    console.warn('The autoZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n  }\n  _autoZIndex;\n  /**\n   * Base zIndex value to use in layering.\n   * @group Props\n   * @deprecated since v14.2.0, use overlayOptions property instead.\n   */\n  get baseZIndex() {\n    return this._baseZIndex;\n  }\n  set baseZIndex(val) {\n    this._baseZIndex = val;\n    console.warn('The baseZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n  }\n  _baseZIndex;\n  /**\n   * Transition options of the show animation.\n   * @group Props\n   * @deprecated since v14.2.0, use overlayOptions property instead.\n   */\n  get showTransitionOptions() {\n    return this._showTransitionOptions;\n  }\n  set showTransitionOptions(val) {\n    this._showTransitionOptions = val;\n    console.warn('The showTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n  }\n  _showTransitionOptions;\n  /**\n   * Transition options of the hide animation.\n   * @group Props\n   * @deprecated since v14.2.0, use overlayOptions property instead.\n   */\n  get hideTransitionOptions() {\n    return this._hideTransitionOptions;\n  }\n  set hideTransitionOptions(val) {\n    this._hideTransitionOptions = val;\n    console.warn('The hideTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n  }\n  _hideTransitionOptions;\n  /**\n   * When specified, filter displays with this value.\n   * @group Props\n   */\n  get filterValue() {\n    return this._filterValue();\n  }\n  set filterValue(val) {\n    this._filterValue.set(val);\n  }\n  /**\n   * An array of objects to display as the available options.\n   * @group Props\n   */\n  get options() {\n    const options = this._options();\n    return options;\n  }\n  set options(val) {\n    this._options.set(val);\n  }\n  /**\n   * Callback to invoke when value of dropdown changes.\n   * @param {DropdownChangeEvent} event - custom change event.\n   * @group Emits\n   */\n  onChange = new EventEmitter();\n  /**\n   * Callback to invoke when data is filtered.\n   * @param {DropdownFilterEvent} event - custom filter event.\n   * @group Emits\n   */\n  onFilter = new EventEmitter();\n  /**\n   * Callback to invoke when dropdown gets focus.\n   * @param {Event} event - Browser event.\n   * @group Emits\n   */\n  onFocus = new EventEmitter();\n  /**\n   * Callback to invoke when dropdown loses focus.\n   * @param {Event} event - Browser event.\n   * @group Emits\n   */\n  onBlur = new EventEmitter();\n  /**\n   * Callback to invoke when component is clicked.\n   * @param {MouseEvent} event - Mouse event.\n   * @group Emits\n   */\n  onClick = new EventEmitter();\n  /**\n   * Callback to invoke when dropdown overlay gets visible.\n   * @param {AnimationEvent} event - Animation event.\n   * @group Emits\n   */\n  onShow = new EventEmitter();\n  /**\n   * Callback to invoke when dropdown overlay gets hidden.\n   * @param {AnimationEvent} event - Animation event.\n   * @group Emits\n   */\n  onHide = new EventEmitter();\n  /**\n   * Callback to invoke when dropdown clears the value.\n   * @param {Event} event - Browser event.\n   * @group Emits\n   */\n  onClear = new EventEmitter();\n  /**\n   * Callback to invoke in lazy mode to load new data.\n   * @param {DropdownLazyLoadEvent} event - Lazy load event.\n   * @group Emits\n   */\n  onLazyLoad = new EventEmitter();\n  containerViewChild;\n  filterViewChild;\n  focusInputViewChild;\n  editableInputViewChild;\n  itemsViewChild;\n  scroller;\n  overlayViewChild;\n  firstHiddenFocusableElementOnOverlay;\n  lastHiddenFocusableElementOnOverlay;\n  templates;\n  _disabled;\n  itemsWrapper;\n  itemTemplate;\n  groupTemplate;\n  loaderTemplate;\n  selectedItemTemplate;\n  headerTemplate;\n  filterTemplate;\n  footerTemplate;\n  emptyFilterTemplate;\n  emptyTemplate;\n  dropdownIconTemplate;\n  clearIconTemplate;\n  filterIconTemplate;\n  filterOptions;\n  _options = signal(null);\n  modelValue = signal(null);\n  value;\n  onModelChange = () => {};\n  onModelTouched = () => {};\n  hover;\n  focused;\n  overlayVisible;\n  optionsChanged;\n  panel;\n  dimensionsUpdated;\n  hoveredItem;\n  selectedOptionUpdated;\n  _filterValue = signal(null);\n  searchValue;\n  searchIndex;\n  searchTimeout;\n  previousSearchChar;\n  currentSearchChar;\n  preventModelTouched;\n  focusedOptionIndex = signal(-1);\n  labelId;\n  listId;\n  get emptyMessageLabel() {\n    return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n  }\n  get emptyFilterMessageLabel() {\n    return this.emptyFilterMessage || this.config.getTranslation(TranslationKeys.EMPTY_FILTER_MESSAGE);\n  }\n  get filled() {\n    if (typeof this.modelValue() === 'string') return !!this.modelValue();\n    return this.modelValue() || this.modelValue() != null || this.modelValue() != undefined;\n  }\n  get isVisibleClearIcon() {\n    return this.modelValue() != null && this.hasSelectedOption() && this.showClear && !this.disabled;\n  }\n  get containerClass() {\n    return {\n      'p-dropdown p-component p-inputwrapper': true,\n      'p-disabled': this.disabled,\n      'p-dropdown-clearable': this.showClear && !this.disabled,\n      'p-focus': this.focused,\n      'p-inputwrapper-filled': this.modelValue(),\n      'p-inputwrapper-focus': this.focused || this.overlayVisible\n    };\n  }\n  get inputClass() {\n    const label = this.label();\n    return {\n      'p-dropdown-label p-inputtext': true,\n      'p-placeholder': this.placeholder && label === this.placeholder,\n      'p-dropdown-label-empty': !this.editable && !this.selectedItemTemplate && (!label || label === 'p-emptylabel' || label.length === 0)\n    };\n  }\n  get panelClass() {\n    return {\n      'p-dropdown-panel p-component': true,\n      'p-input-filled': this.config.inputStyle === 'filled',\n      'p-ripple-disabled': this.config.ripple === false\n    };\n  }\n  visibleOptions = computed(() => {\n    const options = this.group ? this.flatOptions(this.options) : this.options || [];\n    if (this._filterValue()) {\n      const filteredOptions = !this.filterBy && !this.filterFields && !this.optionValue ? this.options.filter(option => option.toLowerCase().indexOf(this._filterValue().toLowerCase()) !== -1) : this.filterService.filter(options, this.searchFields(), this._filterValue(), this.filterMatchMode, this.filterLocale);\n      if (this.group) {\n        const optionGroups = this.options || [];\n        const filtered = [];\n        optionGroups.forEach(group => {\n          const groupChildren = this.getOptionGroupChildren(group);\n          const filteredItems = groupChildren.filter(item => filteredOptions.includes(item));\n          if (filteredItems.length > 0) filtered.push({\n            ...group,\n            [typeof this.optionGroupChildren === 'string' ? this.optionGroupChildren : 'items']: [...filteredItems]\n          });\n        });\n        return this.flatOptions(filtered);\n      }\n      return filteredOptions;\n    }\n    return options;\n  });\n  label = computed(() => {\n    const selectedOptionIndex = this.findSelectedOptionIndex();\n    return selectedOptionIndex !== -1 ? this.getOptionLabel(this.visibleOptions()[selectedOptionIndex]) : this.placeholder || 'p-emptylabel';\n  });\n  selectedOption;\n  constructor(el, renderer, cd, zone, filterService, config) {\n    this.el = el;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.zone = zone;\n    this.filterService = filterService;\n    this.config = config;\n    effect(() => {\n      const modelValue = this.modelValue();\n      const visibleOptions = this.visibleOptions();\n      if (visibleOptions && ObjectUtils.isNotEmpty(visibleOptions)) {\n        this.selectedOption = visibleOptions[this.findSelectedOptionIndex()];\n        this.cd.markForCheck();\n      }\n      if (modelValue && this.editable) {\n        this.updateEditableLabel();\n      }\n    });\n  }\n  ngOnInit() {\n    this.id = this.id || UniqueComponentId();\n    this.autoUpdateModel();\n    if (this.filterBy) {\n      this.filterOptions = {\n        filter: value => this.onFilterInputChange(value),\n        reset: () => this.resetFilter()\n      };\n    }\n  }\n  ngAfterViewChecked() {\n    if (this.optionsChanged && this.overlayVisible) {\n      this.optionsChanged = false;\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          if (this.overlayViewChild) {\n            this.overlayViewChild.alignOverlay();\n          }\n        }, 1);\n      });\n    }\n    if (this.selectedOptionUpdated && this.itemsWrapper) {\n      let selectedItem = DomHandler.findSingle(this.overlayViewChild?.overlayViewChild?.nativeElement, 'li.p-highlight');\n      if (selectedItem) {\n        DomHandler.scrollInView(this.itemsWrapper, selectedItem);\n      }\n      this.selectedOptionUpdated = false;\n    }\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'item':\n          this.itemTemplate = item.template;\n          break;\n        case 'selectedItem':\n          this.selectedItemTemplate = item.template;\n          break;\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n        case 'filter':\n          this.filterTemplate = item.template;\n          break;\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n        case 'emptyfilter':\n          this.emptyFilterTemplate = item.template;\n          break;\n        case 'empty':\n          this.emptyTemplate = item.template;\n          break;\n        case 'group':\n          this.groupTemplate = item.template;\n          break;\n        case 'loader':\n          this.loaderTemplate = item.template;\n          break;\n        case 'dropdownicon':\n          this.dropdownIconTemplate = item.template;\n          break;\n        case 'clearicon':\n          this.clearIconTemplate = item.template;\n          break;\n        case 'filtericon':\n          this.filterIconTemplate = item.template;\n          break;\n        default:\n          this.itemTemplate = item.template;\n          break;\n      }\n    });\n  }\n  flatOptions(options) {\n    return (options || []).reduce((result, option, index) => {\n      result.push({\n        optionGroup: option,\n        group: true,\n        index\n      });\n      const optionGroupChildren = this.getOptionGroupChildren(option);\n      optionGroupChildren && optionGroupChildren.forEach(o => result.push(o));\n      return result;\n    }, []);\n  }\n  autoUpdateModel() {\n    if (this.selectOnFocus && this.autoOptionFocus && !this.hasSelectedOption()) {\n      this.focusedOptionIndex.set(this.findFirstFocusedOptionIndex());\n      this.onOptionSelect(null, this.visibleOptions()[this.focusedOptionIndex()], false);\n    }\n    if (this.autoDisplayFirst && !this.modelValue()) {\n      const ind = this.findFirstOptionIndex();\n      this.onOptionSelect(null, this.visibleOptions()[ind], false, true);\n    }\n  }\n  onOptionSelect(event, option, isHide = true, preventChange = false) {\n    const value = this.getOptionValue(option);\n    this.updateModel(value, event);\n    this.focusedOptionIndex.set(this.findSelectedOptionIndex());\n    isHide && setTimeout(() => this.hide(true), 1);\n    preventChange === false && this.onChange.emit({\n      originalEvent: event,\n      value: value\n    });\n  }\n  onOptionMouseEnter(event, index) {\n    if (this.focusOnHover) {\n      this.changeFocusedOptionIndex(event, index);\n    }\n  }\n  updateModel(value, event) {\n    this.value = value;\n    this.onModelChange(value);\n    this.modelValue.set(value);\n    this.selectedOptionUpdated = true;\n  }\n  writeValue(value) {\n    if (this.filter) {\n      this.resetFilter();\n    }\n    this.value = value;\n    this.allowModelChange() && this.onModelChange(value);\n    this.modelValue.set(this.value);\n    this.updateEditableLabel();\n    this.cd.markForCheck();\n  }\n  allowModelChange() {\n    return this.autoDisplayFirst && !this.placeholder && !this.modelValue() && !this.editable && this.options && this.options.length;\n  }\n  isSelected(option) {\n    return this.isValidOption(option) && ObjectUtils.equals(this.modelValue(), this.getOptionValue(option), this.equalityKey());\n  }\n  ngAfterViewInit() {\n    if (this.editable) {\n      this.updateEditableLabel();\n    }\n  }\n  updateEditableLabel() {\n    if (this.editableInputViewChild) {\n      this.editableInputViewChild.nativeElement.value = ObjectUtils.isNotEmpty(this.selectedOption) ? this.getOptionLabel(this.selectedOption) : this.editableInputViewChild.nativeElement.value;\n    }\n  }\n  getOptionIndex(index, scrollerOptions) {\n    return this.virtualScrollerDisabled ? index : scrollerOptions && scrollerOptions.getItemOptions(index)['index'];\n  }\n  getOptionLabel(option) {\n    return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option && option.label !== undefined ? option.label : option;\n  }\n  getOptionValue(option) {\n    return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : !this.optionLabel && option && option.value !== undefined ? option.value : option;\n  }\n  isOptionDisabled(option) {\n    return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : option && option.disabled !== undefined ? option.disabled : false;\n  }\n  getOptionGroupLabel(optionGroup) {\n    return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup && optionGroup.label !== undefined ? optionGroup.label : optionGroup;\n  }\n  getOptionGroupChildren(optionGroup) {\n    return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n  }\n  getAriaPosInset(index) {\n    return (this.optionGroupLabel ? index - this.visibleOptions().slice(0, index).filter(option => this.isOptionGroup(option)).length : index) + 1;\n  }\n  get ariaSetSize() {\n    return this.visibleOptions().filter(option => !this.isOptionGroup(option)).length;\n  }\n  /**\n   * Callback to invoke on filter reset.\n   * @group Method\n   */\n  resetFilter() {\n    this._filterValue.set(null);\n    if (this.filterViewChild && this.filterViewChild.nativeElement) {\n      this.filterViewChild.nativeElement.value = '';\n    }\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n  onContainerClick(event) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n    this.focusInputViewChild?.nativeElement.focus({\n      preventScroll: true\n    });\n    if (event.target.tagName === 'INPUT' || event.target.getAttribute('data-pc-section') === 'clearicon' || event.target.closest('[data-pc-section=\"clearicon\"]')) {\n      return;\n    } else if (!this.overlayViewChild || !this.overlayViewChild.el.nativeElement.contains(event.target)) {\n      this.overlayVisible ? this.hide(true) : this.show(true);\n    }\n    this.onClick.emit(event);\n    this.cd.detectChanges();\n  }\n  isEmpty() {\n    return !this._options() || this.visibleOptions() && this.visibleOptions().length === 0;\n  }\n  onEditableInput(event) {\n    const value = event.target.value;\n    this.searchValue = '';\n    const matched = this.searchOptions(event, value);\n    !matched && this.focusedOptionIndex.set(-1);\n    this.onModelChange(value);\n    this.updateModel(value, event);\n    this.onChange.emit({\n      originalEvent: event,\n      value: value\n    });\n    !this.overlayVisible && ObjectUtils.isNotEmpty(value) && this.show();\n  }\n  /**\n   * Displays the panel.\n   * @group Method\n   */\n  show(isFocus) {\n    this.overlayVisible = true;\n    const focusedOptionIndex = this.focusedOptionIndex() !== -1 ? this.focusedOptionIndex() : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n    this.focusedOptionIndex.set(focusedOptionIndex);\n    if (isFocus) {\n      DomHandler.focus(this.focusInputViewChild?.nativeElement);\n    }\n    this.cd.markForCheck();\n  }\n  onOverlayAnimationStart(event) {\n    if (event.toState === 'visible') {\n      this.itemsWrapper = DomHandler.findSingle(this.overlayViewChild?.overlayViewChild?.nativeElement, this.virtualScroll ? '.p-scroller' : '.p-dropdown-items-wrapper');\n      this.virtualScroll && this.scroller?.setContentEl(this.itemsViewChild?.nativeElement);\n      if (this.options && this.options.length) {\n        if (this.virtualScroll) {\n          const selectedIndex = this.modelValue() ? this.focusedOptionIndex() : -1;\n          if (selectedIndex !== -1) {\n            this.scroller?.scrollToIndex(selectedIndex);\n          }\n        } else {\n          let selectedListItem = DomHandler.findSingle(this.itemsWrapper, '.p-dropdown-item.p-highlight');\n          if (selectedListItem) {\n            selectedListItem.scrollIntoView({\n              block: 'nearest',\n              inline: 'nearest'\n            });\n          }\n        }\n      }\n      if (this.filterViewChild && this.filterViewChild.nativeElement) {\n        this.preventModelTouched = true;\n        if (this.autofocusFilter) {\n          this.filterViewChild.nativeElement.focus();\n        }\n      }\n      this.onShow.emit(event);\n    }\n    if (event.toState === 'void') {\n      this.itemsWrapper = null;\n      this.onModelTouched();\n      this.onHide.emit(event);\n    }\n  }\n  /**\n   * Hides the panel.\n   * @group Method\n   */\n  hide(isFocus) {\n    this.overlayVisible = false;\n    this.focusedOptionIndex.set(-1);\n    if (this.filter && this.resetFilterOnHide) {\n      this.resetFilter();\n    }\n    if (isFocus) {\n      if (this.focusInputViewChild) {\n        DomHandler.focus(this.focusInputViewChild?.nativeElement);\n      }\n      if (this.editable && this.editableInputViewChild) {\n        DomHandler.focus(this.editableInputViewChild?.nativeElement);\n      }\n    }\n    this.cd.markForCheck();\n  }\n  onInputFocus(event) {\n    if (this.disabled) {\n      // For ScreenReaders\n      return;\n    }\n    this.focused = true;\n    const focusedOptionIndex = this.focusedOptionIndex() !== -1 ? this.focusedOptionIndex() : this.overlayVisible && this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n    this.focusedOptionIndex.set(focusedOptionIndex);\n    this.overlayVisible && this.scrollInView(this.focusedOptionIndex());\n    this.onFocus.emit(event);\n  }\n  onInputBlur(event) {\n    this.focused = false;\n    this.overlayVisible === false && this.onBlur.emit(event);\n    if (!this.preventModelTouched) {\n      this.onModelTouched();\n    }\n    this.preventModelTouched = false;\n  }\n  onKeyDown(event, search) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n    switch (event.code) {\n      //down\n      case 'ArrowDown':\n        this.onArrowDownKey(event);\n        break;\n      //up\n      case 'ArrowUp':\n        this.onArrowUpKey(event, this.editable);\n        break;\n      case 'ArrowLeft':\n      case 'ArrowRight':\n        this.onArrowLeftKey(event, this.editable);\n        break;\n      case 'Delete':\n        this.onDeleteKey(event);\n        break;\n      case 'Home':\n        this.onHomeKey(event, this.editable);\n        break;\n      case 'End':\n        this.onEndKey(event, this.editable);\n        break;\n      case 'PageDown':\n        this.onPageDownKey(event);\n        break;\n      case 'PageUp':\n        this.onPageUpKey(event);\n        break;\n      //space\n      case 'Space':\n        this.onSpaceKey(event, search);\n        break;\n      //enter\n      case 'Enter':\n      case 'NumpadEnter':\n        this.onEnterKey(event);\n        break;\n      //escape and tab\n      case 'Escape':\n        this.onEscapeKey(event);\n        break;\n      case 'Tab':\n        this.onTabKey(event);\n        break;\n      case 'Backspace':\n        this.onBackspaceKey(event, this.editable);\n        break;\n      case 'ShiftLeft':\n      case 'ShiftRight':\n        //NOOP\n        break;\n      default:\n        if (!event.metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n          !this.overlayVisible && this.show();\n          !this.editable && this.searchOptions(event, event.key);\n        }\n        break;\n    }\n  }\n  onFilterKeyDown(event) {\n    switch (event.code) {\n      case 'ArrowDown':\n        this.onArrowDownKey(event);\n        break;\n      case 'ArrowUp':\n        this.onArrowUpKey(event, true);\n        break;\n      case 'ArrowLeft':\n      case 'ArrowRight':\n        this.onArrowLeftKey(event, true);\n        break;\n      case 'Home':\n        this.onHomeKey(event, true);\n        break;\n      case 'End':\n        this.onEndKey(event, true);\n        break;\n      case 'Enter':\n        this.onEnterKey(event);\n        break;\n      case 'Escape':\n        this.onEscapeKey(event);\n        break;\n      case 'Tab':\n        this.onTabKey(event, true);\n        break;\n      default:\n        break;\n    }\n  }\n  onFilterBlur(event) {\n    this.focusedOptionIndex.set(-1);\n  }\n  onArrowDownKey(event) {\n    const optionIndex = this.focusedOptionIndex() !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex()) : this.findFirstFocusedOptionIndex();\n    this.changeFocusedOptionIndex(event, optionIndex);\n    !this.overlayVisible && this.show();\n    event.preventDefault();\n  }\n  changeFocusedOptionIndex(event, index) {\n    if (this.focusedOptionIndex() !== index) {\n      this.focusedOptionIndex.set(index);\n      this.scrollInView();\n      if (this.selectOnFocus) {\n        const option = this.visibleOptions()[index];\n        this.onOptionSelect(event, option, false);\n      }\n    }\n  }\n  get virtualScrollerDisabled() {\n    return !this.virtualScroll;\n  }\n  scrollInView(index = -1) {\n    const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n    if (this.itemsViewChild && this.itemsViewChild.nativeElement) {\n      const element = DomHandler.findSingle(this.itemsViewChild.nativeElement, `li[id=\"${id}\"]`);\n      if (element) {\n        element.scrollIntoView && element.scrollIntoView({\n          block: 'nearest',\n          inline: 'nearest'\n        });\n      } else if (!this.virtualScrollerDisabled) {\n        setTimeout(() => {\n          this.virtualScroll && this.scroller?.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex());\n        }, 0);\n      }\n    }\n  }\n  get focusedOptionId() {\n    return this.focusedOptionIndex() !== -1 ? `${this.id}_${this.focusedOptionIndex()}` : null;\n  }\n  hasSelectedOption() {\n    return this.modelValue() !== undefined;\n  }\n  isValidSelectedOption(option) {\n    return this.isValidOption(option) && this.isSelected(option);\n  }\n  equalityKey() {\n    return this.optionValue ? null : this.dataKey;\n  }\n  findFirstFocusedOptionIndex() {\n    const selectedIndex = this.findSelectedOptionIndex();\n    return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n  }\n  findFirstOptionIndex() {\n    return this.visibleOptions().findIndex(option => this.isValidOption(option));\n  }\n  findSelectedOptionIndex() {\n    return this.hasSelectedOption() ? this.visibleOptions().findIndex(option => this.isValidSelectedOption(option)) : -1;\n  }\n  findNextOptionIndex(index) {\n    const matchedOptionIndex = index < this.visibleOptions().length - 1 ? this.visibleOptions().slice(index + 1).findIndex(option => this.isValidOption(option)) : -1;\n    return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n  }\n  findPrevOptionIndex(index) {\n    const matchedOptionIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions().slice(0, index), option => this.isValidOption(option)) : -1;\n    return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n  }\n  findLastOptionIndex() {\n    return ObjectUtils.findLastIndex(this.visibleOptions(), option => this.isValidOption(option));\n  }\n  findLastFocusedOptionIndex() {\n    const selectedIndex = this.findSelectedOptionIndex();\n    return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n  }\n  isValidOption(option) {\n    return option && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n  }\n  isOptionGroup(option) {\n    return this.optionGroupLabel && option.optionGroup && option.group;\n  }\n  onArrowUpKey(event, pressedInInputText = false) {\n    if (event.altKey && !pressedInInputText) {\n      if (this.focusedOptionIndex() !== -1) {\n        const option = this.visibleOptions()[this.focusedOptionIndex()];\n        this.onOptionSelect(event, option);\n      }\n      this.overlayVisible && this.hide();\n      event.preventDefault();\n    } else {\n      const optionIndex = this.focusedOptionIndex() !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex()) : this.findLastFocusedOptionIndex();\n      this.changeFocusedOptionIndex(event, optionIndex);\n      !this.overlayVisible && this.show();\n      event.preventDefault();\n    }\n  }\n  onArrowLeftKey(event, pressedInInputText = false) {\n    pressedInInputText && this.focusedOptionIndex.set(-1);\n  }\n  onDeleteKey(event) {\n    if (this.showClear) {\n      this.clear(event);\n      event.preventDefault();\n    }\n  }\n  onHomeKey(event, pressedInInputText = false) {\n    if (pressedInInputText) {\n      event.currentTarget.setSelectionRange(0, 0);\n      this.focusedOptionIndex.set(-1);\n    } else {\n      this.changeFocusedOptionIndex(event, this.findFirstOptionIndex());\n      !this.overlayVisible && this.show();\n    }\n    event.preventDefault();\n  }\n  onEndKey(event, pressedInInputText = false) {\n    if (pressedInInputText) {\n      const target = event.currentTarget;\n      const len = target.value.length;\n      target.setSelectionRange(len, len);\n      this.focusedOptionIndex.set(-1);\n    } else {\n      this.changeFocusedOptionIndex(event, this.findLastOptionIndex());\n      !this.overlayVisible && this.show();\n    }\n    event.preventDefault();\n  }\n  onPageDownKey(event) {\n    this.scrollInView(this.visibleOptions().length - 1);\n    event.preventDefault();\n  }\n  onPageUpKey(event) {\n    this.scrollInView(0);\n    event.preventDefault();\n  }\n  onSpaceKey(event, pressedInInputText = false) {\n    !this.editable && !pressedInInputText && this.onEnterKey(event);\n  }\n  onEnterKey(event) {\n    if (!this.overlayVisible) {\n      this.onArrowDownKey(event);\n    } else {\n      if (this.focusedOptionIndex() !== -1) {\n        const option = this.visibleOptions()[this.focusedOptionIndex()];\n        this.onOptionSelect(event, option);\n      }\n      this.hide();\n    }\n    event.preventDefault();\n  }\n  onEscapeKey(event) {\n    this.overlayVisible && this.hide(true);\n    event.preventDefault();\n  }\n  onTabKey(event, pressedInInputText = false) {\n    if (!pressedInInputText) {\n      if (this.overlayVisible && this.hasFocusableElements()) {\n        DomHandler.focus(event.shiftKey ? this.lastHiddenFocusableElementOnOverlay.nativeElement : this.firstHiddenFocusableElementOnOverlay.nativeElement);\n        event.preventDefault();\n      } else {\n        if (this.focusedOptionIndex() !== -1) {\n          const option = this.visibleOptions()[this.focusedOptionIndex()];\n          this.onOptionSelect(event, option);\n        }\n        this.overlayVisible && this.hide(this.filter);\n      }\n    }\n  }\n  onFirstHiddenFocus(event) {\n    const focusableEl = event.relatedTarget === this.focusInputViewChild?.nativeElement ? DomHandler.getFirstFocusableElement(this.overlayViewChild.el.nativeElement, ':not(.p-hidden-focusable)') : this.focusInputViewChild.nativeElement;\n    DomHandler.focus(focusableEl);\n  }\n  onLastHiddenFocus(event) {\n    const focusableEl = event.relatedTarget === this.focusInputViewChild?.nativeElement ? DomHandler.getLastFocusableElement(this.overlayViewChild?.overlayViewChild?.nativeElement, ':not([data-p-hidden-focusable=\"true\"])') : this.focusInputViewChild?.nativeElement;\n    DomHandler.focus(focusableEl);\n  }\n  hasFocusableElements() {\n    return DomHandler.getFocusableElements(this.overlayViewChild.overlayViewChild.nativeElement, ':not([data-p-hidden-focusable=\"true\"])').length > 0;\n  }\n  onBackspaceKey(event, pressedInInputText = false) {\n    if (pressedInInputText) {\n      !this.overlayVisible && this.show();\n    }\n  }\n  searchFields() {\n    return this.filterFields || [this.optionLabel];\n  }\n  searchOptions(event, char) {\n    this.searchValue = (this.searchValue || '') + char;\n    let optionIndex = -1;\n    let matched = false;\n    if (this.focusedOptionIndex() !== -1) {\n      optionIndex = this.visibleOptions().slice(this.focusedOptionIndex()).findIndex(option => this.isOptionMatched(option));\n      optionIndex = optionIndex === -1 ? this.visibleOptions().slice(0, this.focusedOptionIndex()).findIndex(option => this.isOptionMatched(option)) : optionIndex + this.focusedOptionIndex();\n    } else {\n      optionIndex = this.visibleOptions().findIndex(option => this.isOptionMatched(option));\n    }\n    if (optionIndex !== -1) {\n      matched = true;\n    }\n    if (optionIndex === -1 && this.focusedOptionIndex() === -1) {\n      optionIndex = this.findFirstFocusedOptionIndex();\n    }\n    if (optionIndex !== -1) {\n      this.changeFocusedOptionIndex(event, optionIndex);\n    }\n    if (this.searchTimeout) {\n      clearTimeout(this.searchTimeout);\n    }\n    this.searchTimeout = setTimeout(() => {\n      this.searchValue = '';\n      this.searchTimeout = null;\n    }, 500);\n    return matched;\n  }\n  isOptionMatched(option) {\n    return this.isValidOption(option) && this.getOptionLabel(option).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n  }\n  onFilterInputChange(event) {\n    let value = event.target.value?.trim();\n    this._filterValue.set(value);\n    this.focusedOptionIndex.set(-1);\n    this.onFilter.emit({\n      originalEvent: event,\n      filter: this._filterValue()\n    });\n    !this.virtualScrollerDisabled && this.scroller.scrollToIndex(0);\n    this.cd.markForCheck();\n  }\n  applyFocus() {\n    if (this.editable) DomHandler.findSingle(this.el.nativeElement, '.p-dropdown-label.p-inputtext').focus();else DomHandler.focus(this.focusInputViewChild?.nativeElement);\n  }\n  /**\n   * Applies focus.\n   * @group Method\n   */\n  focus() {\n    this.applyFocus();\n  }\n  clear(event) {\n    this.updateModel(null, event);\n    this.updateEditableLabel();\n    this.onChange.emit({\n      originalEvent: event,\n      value: this.value\n    });\n    this.onClear.emit(event);\n  }\n  static ɵfac = function Dropdown_Factory(t) {\n    return new (t || Dropdown)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.FilterService), i0.ɵɵdirectiveInject(i3.PrimeNGConfig));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Dropdown,\n    selectors: [[\"p-dropdown\"]],\n    contentQueries: function Dropdown_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function Dropdown_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n        i0.ɵɵviewQuery(_c7, 5);\n        i0.ɵɵviewQuery(_c8, 5);\n        i0.ɵɵviewQuery(_c9, 5);\n        i0.ɵɵviewQuery(_c10, 5);\n        i0.ɵɵviewQuery(_c11, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filterViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.focusInputViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editableInputViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemsViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scroller = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.overlayViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.firstHiddenFocusableElementOnOverlay = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.lastHiddenFocusableElementOnOverlay = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n    hostVars: 4,\n    hostBindings: function Dropdown_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focused || ctx.overlayVisible);\n      }\n    },\n    inputs: {\n      id: \"id\",\n      scrollHeight: \"scrollHeight\",\n      filter: \"filter\",\n      name: \"name\",\n      style: \"style\",\n      panelStyle: \"panelStyle\",\n      styleClass: \"styleClass\",\n      panelStyleClass: \"panelStyleClass\",\n      readonly: \"readonly\",\n      required: \"required\",\n      editable: \"editable\",\n      appendTo: \"appendTo\",\n      tabindex: \"tabindex\",\n      placeholder: \"placeholder\",\n      filterPlaceholder: \"filterPlaceholder\",\n      filterLocale: \"filterLocale\",\n      inputId: \"inputId\",\n      dataKey: \"dataKey\",\n      filterBy: \"filterBy\",\n      filterFields: \"filterFields\",\n      autofocus: \"autofocus\",\n      resetFilterOnHide: \"resetFilterOnHide\",\n      dropdownIcon: \"dropdownIcon\",\n      optionLabel: \"optionLabel\",\n      optionValue: \"optionValue\",\n      optionDisabled: \"optionDisabled\",\n      optionGroupLabel: \"optionGroupLabel\",\n      optionGroupChildren: \"optionGroupChildren\",\n      autoDisplayFirst: \"autoDisplayFirst\",\n      group: \"group\",\n      showClear: \"showClear\",\n      emptyFilterMessage: \"emptyFilterMessage\",\n      emptyMessage: \"emptyMessage\",\n      lazy: \"lazy\",\n      virtualScroll: \"virtualScroll\",\n      virtualScrollItemSize: \"virtualScrollItemSize\",\n      virtualScrollOptions: \"virtualScrollOptions\",\n      overlayOptions: \"overlayOptions\",\n      ariaFilterLabel: \"ariaFilterLabel\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      filterMatchMode: \"filterMatchMode\",\n      maxlength: \"maxlength\",\n      tooltip: \"tooltip\",\n      tooltipPosition: \"tooltipPosition\",\n      tooltipPositionStyle: \"tooltipPositionStyle\",\n      tooltipStyleClass: \"tooltipStyleClass\",\n      focusOnHover: \"focusOnHover\",\n      selectOnFocus: \"selectOnFocus\",\n      autoOptionFocus: \"autoOptionFocus\",\n      autofocusFilter: \"autofocusFilter\",\n      disabled: \"disabled\",\n      itemSize: \"itemSize\",\n      autoZIndex: \"autoZIndex\",\n      baseZIndex: \"baseZIndex\",\n      showTransitionOptions: \"showTransitionOptions\",\n      hideTransitionOptions: \"hideTransitionOptions\",\n      filterValue: \"filterValue\",\n      options: \"options\"\n    },\n    outputs: {\n      onChange: \"onChange\",\n      onFilter: \"onFilter\",\n      onFocus: \"onFocus\",\n      onBlur: \"onBlur\",\n      onClick: \"onClick\",\n      onShow: \"onShow\",\n      onHide: \"onHide\",\n      onClear: \"onClear\",\n      onLazyLoad: \"onLazyLoad\"\n    },\n    features: [i0.ɵɵProvidersFeature([DROPDOWN_VALUE_ACCESSOR])],\n    decls: 11,\n    vars: 20,\n    consts: [[3, \"ngClass\", \"ngStyle\", \"click\"], [\"container\", \"\"], [\"role\", \"combobox\", \"pAutoFocus\", \"\", 3, \"ngClass\", \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\", \"autofocus\", \"focus\", \"blur\", \"keydown\", 4, \"ngIf\"], [\"type\", \"text\", \"aria-haspopup\", \"listbox\", 3, \"ngClass\", \"disabled\", \"input\", \"keydown\", \"focus\", \"blur\", 4, \"ngIf\"], [4, \"ngIf\"], [\"role\", \"button\", \"aria-label\", \"dropdown trigger\", \"aria-haspopup\", \"listbox\", 1, \"p-dropdown-trigger\"], [\"class\", \"p-dropdown-trigger-icon\", 4, \"ngIf\"], [3, \"visible\", \"options\", \"target\", \"appendTo\", \"autoZIndex\", \"baseZIndex\", \"showTransitionOptions\", \"hideTransitionOptions\", \"visibleChange\", \"onAnimationStart\", \"onHide\"], [\"overlay\", \"\"], [\"pTemplate\", \"content\"], [\"role\", \"combobox\", \"pAutoFocus\", \"\", 3, \"ngClass\", \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\", \"autofocus\", \"focus\", \"blur\", \"keydown\"], [\"focusInput\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"defaultPlaceholder\", \"\"], [\"type\", \"text\", \"aria-haspopup\", \"listbox\", 3, \"ngClass\", \"disabled\", \"input\", \"keydown\", \"focus\", \"blur\"], [\"editableInput\", \"\"], [3, \"styleClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-dropdown-clear-icon\", 3, \"click\", 4, \"ngIf\"], [3, \"styleClass\", \"click\"], [1, \"p-dropdown-clear-icon\", 3, \"click\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-dropdown-trigger-icon\", 3, \"ngClass\", 4, \"ngIf\"], [3, \"styleClass\", 4, \"ngIf\"], [1, \"p-dropdown-trigger-icon\", 3, \"ngClass\"], [3, \"styleClass\"], [1, \"p-dropdown-trigger-icon\"], [3, \"ngClass\", \"ngStyle\"], [\"role\", \"presentation\", 1, \"p-hidden-accessible\", \"p-hidden-focusable\", 3, \"focus\"], [\"firstHiddenFocusableEl\", \"\"], [\"class\", \"p-dropdown-header\", 3, \"click\", 4, \"ngIf\"], [1, \"p-dropdown-items-wrapper\"], [3, \"items\", \"style\", \"itemSize\", \"autoSize\", \"lazy\", \"options\", \"onLazyLoad\", 4, \"ngIf\"], [\"buildInItems\", \"\"], [\"lastHiddenFocusableEl\", \"\"], [1, \"p-dropdown-header\", 3, \"click\"], [\"builtInFilterElement\", \"\"], [1, \"p-dropdown-filter-container\"], [\"type\", \"text\", \"autocomplete\", \"off\", 1, \"p-dropdown-filter\", \"p-inputtext\", \"p-component\", 3, \"value\", \"input\", \"keydown\", \"blur\"], [\"filter\", \"\"], [\"class\", \"p-dropdown-filter-icon\", 4, \"ngIf\"], [1, \"p-dropdown-filter-icon\"], [3, \"items\", \"itemSize\", \"autoSize\", \"lazy\", \"options\", \"onLazyLoad\"], [\"scroller\", \"\"], [\"pTemplate\", \"loader\"], [\"role\", \"listbox\", 1, \"p-dropdown-items\", 3, \"ngClass\"], [\"items\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"p-dropdown-empty-message\", 3, \"ngStyle\", 4, \"ngIf\"], [\"role\", \"option\", 1, \"p-dropdown-item-group\", 3, \"ngStyle\"], [3, \"id\", \"option\", \"selected\", \"label\", \"disabled\", \"template\", \"focused\", \"ariaPosInset\", \"ariaSetSize\", \"onClick\", \"onMouseEnter\"], [1, \"p-dropdown-empty-message\", 3, \"ngStyle\"], [\"emptyFilter\", \"\"], [\"empty\", \"\"]],\n    template: function Dropdown_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"click\", function Dropdown_Template_div_click_0_listener($event) {\n          return ctx.onContainerClick($event);\n        });\n        i0.ɵɵtemplate(2, Dropdown_span_2_Template, 6, 21, \"span\", 2);\n        i0.ɵɵtemplate(3, Dropdown_input_3_Template, 2, 5, \"input\", 3);\n        i0.ɵɵtemplate(4, Dropdown_ng_container_4_Template, 3, 2, \"ng-container\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵtemplate(6, Dropdown_ng_container_6_Template, 3, 2, \"ng-container\", 4);\n        i0.ɵɵtemplate(7, Dropdown_span_7_Template, 2, 1, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"p-overlay\", 7, 8);\n        i0.ɵɵlistener(\"visibleChange\", function Dropdown_Template_p_overlay_visibleChange_8_listener($event) {\n          return ctx.overlayVisible = $event;\n        })(\"onAnimationStart\", function Dropdown_Template_p_overlay_onAnimationStart_8_listener($event) {\n          return ctx.onOverlayAnimationStart($event);\n        })(\"onHide\", function Dropdown_Template_p_overlay_onHide_8_listener() {\n          return ctx.hide();\n        });\n        i0.ɵɵtemplate(10, Dropdown_ng_template_10_Template, 13, 19, \"ng-template\", 9);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngClass\", ctx.containerClass)(\"ngStyle\", ctx.style);\n        i0.ɵɵattribute(\"id\", ctx.id);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.editable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.editable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isVisibleClearIcon);\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-expanded\", ctx.overlayVisible)(\"data-pc-section\", \"trigger\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.dropdownIconTemplate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dropdownIconTemplate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"visible\", ctx.overlayVisible)(\"options\", ctx.overlayOptions)(\"target\", \"@parent\")(\"appendTo\", ctx.appendTo)(\"autoZIndex\", ctx.autoZIndex)(\"baseZIndex\", ctx.baseZIndex)(\"showTransitionOptions\", ctx.showTransitionOptions)(\"hideTransitionOptions\", ctx.hideTransitionOptions);\n      }\n    },\n    dependencies: function () {\n      return [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i4.Overlay, i3.PrimeTemplate, i5.Tooltip, i6.Scroller, i7.AutoFocus, TimesIcon, ChevronDownIcon, SearchIcon, DropdownItem];\n    },\n    styles: [\"@layer primeng{.p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;opacity:0}input.p-dropdown-label{cursor:default}.p-dropdown .p-dropdown-panel{min-width:100%}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-item-group{cursor:auto}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Dropdown, [{\n    type: Component,\n    args: [{\n      selector: 'p-dropdown',\n      template: `\n        <div #container [attr.id]=\"id\" [ngClass]=\"containerClass\" (click)=\"onContainerClick($event)\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <span\n                #focusInput\n                [ngClass]=\"inputClass\"\n                *ngIf=\"!editable\"\n                [pTooltip]=\"tooltip\"\n                [tooltipPosition]=\"tooltipPosition\"\n                [positionStyle]=\"tooltipPositionStyle\"\n                [tooltipStyleClass]=\"tooltipStyleClass\"\n                [attr.aria-disabled]=\"disabled\"\n                [attr.id]=\"inputId\"\n                role=\"combobox\"\n                [attr.aria-label]=\"ariaLabel || (label() === 'p-emptylabel' ? undefined : label())\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-haspopup]=\"'listbox'\"\n                [attr.aria-expanded]=\"overlayVisible\"\n                [attr.aria-controls]=\"id + '_list'\"\n                [attr.tabindex]=\"!disabled ? tabindex : -1\"\n                pAutoFocus\n                [autofocus]=\"autofocus\"\n                [attr.aria-activedescendant]=\"focused ? focusedOptionId : undefined\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n                (keydown)=\"onKeyDown($event)\"\n            >\n                <ng-container *ngIf=\"!selectedItemTemplate; else defaultPlaceholder\">{{ label() === 'p-emptylabel' ? '&nbsp;' : label() }}</ng-container>\n                <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: selectedOption }\"></ng-container>\n                <ng-template #defaultPlaceholder>\n                    <span *ngIf=\"!modelValue() && (label() === placeholder || (label() && !placeholder))\">{{ label() === 'p-emptylabel' ? '&nbsp;' : placeholder }}</span>\n                </ng-template>\n            </span>\n            <input\n                *ngIf=\"editable\"\n                #editableInput\n                type=\"text\"\n                [attr.maxlength]=\"maxlength\"\n                [ngClass]=\"inputClass\"\n                [disabled]=\"disabled\"\n                aria-haspopup=\"listbox\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.aria-expanded]=\"overlayVisible\"\n                (input)=\"onEditableInput($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <ng-container *ngIf=\"isVisibleClearIcon\">\n                <TimesIcon [styleClass]=\"'p-dropdown-clear-icon'\" (click)=\"clear($event)\" *ngIf=\"!clearIconTemplate\" [attr.data-pc-section]=\"'clearicon'\" />\n                <span class=\"p-dropdown-clear-icon\" (click)=\"clear($event)\" *ngIf=\"clearIconTemplate\" [attr.data-pc-section]=\"'clearicon'\">\n                    <ng-template *ngTemplateOutlet=\"clearIconTemplate\"></ng-template>\n                </span>\n            </ng-container>\n\n            <div class=\"p-dropdown-trigger\" role=\"button\" aria-label=\"dropdown trigger\" aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\" [attr.data-pc-section]=\"'trigger'\">\n                <ng-container *ngIf=\"!dropdownIconTemplate\">\n                    <span class=\"p-dropdown-trigger-icon\" *ngIf=\"dropdownIcon\" [ngClass]=\"dropdownIcon\"></span>\n                    <ChevronDownIcon *ngIf=\"!dropdownIcon\" [styleClass]=\"'p-dropdown-trigger-icon'\" />\n                </ng-container>\n                <span *ngIf=\"dropdownIconTemplate\" class=\"p-dropdown-trigger-icon\">\n                    <ng-template *ngTemplateOutlet=\"dropdownIconTemplate\"></ng-template>\n                </span>\n            </div>\n\n            <p-overlay\n                #overlay\n                [(visible)]=\"overlayVisible\"\n                [options]=\"overlayOptions\"\n                [target]=\"'@parent'\"\n                [appendTo]=\"appendTo\"\n                [autoZIndex]=\"autoZIndex\"\n                [baseZIndex]=\"baseZIndex\"\n                [showTransitionOptions]=\"showTransitionOptions\"\n                [hideTransitionOptions]=\"hideTransitionOptions\"\n                (onAnimationStart)=\"onOverlayAnimationStart($event)\"\n                (onHide)=\"hide()\"\n            >\n                <ng-template pTemplate=\"content\">\n                    <div [ngClass]=\"'p-dropdown-panel p-component'\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\">\n                        <span\n                            #firstHiddenFocusableEl\n                            role=\"presentation\"\n                            [attr.aria-hidden]=\"true\"\n                            class=\"p-hidden-accessible p-hidden-focusable\"\n                            [attr.tabindex]=\"0\"\n                            (focus)=\"onFirstHiddenFocus($event)\"\n                            [attr.data-p-hidden-accessible]=\"true\"\n                            [attr.data-p-hidden-focusable]=\"true\"\n                        >\n                        </span>\n                        <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                        <div class=\"p-dropdown-header\" *ngIf=\"filter\" (click)=\"$event.stopPropagation()\">\n                            <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                                <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                            </ng-container>\n                            <ng-template #builtInFilterElement>\n                                <div class=\"p-dropdown-filter-container\">\n                                    <input\n                                        #filter\n                                        type=\"text\"\n                                        autocomplete=\"off\"\n                                        [value]=\"_filterValue() || ''\"\n                                        class=\"p-dropdown-filter p-inputtext p-component\"\n                                        [attr.placeholder]=\"filterPlaceholder\"\n                                        [attr.aria-owns]=\"id + '_list'\"\n                                        (input)=\"onFilterInputChange($event)\"\n                                        [attr.aria-label]=\"ariaFilterLabel\"\n                                        [attr.aria-activedescendant]=\"focusedOptionId\"\n                                        (keydown)=\"onFilterKeyDown($event)\"\n                                        (blur)=\"onFilterBlur($event)\"\n                                    />\n                                    <SearchIcon *ngIf=\"!filterIconTemplate\" [styleClass]=\"'p-dropdown-filter-icon'\" />\n                                    <span *ngIf=\"filterIconTemplate\" class=\"p-dropdown-filter-icon\">\n                                        <ng-template *ngTemplateOutlet=\"filterIconTemplate\"></ng-template>\n                                    </span>\n                                </div>\n                            </ng-template>\n                        </div>\n                        <div class=\"p-dropdown-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight || 'auto'\">\n                            <p-scroller\n                                *ngIf=\"virtualScroll\"\n                                #scroller\n                                [items]=\"visibleOptions()\"\n                                [style]=\"{ height: scrollHeight }\"\n                                [itemSize]=\"virtualScrollItemSize || _itemSize\"\n                                [autoSize]=\"true\"\n                                [lazy]=\"lazy\"\n                                (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                                [options]=\"virtualScrollOptions\"\n                            >\n                                <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                                </ng-template>\n                                <ng-container *ngIf=\"loaderTemplate\">\n                                    <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                                        <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                                    </ng-template>\n                                </ng-container>\n                            </p-scroller>\n                            <ng-container *ngIf=\"!virtualScroll\">\n                                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: visibleOptions(), options: {} }\"></ng-container>\n                            </ng-container>\n\n                            <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                                <ul #items [attr.id]=\"id + '_list'\" class=\"p-dropdown-items\" [ngClass]=\"scrollerOptions.contentStyleClass\" [style]=\"scrollerOptions.contentStyle\" role=\"listbox\">\n                                    <ng-template ngFor let-option [ngForOf]=\"items\" let-i=\"index\">\n                                        <ng-container *ngIf=\"option.group\">\n                                            <li class=\"p-dropdown-item-group\" [attr.id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\" role=\"option\">\n                                                <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(option.optionGroup) }}</span>\n                                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: option.optionGroup }\"></ng-container>\n                                            </li>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"!option.group\">\n                                            <p-dropdownItem\n                                                [id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\"\n                                                [option]=\"option\"\n                                                [selected]=\"isSelected(option)\"\n                                                [label]=\"getOptionLabel(option)\"\n                                                [disabled]=\"isOptionDisabled(option)\"\n                                                [template]=\"itemTemplate\"\n                                                [focused]=\"focusedOptionIndex() === getOptionIndex(i, scrollerOptions)\"\n                                                [ariaPosInset]=\"getAriaPosInset(getOptionIndex(i, scrollerOptions))\"\n                                                [ariaSetSize]=\"ariaSetSize\"\n                                                (onClick)=\"onOptionSelect($event, option)\"\n                                                (onMouseEnter)=\"onOptionMouseEnter($event, getOptionIndex(i, scrollerOptions))\"\n                                            ></p-dropdownItem>\n                                        </ng-container>\n                                    </ng-template>\n\n                                    <li *ngIf=\"filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                            {{ emptyFilterMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                                    </li>\n                                    <li *ngIf=\"!filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                            {{ emptyMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                                    </li>\n                                </ul>\n                            </ng-template>\n                        </div>\n                        <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                        <span\n                            #lastHiddenFocusableEl\n                            role=\"presentation\"\n                            [attr.aria-hidden]=\"true\"\n                            class=\"p-hidden-accessible p-hidden-focusable\"\n                            [attr.tabindex]=\"0\"\n                            (focus)=\"onLastHiddenFocus($event)\"\n                            [attr.data-p-hidden-accessible]=\"true\"\n                            [attr.data-p-hidden-focusable]=\"true\"\n                        ></span>\n                    </div>\n                </ng-template>\n            </p-overlay>\n        </div>\n    `,\n      host: {\n        class: 'p-element p-inputwrapper',\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': 'focused || overlayVisible'\n      },\n      providers: [DROPDOWN_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\"@layer primeng{.p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;opacity:0}input.p-dropdown-label{cursor:default}.p-dropdown .p-dropdown-panel{min-width:100%}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-item-group{cursor:auto}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i3.FilterService\n  }, {\n    type: i3.PrimeNGConfig\n  }], {\n    id: [{\n      type: Input\n    }],\n    scrollHeight: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    panelStyle: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    filterPlaceholder: [{\n      type: Input\n    }],\n    filterLocale: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    filterBy: [{\n      type: Input\n    }],\n    filterFields: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input\n    }],\n    resetFilterOnHide: [{\n      type: Input\n    }],\n    dropdownIcon: [{\n      type: Input\n    }],\n    optionLabel: [{\n      type: Input\n    }],\n    optionValue: [{\n      type: Input\n    }],\n    optionDisabled: [{\n      type: Input\n    }],\n    optionGroupLabel: [{\n      type: Input\n    }],\n    optionGroupChildren: [{\n      type: Input\n    }],\n    autoDisplayFirst: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    showClear: [{\n      type: Input\n    }],\n    emptyFilterMessage: [{\n      type: Input\n    }],\n    emptyMessage: [{\n      type: Input\n    }],\n    lazy: [{\n      type: Input\n    }],\n    virtualScroll: [{\n      type: Input\n    }],\n    virtualScrollItemSize: [{\n      type: Input\n    }],\n    virtualScrollOptions: [{\n      type: Input\n    }],\n    overlayOptions: [{\n      type: Input\n    }],\n    ariaFilterLabel: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    filterMatchMode: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    tooltipPosition: [{\n      type: Input\n    }],\n    tooltipPositionStyle: [{\n      type: Input\n    }],\n    tooltipStyleClass: [{\n      type: Input\n    }],\n    focusOnHover: [{\n      type: Input\n    }],\n    selectOnFocus: [{\n      type: Input\n    }],\n    autoOptionFocus: [{\n      type: Input\n    }],\n    autofocusFilter: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    filterValue: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }],\n    onFilter: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    onClear: [{\n      type: Output\n    }],\n    onLazyLoad: [{\n      type: Output\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    filterViewChild: [{\n      type: ViewChild,\n      args: ['filter']\n    }],\n    focusInputViewChild: [{\n      type: ViewChild,\n      args: ['focusInput']\n    }],\n    editableInputViewChild: [{\n      type: ViewChild,\n      args: ['editableInput']\n    }],\n    itemsViewChild: [{\n      type: ViewChild,\n      args: ['items']\n    }],\n    scroller: [{\n      type: ViewChild,\n      args: ['scroller']\n    }],\n    overlayViewChild: [{\n      type: ViewChild,\n      args: ['overlay']\n    }],\n    firstHiddenFocusableElementOnOverlay: [{\n      type: ViewChild,\n      args: ['firstHiddenFocusableEl']\n    }],\n    lastHiddenFocusableElementOnOverlay: [{\n      type: ViewChild,\n      args: ['lastHiddenFocusableEl']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass DropdownModule {\n  static ɵfac = function DropdownModule_Factory(t) {\n    return new (t || DropdownModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DropdownModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule, TimesIcon, ChevronDownIcon, SearchIcon, OverlayModule, SharedModule, ScrollerModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule, TimesIcon, ChevronDownIcon, SearchIcon],\n      exports: [Dropdown, OverlayModule, SharedModule, ScrollerModule],\n      declarations: [Dropdown, DropdownItem]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DROPDOWN_VALUE_ACCESSOR, Dropdown, DropdownItem, DropdownModule };","map":{"version":3,"names":["i1","CommonModule","i0","forwardRef","EventEmitter","Component","Input","Output","signal","computed","effect","ChangeDetectionStrategy","ViewEncapsulation","ViewChild","ContentChildren","NgModule","NG_VALUE_ACCESSOR","i3","TranslationKeys","PrimeTemplate","SharedModule","i7","AutoFocusModule","DomHandler","i4","OverlayModule","i2","RippleModule","i6","ScrollerModule","i5","TooltipModule","ObjectUtils","UniqueComponentId","TimesIcon","ChevronDownIcon","SearchIcon","DROPDOWN_VALUE_ACCESSOR","provide","useExisting","Dropdown","multi","DropdownItem","id","option","selected","focused","label","disabled","visible","itemSize","ariaPosInset","ariaSetSize","template","onClick","onMouseEnter","ngOnInit","onOptionClick","event","emit","onOptionMouseEnter","ɵfac","ɵcmp","NgClass","NgIf","NgTemplateOutlet","NgStyle","Ripple","type","args","selector","host","class","el","renderer","cd","zone","filterService","config","scrollHeight","filter","name","style","panelStyle","styleClass","panelStyleClass","readonly","required","editable","appendTo","tabindex","placeholder","filterPlaceholder","filterLocale","inputId","dataKey","filterBy","filterFields","autofocus","resetFilterOnHide","dropdownIcon","optionLabel","optionValue","optionDisabled","optionGroupLabel","optionGroupChildren","autoDisplayFirst","group","showClear","emptyFilterMessage","emptyMessage","lazy","virtualScroll","virtualScrollItemSize","virtualScrollOptions","overlayOptions","ariaFilterLabel","ariaLabel","ariaLabelledBy","filterMatchMode","maxlength","tooltip","tooltipPosition","tooltipPositionStyle","tooltipStyleClass","focusOnHover","selectOnFocus","autoOptionFocus","autofocusFilter","_disabled","overlayVisible","hide","destroyed","detectChanges","_itemSize","val","console","warn","autoZIndex","_autoZIndex","baseZIndex","_baseZIndex","showTransitionOptions","_showTransitionOptions","hideTransitionOptions","_hideTransitionOptions","filterValue","_filterValue","set","options","_options","onChange","onFilter","onFocus","onBlur","onShow","onHide","onClear","onLazyLoad","containerViewChild","filterViewChild","focusInputViewChild","editableInputViewChild","itemsViewChild","scroller","overlayViewChild","firstHiddenFocusableElementOnOverlay","lastHiddenFocusableElementOnOverlay","templates","itemsWrapper","itemTemplate","groupTemplate","loaderTemplate","selectedItemTemplate","headerTemplate","filterTemplate","footerTemplate","emptyFilterTemplate","emptyTemplate","dropdownIconTemplate","clearIconTemplate","filterIconTemplate","filterOptions","modelValue","value","onModelChange","onModelTouched","hover","optionsChanged","panel","dimensionsUpdated","hoveredItem","selectedOptionUpdated","searchValue","searchIndex","searchTimeout","previousSearchChar","currentSearchChar","preventModelTouched","focusedOptionIndex","labelId","listId","emptyMessageLabel","getTranslation","EMPTY_MESSAGE","emptyFilterMessageLabel","EMPTY_FILTER_MESSAGE","filled","undefined","isVisibleClearIcon","hasSelectedOption","containerClass","inputClass","length","panelClass","inputStyle","ripple","visibleOptions","flatOptions","filteredOptions","toLowerCase","indexOf","searchFields","optionGroups","filtered","forEach","groupChildren","getOptionGroupChildren","filteredItems","item","includes","push","selectedOptionIndex","findSelectedOptionIndex","getOptionLabel","selectedOption","constructor","isNotEmpty","markForCheck","updateEditableLabel","autoUpdateModel","onFilterInputChange","reset","resetFilter","ngAfterViewChecked","runOutsideAngular","setTimeout","alignOverlay","selectedItem","findSingle","nativeElement","scrollInView","ngAfterContentInit","getType","reduce","result","index","optionGroup","o","findFirstFocusedOptionIndex","onOptionSelect","ind","findFirstOptionIndex","isHide","preventChange","getOptionValue","updateModel","originalEvent","changeFocusedOptionIndex","writeValue","allowModelChange","isSelected","isValidOption","equals","equalityKey","ngAfterViewInit","getOptionIndex","scrollerOptions","virtualScrollerDisabled","getItemOptions","resolveFieldData","isOptionDisabled","getOptionGroupLabel","items","getAriaPosInset","slice","isOptionGroup","registerOnChange","fn","registerOnTouched","setDisabledState","onContainerClick","focus","preventScroll","target","tagName","getAttribute","closest","contains","show","isEmpty","onEditableInput","matched","searchOptions","isFocus","onOverlayAnimationStart","toState","setContentEl","selectedIndex","scrollToIndex","selectedListItem","scrollIntoView","block","inline","onInputFocus","onInputBlur","onKeyDown","search","code","onArrowDownKey","onArrowUpKey","onArrowLeftKey","onDeleteKey","onHomeKey","onEndKey","onPageDownKey","onPageUpKey","onSpaceKey","onEnterKey","onEscapeKey","onTabKey","onBackspaceKey","metaKey","isPrintableCharacter","key","onFilterKeyDown","onFilterBlur","optionIndex","findNextOptionIndex","preventDefault","focusedOptionId","element","isValidSelectedOption","findIndex","matchedOptionIndex","findPrevOptionIndex","findLastIndex","findLastOptionIndex","findLastFocusedOptionIndex","pressedInInputText","altKey","clear","currentTarget","setSelectionRange","len","hasFocusableElements","shiftKey","onFirstHiddenFocus","focusableEl","relatedTarget","getFirstFocusableElement","onLastHiddenFocus","getLastFocusableElement","getFocusableElements","char","isOptionMatched","clearTimeout","toLocaleLowerCase","startsWith","trim","applyFocus","ElementRef","Renderer2","ChangeDetectorRef","NgZone","FilterService","PrimeNGConfig","NgForOf","Overlay","Tooltip","Scroller","AutoFocus","providers","changeDetection","OnPush","encapsulation","None","styles","DropdownModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["C:/Users/Administrator/Desktop/R&D/angular/NgRx-simple/node_modules/primeng/fesm2022/primeng-dropdown.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, Input, Output, signal, computed, effect, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i3 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport * as i7 from 'primeng/autofocus';\nimport { AutoFocusModule } from 'primeng/autofocus';\nimport { DomHandler } from 'primeng/dom';\nimport * as i4 from 'primeng/overlay';\nimport { OverlayModule } from 'primeng/overlay';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i6 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\nimport * as i5 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ObjectUtils, UniqueComponentId } from 'primeng/utils';\nimport { TimesIcon } from 'primeng/icons/times';\nimport { ChevronDownIcon } from 'primeng/icons/chevrondown';\nimport { SearchIcon } from 'primeng/icons/search';\n\nconst DROPDOWN_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Dropdown),\n    multi: true\n};\nclass DropdownItem {\n    id;\n    option;\n    selected;\n    focused;\n    label;\n    disabled;\n    visible;\n    itemSize;\n    ariaPosInset;\n    ariaSetSize;\n    template;\n    onClick = new EventEmitter();\n    onMouseEnter = new EventEmitter();\n    ngOnInit() { }\n    onOptionClick(event) {\n        this.onClick.emit(event);\n    }\n    onOptionMouseEnter(event) {\n        this.onMouseEnter.emit(event);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: DropdownItem, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.5\", type: DropdownItem, selector: \"p-dropdownItem\", inputs: { id: \"id\", option: \"option\", selected: \"selected\", focused: \"focused\", label: \"label\", disabled: \"disabled\", visible: \"visible\", itemSize: \"itemSize\", ariaPosInset: \"ariaPosInset\", ariaSetSize: \"ariaSetSize\", template: \"template\" }, outputs: { onClick: \"onClick\", onMouseEnter: \"onMouseEnter\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <li\n            [id]=\"id\"\n            (click)=\"onOptionClick($event)\"\n            (mouseenter)=\"onOptionMouseEnter($event)\"\n            role=\"option\"\n            pRipple\n            [attr.aria-label]=\"label\"\n            [attr.aria-setsize]=\"ariaSetSize\"\n            [attr.aria-posinset]=\"ariaPosInset\"\n            [attr.aria-selected]=\"selected\"\n            [attr.data-p-focused]=\"focused\"\n            [attr.data-p-highlight]=\"selected\"\n            [attr.data-p-disabled]=\"disabled\"\n            [ngStyle]=\"{ height: itemSize + 'px' }\"\n            [ngClass]=\"{ 'p-dropdown-item': true, 'p-highlight': selected, 'p-disabled': disabled, 'p-focus': focused }\"\n        >\n            <span *ngIf=\"!template\">{{ label ?? 'empty' }}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: { $implicit: option }\"></ng-container>\n        </li>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.Ripple, selector: \"[pRipple]\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: DropdownItem, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-dropdownItem',\n                    template: `\n        <li\n            [id]=\"id\"\n            (click)=\"onOptionClick($event)\"\n            (mouseenter)=\"onOptionMouseEnter($event)\"\n            role=\"option\"\n            pRipple\n            [attr.aria-label]=\"label\"\n            [attr.aria-setsize]=\"ariaSetSize\"\n            [attr.aria-posinset]=\"ariaPosInset\"\n            [attr.aria-selected]=\"selected\"\n            [attr.data-p-focused]=\"focused\"\n            [attr.data-p-highlight]=\"selected\"\n            [attr.data-p-disabled]=\"disabled\"\n            [ngStyle]=\"{ height: itemSize + 'px' }\"\n            [ngClass]=\"{ 'p-dropdown-item': true, 'p-highlight': selected, 'p-disabled': disabled, 'p-focus': focused }\"\n        >\n            <span *ngIf=\"!template\">{{ label ?? 'empty' }}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: { $implicit: option }\"></ng-container>\n        </li>\n    `,\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }], option: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], focused: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], visible: [{\n                type: Input\n            }], itemSize: [{\n                type: Input\n            }], ariaPosInset: [{\n                type: Input\n            }], ariaSetSize: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], onClick: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: Output\n            }] } });\n/**\n * Dropdown also known as Select, is used to choose an item from a collection of options.\n * @group Components\n */\nclass Dropdown {\n    el;\n    renderer;\n    cd;\n    zone;\n    filterService;\n    config;\n    /**\n     * Unique identifier of the component\n     * @group Props\n     */\n    id;\n    /**\n     * Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\n     * @group Props\n     */\n    scrollHeight = '200px';\n    /**\n     * When specified, displays an input field to filter the items on keyup.\n     * @group Props\n     */\n    filter;\n    /**\n     * Name of the input element.\n     * @group Props\n     */\n    name;\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    style;\n    /**\n     * Inline style of the overlay panel element.\n     * @group Props\n     */\n    panelStyle;\n    /**\n     * Style class of the element.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Style class of the overlay panel element.\n     * @group Props\n     */\n    panelStyleClass;\n    /**\n     * When present, it specifies that the component cannot be edited.\n     * @group Props\n     */\n    readonly;\n    /**\n     * When present, it specifies that an input field must be filled out before submitting the form.\n     * @group Props\n     */\n    required;\n    /**\n     * When present, custom value instead of predefined options can be entered using the editable input field.\n     * @group Props\n     */\n    editable;\n    /**\n     * Target element to attach the overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n     * @group Props\n     */\n    appendTo;\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    tabindex = 0;\n    /**\n     * Default text to display when no option is selected.\n     * @group Props\n     */\n    placeholder;\n    /**\n     * Placeholder text to show when filter input is empty.\n     * @group Props\n     */\n    filterPlaceholder;\n    /**\n     * Locale to use in filtering. The default locale is the host environment's current locale.\n     * @group Props\n     */\n    filterLocale;\n    /**\n     * Identifier of the accessible input element.\n     * @group Props\n     */\n    inputId;\n    /**\n     * A property to uniquely identify a value in options.\n     * @group Props\n     */\n    dataKey;\n    /**\n     * When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.\n     * @group Props\n     */\n    filterBy;\n    /**\n     * Fields used when filtering the options, defaults to optionLabel.\n     * @group Props\n     */\n    filterFields;\n    /**\n     * When present, it specifies that the component should automatically get focus on load.\n     * @group Props\n     */\n    autofocus;\n    /**\n     * Clears the filter value when hiding the dropdown.\n     * @group Props\n     */\n    resetFilterOnHide = false;\n    /**\n     * Icon class of the dropdown icon.\n     * @group Props\n     */\n    dropdownIcon;\n    /**\n     * Name of the label field of an option.\n     * @group Props\n     */\n    optionLabel;\n    /**\n     * Name of the value field of an option.\n     * @group Props\n     */\n    optionValue;\n    /**\n     * Name of the disabled field of an option.\n     * @group Props\n     */\n    optionDisabled;\n    /**\n     * Name of the label field of an option group.\n     * @group Props\n     */\n    optionGroupLabel = 'label';\n    /**\n     * Name of the options field of an option group.\n     * @group Props\n     */\n    optionGroupChildren = 'items';\n    /**\n     * Whether to display the first item as the label if no placeholder is defined and value is null.\n     * @group Props\n     */\n    autoDisplayFirst = true;\n    /**\n     * Whether to display options as grouped when nested options are provided.\n     * @deprecated since v17.3.0, set initial value by model instead.\n     * @group Props\n     */\n    group;\n    /**\n     * When enabled, a clear icon is displayed to clear the value.\n     * @group Props\n     */\n    showClear;\n    /**\n     * Text to display when filtering does not return any results. Defaults to global value in i18n translation configuration.\n     * @group Props\n     */\n    emptyFilterMessage = '';\n    /**\n     * Text to display when there is no data. Defaults to global value in i18n translation configuration.\n     * @group Props\n     */\n    emptyMessage = '';\n    /**\n     * Defines if data is loaded and interacted with in lazy manner.\n     * @group Props\n     */\n    lazy = false;\n    /**\n     * Whether the data should be loaded on demand during scroll.\n     * @group Props\n     */\n    virtualScroll;\n    /**\n     * Height of an item in the list for VirtualScrolling.\n     * @group Props\n     */\n    virtualScrollItemSize;\n    /**\n     * Whether to use the scroller feature. The properties of scroller component can be used like an object in it.\n     * @group Props\n     */\n    virtualScrollOptions;\n    /**\n     * Whether to use overlay API feature. The properties of overlay API can be used like an object in it.\n     * @group Props\n     */\n    overlayOptions;\n    /**\n     * Defines a string that labels the filter input.\n     * @group Props\n     */\n    ariaFilterLabel;\n    /**\n     * Used to define a aria label attribute the current element.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n     * @group Props\n     */\n    ariaLabelledBy;\n    /**\n     * Defines how the items are filtered.\n     * @group Props\n     */\n    filterMatchMode = 'contains';\n    /**\n     * Maximum number of character allows in the editable input field.\n     * @group Props\n     */\n    maxlength;\n    /**\n     * Advisory information to display in a tooltip on hover.\n     * @group Props\n     */\n    tooltip = '';\n    /**\n     * Position of the tooltip.\n     * @group Props\n     */\n    tooltipPosition = 'right';\n    /**\n     * Type of CSS position.\n     * @group Props\n     */\n    tooltipPositionStyle = 'absolute';\n    /**\n     * Style class of the tooltip.\n     * @group Props\n     */\n    tooltipStyleClass;\n    /**\n     * Fields used when filtering the options, defaults to optionLabel.\n     * @group Props\n     */\n    focusOnHover = false;\n    /**\n     * Determines if the option will be selected on focus.\n     * @group Props\n     */\n    selectOnFocus = false;\n    /**\n     * Whether to focus on the first visible or selected element when the overlay panel is shown.\n     * @group Props\n     */\n    autoOptionFocus = true;\n    /**\n     * Applies focus to the filter element when the overlay is shown.\n     * @group Props\n     */\n    autofocusFilter = true;\n    /**\n     * When present, it specifies that the component should be disabled.\n     * @group Props\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(_disabled) {\n        if (_disabled) {\n            this.focused = false;\n            if (this.overlayVisible)\n                this.hide();\n        }\n        this._disabled = _disabled;\n        if (!this.cd.destroyed) {\n            this.cd.detectChanges();\n        }\n    }\n    /**\n     * Item size of item to be virtual scrolled.\n     * @group Props\n     * @deprecated use virtualScrollItemSize property instead.\n     */\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(val) {\n        this._itemSize = val;\n        console.warn('The itemSize property is deprecated, use virtualScrollItemSize property instead.');\n    }\n    _itemSize;\n    /**\n     * Whether to automatically manage layering.\n     * @group Props\n     * @deprecated since v14.2.0, use overlayOptions property instead.\n     */\n    get autoZIndex() {\n        return this._autoZIndex;\n    }\n    set autoZIndex(val) {\n        this._autoZIndex = val;\n        console.warn('The autoZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    _autoZIndex;\n    /**\n     * Base zIndex value to use in layering.\n     * @group Props\n     * @deprecated since v14.2.0, use overlayOptions property instead.\n     */\n    get baseZIndex() {\n        return this._baseZIndex;\n    }\n    set baseZIndex(val) {\n        this._baseZIndex = val;\n        console.warn('The baseZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    _baseZIndex;\n    /**\n     * Transition options of the show animation.\n     * @group Props\n     * @deprecated since v14.2.0, use overlayOptions property instead.\n     */\n    get showTransitionOptions() {\n        return this._showTransitionOptions;\n    }\n    set showTransitionOptions(val) {\n        this._showTransitionOptions = val;\n        console.warn('The showTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    _showTransitionOptions;\n    /**\n     * Transition options of the hide animation.\n     * @group Props\n     * @deprecated since v14.2.0, use overlayOptions property instead.\n     */\n    get hideTransitionOptions() {\n        return this._hideTransitionOptions;\n    }\n    set hideTransitionOptions(val) {\n        this._hideTransitionOptions = val;\n        console.warn('The hideTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    _hideTransitionOptions;\n    /**\n     * When specified, filter displays with this value.\n     * @group Props\n     */\n    get filterValue() {\n        return this._filterValue();\n    }\n    set filterValue(val) {\n        this._filterValue.set(val);\n    }\n    /**\n     * An array of objects to display as the available options.\n     * @group Props\n     */\n    get options() {\n        const options = this._options();\n        return options;\n    }\n    set options(val) {\n        this._options.set(val);\n    }\n    /**\n     * Callback to invoke when value of dropdown changes.\n     * @param {DropdownChangeEvent} event - custom change event.\n     * @group Emits\n     */\n    onChange = new EventEmitter();\n    /**\n     * Callback to invoke when data is filtered.\n     * @param {DropdownFilterEvent} event - custom filter event.\n     * @group Emits\n     */\n    onFilter = new EventEmitter();\n    /**\n     * Callback to invoke when dropdown gets focus.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onFocus = new EventEmitter();\n    /**\n     * Callback to invoke when dropdown loses focus.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onBlur = new EventEmitter();\n    /**\n     * Callback to invoke when component is clicked.\n     * @param {MouseEvent} event - Mouse event.\n     * @group Emits\n     */\n    onClick = new EventEmitter();\n    /**\n     * Callback to invoke when dropdown overlay gets visible.\n     * @param {AnimationEvent} event - Animation event.\n     * @group Emits\n     */\n    onShow = new EventEmitter();\n    /**\n     * Callback to invoke when dropdown overlay gets hidden.\n     * @param {AnimationEvent} event - Animation event.\n     * @group Emits\n     */\n    onHide = new EventEmitter();\n    /**\n     * Callback to invoke when dropdown clears the value.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onClear = new EventEmitter();\n    /**\n     * Callback to invoke in lazy mode to load new data.\n     * @param {DropdownLazyLoadEvent} event - Lazy load event.\n     * @group Emits\n     */\n    onLazyLoad = new EventEmitter();\n    containerViewChild;\n    filterViewChild;\n    focusInputViewChild;\n    editableInputViewChild;\n    itemsViewChild;\n    scroller;\n    overlayViewChild;\n    firstHiddenFocusableElementOnOverlay;\n    lastHiddenFocusableElementOnOverlay;\n    templates;\n    _disabled;\n    itemsWrapper;\n    itemTemplate;\n    groupTemplate;\n    loaderTemplate;\n    selectedItemTemplate;\n    headerTemplate;\n    filterTemplate;\n    footerTemplate;\n    emptyFilterTemplate;\n    emptyTemplate;\n    dropdownIconTemplate;\n    clearIconTemplate;\n    filterIconTemplate;\n    filterOptions;\n    _options = signal(null);\n    modelValue = signal(null);\n    value;\n    onModelChange = () => { };\n    onModelTouched = () => { };\n    hover;\n    focused;\n    overlayVisible;\n    optionsChanged;\n    panel;\n    dimensionsUpdated;\n    hoveredItem;\n    selectedOptionUpdated;\n    _filterValue = signal(null);\n    searchValue;\n    searchIndex;\n    searchTimeout;\n    previousSearchChar;\n    currentSearchChar;\n    preventModelTouched;\n    focusedOptionIndex = signal(-1);\n    labelId;\n    listId;\n    get emptyMessageLabel() {\n        return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n    }\n    get emptyFilterMessageLabel() {\n        return this.emptyFilterMessage || this.config.getTranslation(TranslationKeys.EMPTY_FILTER_MESSAGE);\n    }\n    get filled() {\n        if (typeof this.modelValue() === 'string')\n            return !!this.modelValue();\n        return this.modelValue() || this.modelValue() != null || this.modelValue() != undefined;\n    }\n    get isVisibleClearIcon() {\n        return this.modelValue() != null && this.hasSelectedOption() && this.showClear && !this.disabled;\n    }\n    get containerClass() {\n        return {\n            'p-dropdown p-component p-inputwrapper': true,\n            'p-disabled': this.disabled,\n            'p-dropdown-clearable': this.showClear && !this.disabled,\n            'p-focus': this.focused,\n            'p-inputwrapper-filled': this.modelValue(),\n            'p-inputwrapper-focus': this.focused || this.overlayVisible\n        };\n    }\n    get inputClass() {\n        const label = this.label();\n        return {\n            'p-dropdown-label p-inputtext': true,\n            'p-placeholder': this.placeholder && label === this.placeholder,\n            'p-dropdown-label-empty': !this.editable && !this.selectedItemTemplate && (!label || label === 'p-emptylabel' || label.length === 0)\n        };\n    }\n    get panelClass() {\n        return {\n            'p-dropdown-panel p-component': true,\n            'p-input-filled': this.config.inputStyle === 'filled',\n            'p-ripple-disabled': this.config.ripple === false\n        };\n    }\n    visibleOptions = computed(() => {\n        const options = this.group ? this.flatOptions(this.options) : this.options || [];\n        if (this._filterValue()) {\n            const filteredOptions = !this.filterBy && !this.filterFields && !this.optionValue\n                ? this.options.filter((option) => option.toLowerCase().indexOf(this._filterValue().toLowerCase()) !== -1)\n                : this.filterService.filter(options, this.searchFields(), this._filterValue(), this.filterMatchMode, this.filterLocale);\n            if (this.group) {\n                const optionGroups = this.options || [];\n                const filtered = [];\n                optionGroups.forEach((group) => {\n                    const groupChildren = this.getOptionGroupChildren(group);\n                    const filteredItems = groupChildren.filter((item) => filteredOptions.includes(item));\n                    if (filteredItems.length > 0)\n                        filtered.push({ ...group, [typeof this.optionGroupChildren === 'string' ? this.optionGroupChildren : 'items']: [...filteredItems] });\n                });\n                return this.flatOptions(filtered);\n            }\n            return filteredOptions;\n        }\n        return options;\n    });\n    label = computed(() => {\n        const selectedOptionIndex = this.findSelectedOptionIndex();\n        return selectedOptionIndex !== -1 ? this.getOptionLabel(this.visibleOptions()[selectedOptionIndex]) : this.placeholder || 'p-emptylabel';\n    });\n    selectedOption;\n    constructor(el, renderer, cd, zone, filterService, config) {\n        this.el = el;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.zone = zone;\n        this.filterService = filterService;\n        this.config = config;\n        effect(() => {\n            const modelValue = this.modelValue();\n            const visibleOptions = this.visibleOptions();\n            if (visibleOptions && ObjectUtils.isNotEmpty(visibleOptions)) {\n                this.selectedOption = visibleOptions[this.findSelectedOptionIndex()];\n                this.cd.markForCheck();\n            }\n            if (modelValue && this.editable) {\n                this.updateEditableLabel();\n            }\n        });\n    }\n    ngOnInit() {\n        this.id = this.id || UniqueComponentId();\n        this.autoUpdateModel();\n        if (this.filterBy) {\n            this.filterOptions = {\n                filter: (value) => this.onFilterInputChange(value),\n                reset: () => this.resetFilter()\n            };\n        }\n    }\n    ngAfterViewChecked() {\n        if (this.optionsChanged && this.overlayVisible) {\n            this.optionsChanged = false;\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    if (this.overlayViewChild) {\n                        this.overlayViewChild.alignOverlay();\n                    }\n                }, 1);\n            });\n        }\n        if (this.selectedOptionUpdated && this.itemsWrapper) {\n            let selectedItem = DomHandler.findSingle(this.overlayViewChild?.overlayViewChild?.nativeElement, 'li.p-highlight');\n            if (selectedItem) {\n                DomHandler.scrollInView(this.itemsWrapper, selectedItem);\n            }\n            this.selectedOptionUpdated = false;\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                    break;\n                case 'selectedItem':\n                    this.selectedItemTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'filter':\n                    this.filterTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                case 'emptyfilter':\n                    this.emptyFilterTemplate = item.template;\n                    break;\n                case 'empty':\n                    this.emptyTemplate = item.template;\n                    break;\n                case 'group':\n                    this.groupTemplate = item.template;\n                    break;\n                case 'loader':\n                    this.loaderTemplate = item.template;\n                    break;\n                case 'dropdownicon':\n                    this.dropdownIconTemplate = item.template;\n                    break;\n                case 'clearicon':\n                    this.clearIconTemplate = item.template;\n                    break;\n                case 'filtericon':\n                    this.filterIconTemplate = item.template;\n                    break;\n                default:\n                    this.itemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    flatOptions(options) {\n        return (options || []).reduce((result, option, index) => {\n            result.push({ optionGroup: option, group: true, index });\n            const optionGroupChildren = this.getOptionGroupChildren(option);\n            optionGroupChildren && optionGroupChildren.forEach((o) => result.push(o));\n            return result;\n        }, []);\n    }\n    autoUpdateModel() {\n        if (this.selectOnFocus && this.autoOptionFocus && !this.hasSelectedOption()) {\n            this.focusedOptionIndex.set(this.findFirstFocusedOptionIndex());\n            this.onOptionSelect(null, this.visibleOptions()[this.focusedOptionIndex()], false);\n        }\n        if (this.autoDisplayFirst && !this.modelValue()) {\n            const ind = this.findFirstOptionIndex();\n            this.onOptionSelect(null, this.visibleOptions()[ind], false, true);\n        }\n    }\n    onOptionSelect(event, option, isHide = true, preventChange = false) {\n        const value = this.getOptionValue(option);\n        this.updateModel(value, event);\n        this.focusedOptionIndex.set(this.findSelectedOptionIndex());\n        isHide && setTimeout(() => this.hide(true), 1);\n        preventChange === false && this.onChange.emit({ originalEvent: event, value: value });\n    }\n    onOptionMouseEnter(event, index) {\n        if (this.focusOnHover) {\n            this.changeFocusedOptionIndex(event, index);\n        }\n    }\n    updateModel(value, event) {\n        this.value = value;\n        this.onModelChange(value);\n        this.modelValue.set(value);\n        this.selectedOptionUpdated = true;\n    }\n    writeValue(value) {\n        if (this.filter) {\n            this.resetFilter();\n        }\n        this.value = value;\n        this.allowModelChange() && this.onModelChange(value);\n        this.modelValue.set(this.value);\n        this.updateEditableLabel();\n        this.cd.markForCheck();\n    }\n    allowModelChange() {\n        return this.autoDisplayFirst && !this.placeholder && !this.modelValue() && !this.editable && this.options && this.options.length;\n    }\n    isSelected(option) {\n        return this.isValidOption(option) && ObjectUtils.equals(this.modelValue(), this.getOptionValue(option), this.equalityKey());\n    }\n    ngAfterViewInit() {\n        if (this.editable) {\n            this.updateEditableLabel();\n        }\n    }\n    updateEditableLabel() {\n        if (this.editableInputViewChild) {\n            this.editableInputViewChild.nativeElement.value = ObjectUtils.isNotEmpty(this.selectedOption) ? this.getOptionLabel(this.selectedOption) : this.editableInputViewChild.nativeElement.value;\n        }\n    }\n    getOptionIndex(index, scrollerOptions) {\n        return this.virtualScrollerDisabled ? index : scrollerOptions && scrollerOptions.getItemOptions(index)['index'];\n    }\n    getOptionLabel(option) {\n        return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option && option.label !== undefined ? option.label : option;\n    }\n    getOptionValue(option) {\n        return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : !this.optionLabel && option && option.value !== undefined ? option.value : option;\n    }\n    isOptionDisabled(option) {\n        return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : option && option.disabled !== undefined ? option.disabled : false;\n    }\n    getOptionGroupLabel(optionGroup) {\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup && optionGroup.label !== undefined ? optionGroup.label : optionGroup;\n    }\n    getOptionGroupChildren(optionGroup) {\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n    getAriaPosInset(index) {\n        return ((this.optionGroupLabel\n            ? index -\n                this.visibleOptions()\n                    .slice(0, index)\n                    .filter((option) => this.isOptionGroup(option)).length\n            : index) + 1);\n    }\n    get ariaSetSize() {\n        return this.visibleOptions().filter((option) => !this.isOptionGroup(option)).length;\n    }\n    /**\n     * Callback to invoke on filter reset.\n     * @group Method\n     */\n    resetFilter() {\n        this._filterValue.set(null);\n        if (this.filterViewChild && this.filterViewChild.nativeElement) {\n            this.filterViewChild.nativeElement.value = '';\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    onContainerClick(event) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        this.focusInputViewChild?.nativeElement.focus({ preventScroll: true });\n        if (event.target.tagName === 'INPUT' || event.target.getAttribute('data-pc-section') === 'clearicon' || event.target.closest('[data-pc-section=\"clearicon\"]')) {\n            return;\n        }\n        else if (!this.overlayViewChild || !this.overlayViewChild.el.nativeElement.contains(event.target)) {\n            this.overlayVisible ? this.hide(true) : this.show(true);\n        }\n        this.onClick.emit(event);\n        this.cd.detectChanges();\n    }\n    isEmpty() {\n        return !this._options() || (this.visibleOptions() && this.visibleOptions().length === 0);\n    }\n    onEditableInput(event) {\n        const value = event.target.value;\n        this.searchValue = '';\n        const matched = this.searchOptions(event, value);\n        !matched && this.focusedOptionIndex.set(-1);\n        this.onModelChange(value);\n        this.updateModel(value, event);\n        this.onChange.emit({ originalEvent: event, value: value });\n        !this.overlayVisible && ObjectUtils.isNotEmpty(value) && this.show();\n    }\n    /**\n     * Displays the panel.\n     * @group Method\n     */\n    show(isFocus) {\n        this.overlayVisible = true;\n        const focusedOptionIndex = this.focusedOptionIndex() !== -1 ? this.focusedOptionIndex() : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n        this.focusedOptionIndex.set(focusedOptionIndex);\n        if (isFocus) {\n            DomHandler.focus(this.focusInputViewChild?.nativeElement);\n        }\n        this.cd.markForCheck();\n    }\n    onOverlayAnimationStart(event) {\n        if (event.toState === 'visible') {\n            this.itemsWrapper = DomHandler.findSingle(this.overlayViewChild?.overlayViewChild?.nativeElement, this.virtualScroll ? '.p-scroller' : '.p-dropdown-items-wrapper');\n            this.virtualScroll && this.scroller?.setContentEl(this.itemsViewChild?.nativeElement);\n            if (this.options && this.options.length) {\n                if (this.virtualScroll) {\n                    const selectedIndex = this.modelValue() ? this.focusedOptionIndex() : -1;\n                    if (selectedIndex !== -1) {\n                        this.scroller?.scrollToIndex(selectedIndex);\n                    }\n                }\n                else {\n                    let selectedListItem = DomHandler.findSingle(this.itemsWrapper, '.p-dropdown-item.p-highlight');\n                    if (selectedListItem) {\n                        selectedListItem.scrollIntoView({ block: 'nearest', inline: 'nearest' });\n                    }\n                }\n            }\n            if (this.filterViewChild && this.filterViewChild.nativeElement) {\n                this.preventModelTouched = true;\n                if (this.autofocusFilter) {\n                    this.filterViewChild.nativeElement.focus();\n                }\n            }\n            this.onShow.emit(event);\n        }\n        if (event.toState === 'void') {\n            this.itemsWrapper = null;\n            this.onModelTouched();\n            this.onHide.emit(event);\n        }\n    }\n    /**\n     * Hides the panel.\n     * @group Method\n     */\n    hide(isFocus) {\n        this.overlayVisible = false;\n        this.focusedOptionIndex.set(-1);\n        if (this.filter && this.resetFilterOnHide) {\n            this.resetFilter();\n        }\n        if (isFocus) {\n            if (this.focusInputViewChild) {\n                DomHandler.focus(this.focusInputViewChild?.nativeElement);\n            }\n            if (this.editable && this.editableInputViewChild) {\n                DomHandler.focus(this.editableInputViewChild?.nativeElement);\n            }\n        }\n        this.cd.markForCheck();\n    }\n    onInputFocus(event) {\n        if (this.disabled) {\n            // For ScreenReaders\n            return;\n        }\n        this.focused = true;\n        const focusedOptionIndex = this.focusedOptionIndex() !== -1 ? this.focusedOptionIndex() : this.overlayVisible && this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n        this.focusedOptionIndex.set(focusedOptionIndex);\n        this.overlayVisible && this.scrollInView(this.focusedOptionIndex());\n        this.onFocus.emit(event);\n    }\n    onInputBlur(event) {\n        this.focused = false;\n        this.overlayVisible === false && this.onBlur.emit(event);\n        if (!this.preventModelTouched) {\n            this.onModelTouched();\n        }\n        this.preventModelTouched = false;\n    }\n    onKeyDown(event, search) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        switch (event.code) {\n            //down\n            case 'ArrowDown':\n                this.onArrowDownKey(event);\n                break;\n            //up\n            case 'ArrowUp':\n                this.onArrowUpKey(event, this.editable);\n                break;\n            case 'ArrowLeft':\n            case 'ArrowRight':\n                this.onArrowLeftKey(event, this.editable);\n                break;\n            case 'Delete':\n                this.onDeleteKey(event);\n                break;\n            case 'Home':\n                this.onHomeKey(event, this.editable);\n                break;\n            case 'End':\n                this.onEndKey(event, this.editable);\n                break;\n            case 'PageDown':\n                this.onPageDownKey(event);\n                break;\n            case 'PageUp':\n                this.onPageUpKey(event);\n                break;\n            //space\n            case 'Space':\n                this.onSpaceKey(event, search);\n                break;\n            //enter\n            case 'Enter':\n            case 'NumpadEnter':\n                this.onEnterKey(event);\n                break;\n            //escape and tab\n            case 'Escape':\n                this.onEscapeKey(event);\n                break;\n            case 'Tab':\n                this.onTabKey(event);\n                break;\n            case 'Backspace':\n                this.onBackspaceKey(event, this.editable);\n                break;\n            case 'ShiftLeft':\n            case 'ShiftRight':\n                //NOOP\n                break;\n            default:\n                if (!event.metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n                    !this.overlayVisible && this.show();\n                    !this.editable && this.searchOptions(event, event.key);\n                }\n                break;\n        }\n    }\n    onFilterKeyDown(event) {\n        switch (event.code) {\n            case 'ArrowDown':\n                this.onArrowDownKey(event);\n                break;\n            case 'ArrowUp':\n                this.onArrowUpKey(event, true);\n                break;\n            case 'ArrowLeft':\n            case 'ArrowRight':\n                this.onArrowLeftKey(event, true);\n                break;\n            case 'Home':\n                this.onHomeKey(event, true);\n                break;\n            case 'End':\n                this.onEndKey(event, true);\n                break;\n            case 'Enter':\n                this.onEnterKey(event);\n                break;\n            case 'Escape':\n                this.onEscapeKey(event);\n                break;\n            case 'Tab':\n                this.onTabKey(event, true);\n                break;\n            default:\n                break;\n        }\n    }\n    onFilterBlur(event) {\n        this.focusedOptionIndex.set(-1);\n    }\n    onArrowDownKey(event) {\n        const optionIndex = this.focusedOptionIndex() !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex()) : this.findFirstFocusedOptionIndex();\n        this.changeFocusedOptionIndex(event, optionIndex);\n        !this.overlayVisible && this.show();\n        event.preventDefault();\n    }\n    changeFocusedOptionIndex(event, index) {\n        if (this.focusedOptionIndex() !== index) {\n            this.focusedOptionIndex.set(index);\n            this.scrollInView();\n            if (this.selectOnFocus) {\n                const option = this.visibleOptions()[index];\n                this.onOptionSelect(event, option, false);\n            }\n        }\n    }\n    get virtualScrollerDisabled() {\n        return !this.virtualScroll;\n    }\n    scrollInView(index = -1) {\n        const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n        if (this.itemsViewChild && this.itemsViewChild.nativeElement) {\n            const element = DomHandler.findSingle(this.itemsViewChild.nativeElement, `li[id=\"${id}\"]`);\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'nearest' });\n            }\n            else if (!this.virtualScrollerDisabled) {\n                setTimeout(() => {\n                    this.virtualScroll && this.scroller?.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex());\n                }, 0);\n            }\n        }\n    }\n    get focusedOptionId() {\n        return this.focusedOptionIndex() !== -1 ? `${this.id}_${this.focusedOptionIndex()}` : null;\n    }\n    hasSelectedOption() {\n        return this.modelValue() !== undefined;\n    }\n    isValidSelectedOption(option) {\n        return this.isValidOption(option) && this.isSelected(option);\n    }\n    equalityKey() {\n        return this.optionValue ? null : this.dataKey;\n    }\n    findFirstFocusedOptionIndex() {\n        const selectedIndex = this.findSelectedOptionIndex();\n        return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n    }\n    findFirstOptionIndex() {\n        return this.visibleOptions().findIndex((option) => this.isValidOption(option));\n    }\n    findSelectedOptionIndex() {\n        return this.hasSelectedOption() ? this.visibleOptions().findIndex((option) => this.isValidSelectedOption(option)) : -1;\n    }\n    findNextOptionIndex(index) {\n        const matchedOptionIndex = index < this.visibleOptions().length - 1\n            ? this.visibleOptions()\n                .slice(index + 1)\n                .findIndex((option) => this.isValidOption(option))\n            : -1;\n        return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n    }\n    findPrevOptionIndex(index) {\n        const matchedOptionIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions().slice(0, index), (option) => this.isValidOption(option)) : -1;\n        return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n    }\n    findLastOptionIndex() {\n        return ObjectUtils.findLastIndex(this.visibleOptions(), (option) => this.isValidOption(option));\n    }\n    findLastFocusedOptionIndex() {\n        const selectedIndex = this.findSelectedOptionIndex();\n        return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n    }\n    isValidOption(option) {\n        return option && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n    }\n    isOptionGroup(option) {\n        return this.optionGroupLabel && option.optionGroup && option.group;\n    }\n    onArrowUpKey(event, pressedInInputText = false) {\n        if (event.altKey && !pressedInInputText) {\n            if (this.focusedOptionIndex() !== -1) {\n                const option = this.visibleOptions()[this.focusedOptionIndex()];\n                this.onOptionSelect(event, option);\n            }\n            this.overlayVisible && this.hide();\n            event.preventDefault();\n        }\n        else {\n            const optionIndex = this.focusedOptionIndex() !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex()) : this.findLastFocusedOptionIndex();\n            this.changeFocusedOptionIndex(event, optionIndex);\n            !this.overlayVisible && this.show();\n            event.preventDefault();\n        }\n    }\n    onArrowLeftKey(event, pressedInInputText = false) {\n        pressedInInputText && this.focusedOptionIndex.set(-1);\n    }\n    onDeleteKey(event) {\n        if (this.showClear) {\n            this.clear(event);\n            event.preventDefault();\n        }\n    }\n    onHomeKey(event, pressedInInputText = false) {\n        if (pressedInInputText) {\n            event.currentTarget.setSelectionRange(0, 0);\n            this.focusedOptionIndex.set(-1);\n        }\n        else {\n            this.changeFocusedOptionIndex(event, this.findFirstOptionIndex());\n            !this.overlayVisible && this.show();\n        }\n        event.preventDefault();\n    }\n    onEndKey(event, pressedInInputText = false) {\n        if (pressedInInputText) {\n            const target = event.currentTarget;\n            const len = target.value.length;\n            target.setSelectionRange(len, len);\n            this.focusedOptionIndex.set(-1);\n        }\n        else {\n            this.changeFocusedOptionIndex(event, this.findLastOptionIndex());\n            !this.overlayVisible && this.show();\n        }\n        event.preventDefault();\n    }\n    onPageDownKey(event) {\n        this.scrollInView(this.visibleOptions().length - 1);\n        event.preventDefault();\n    }\n    onPageUpKey(event) {\n        this.scrollInView(0);\n        event.preventDefault();\n    }\n    onSpaceKey(event, pressedInInputText = false) {\n        !this.editable && !pressedInInputText && this.onEnterKey(event);\n    }\n    onEnterKey(event) {\n        if (!this.overlayVisible) {\n            this.onArrowDownKey(event);\n        }\n        else {\n            if (this.focusedOptionIndex() !== -1) {\n                const option = this.visibleOptions()[this.focusedOptionIndex()];\n                this.onOptionSelect(event, option);\n            }\n            this.hide();\n        }\n        event.preventDefault();\n    }\n    onEscapeKey(event) {\n        this.overlayVisible && this.hide(true);\n        event.preventDefault();\n    }\n    onTabKey(event, pressedInInputText = false) {\n        if (!pressedInInputText) {\n            if (this.overlayVisible && this.hasFocusableElements()) {\n                DomHandler.focus(event.shiftKey ? this.lastHiddenFocusableElementOnOverlay.nativeElement : this.firstHiddenFocusableElementOnOverlay.nativeElement);\n                event.preventDefault();\n            }\n            else {\n                if (this.focusedOptionIndex() !== -1) {\n                    const option = this.visibleOptions()[this.focusedOptionIndex()];\n                    this.onOptionSelect(event, option);\n                }\n                this.overlayVisible && this.hide(this.filter);\n            }\n        }\n    }\n    onFirstHiddenFocus(event) {\n        const focusableEl = event.relatedTarget === this.focusInputViewChild?.nativeElement ? DomHandler.getFirstFocusableElement(this.overlayViewChild.el.nativeElement, ':not(.p-hidden-focusable)') : this.focusInputViewChild.nativeElement;\n        DomHandler.focus(focusableEl);\n    }\n    onLastHiddenFocus(event) {\n        const focusableEl = event.relatedTarget === this.focusInputViewChild?.nativeElement\n            ? DomHandler.getLastFocusableElement(this.overlayViewChild?.overlayViewChild?.nativeElement, ':not([data-p-hidden-focusable=\"true\"])')\n            : this.focusInputViewChild?.nativeElement;\n        DomHandler.focus(focusableEl);\n    }\n    hasFocusableElements() {\n        return DomHandler.getFocusableElements(this.overlayViewChild.overlayViewChild.nativeElement, ':not([data-p-hidden-focusable=\"true\"])').length > 0;\n    }\n    onBackspaceKey(event, pressedInInputText = false) {\n        if (pressedInInputText) {\n            !this.overlayVisible && this.show();\n        }\n    }\n    searchFields() {\n        return this.filterFields || [this.optionLabel];\n    }\n    searchOptions(event, char) {\n        this.searchValue = (this.searchValue || '') + char;\n        let optionIndex = -1;\n        let matched = false;\n        if (this.focusedOptionIndex() !== -1) {\n            optionIndex = this.visibleOptions()\n                .slice(this.focusedOptionIndex())\n                .findIndex((option) => this.isOptionMatched(option));\n            optionIndex =\n                optionIndex === -1\n                    ? this.visibleOptions()\n                        .slice(0, this.focusedOptionIndex())\n                        .findIndex((option) => this.isOptionMatched(option))\n                    : optionIndex + this.focusedOptionIndex();\n        }\n        else {\n            optionIndex = this.visibleOptions().findIndex((option) => this.isOptionMatched(option));\n        }\n        if (optionIndex !== -1) {\n            matched = true;\n        }\n        if (optionIndex === -1 && this.focusedOptionIndex() === -1) {\n            optionIndex = this.findFirstFocusedOptionIndex();\n        }\n        if (optionIndex !== -1) {\n            this.changeFocusedOptionIndex(event, optionIndex);\n        }\n        if (this.searchTimeout) {\n            clearTimeout(this.searchTimeout);\n        }\n        this.searchTimeout = setTimeout(() => {\n            this.searchValue = '';\n            this.searchTimeout = null;\n        }, 500);\n        return matched;\n    }\n    isOptionMatched(option) {\n        return this.isValidOption(option) && this.getOptionLabel(option).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n    }\n    onFilterInputChange(event) {\n        let value = event.target.value?.trim();\n        this._filterValue.set(value);\n        this.focusedOptionIndex.set(-1);\n        this.onFilter.emit({ originalEvent: event, filter: this._filterValue() });\n        !this.virtualScrollerDisabled && this.scroller.scrollToIndex(0);\n        this.cd.markForCheck();\n    }\n    applyFocus() {\n        if (this.editable)\n            DomHandler.findSingle(this.el.nativeElement, '.p-dropdown-label.p-inputtext').focus();\n        else\n            DomHandler.focus(this.focusInputViewChild?.nativeElement);\n    }\n    /**\n     * Applies focus.\n     * @group Method\n     */\n    focus() {\n        this.applyFocus();\n    }\n    clear(event) {\n        this.updateModel(null, event);\n        this.updateEditableLabel();\n        this.onChange.emit({ originalEvent: event, value: this.value });\n        this.onClear.emit(event);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Dropdown, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i3.FilterService }, { token: i3.PrimeNGConfig }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.5\", type: Dropdown, selector: \"p-dropdown\", inputs: { id: \"id\", scrollHeight: \"scrollHeight\", filter: \"filter\", name: \"name\", style: \"style\", panelStyle: \"panelStyle\", styleClass: \"styleClass\", panelStyleClass: \"panelStyleClass\", readonly: \"readonly\", required: \"required\", editable: \"editable\", appendTo: \"appendTo\", tabindex: \"tabindex\", placeholder: \"placeholder\", filterPlaceholder: \"filterPlaceholder\", filterLocale: \"filterLocale\", inputId: \"inputId\", dataKey: \"dataKey\", filterBy: \"filterBy\", filterFields: \"filterFields\", autofocus: \"autofocus\", resetFilterOnHide: \"resetFilterOnHide\", dropdownIcon: \"dropdownIcon\", optionLabel: \"optionLabel\", optionValue: \"optionValue\", optionDisabled: \"optionDisabled\", optionGroupLabel: \"optionGroupLabel\", optionGroupChildren: \"optionGroupChildren\", autoDisplayFirst: \"autoDisplayFirst\", group: \"group\", showClear: \"showClear\", emptyFilterMessage: \"emptyFilterMessage\", emptyMessage: \"emptyMessage\", lazy: \"lazy\", virtualScroll: \"virtualScroll\", virtualScrollItemSize: \"virtualScrollItemSize\", virtualScrollOptions: \"virtualScrollOptions\", overlayOptions: \"overlayOptions\", ariaFilterLabel: \"ariaFilterLabel\", ariaLabel: \"ariaLabel\", ariaLabelledBy: \"ariaLabelledBy\", filterMatchMode: \"filterMatchMode\", maxlength: \"maxlength\", tooltip: \"tooltip\", tooltipPosition: \"tooltipPosition\", tooltipPositionStyle: \"tooltipPositionStyle\", tooltipStyleClass: \"tooltipStyleClass\", focusOnHover: \"focusOnHover\", selectOnFocus: \"selectOnFocus\", autoOptionFocus: \"autoOptionFocus\", autofocusFilter: \"autofocusFilter\", disabled: \"disabled\", itemSize: \"itemSize\", autoZIndex: \"autoZIndex\", baseZIndex: \"baseZIndex\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\", filterValue: \"filterValue\", options: \"options\" }, outputs: { onChange: \"onChange\", onFilter: \"onFilter\", onFocus: \"onFocus\", onBlur: \"onBlur\", onClick: \"onClick\", onShow: \"onShow\", onHide: \"onHide\", onClear: \"onClear\", onLazyLoad: \"onLazyLoad\" }, host: { properties: { \"class.p-inputwrapper-filled\": \"filled\", \"class.p-inputwrapper-focus\": \"focused || overlayVisible\" }, classAttribute: \"p-element p-inputwrapper\" }, providers: [DROPDOWN_VALUE_ACCESSOR], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }, { propertyName: \"filterViewChild\", first: true, predicate: [\"filter\"], descendants: true }, { propertyName: \"focusInputViewChild\", first: true, predicate: [\"focusInput\"], descendants: true }, { propertyName: \"editableInputViewChild\", first: true, predicate: [\"editableInput\"], descendants: true }, { propertyName: \"itemsViewChild\", first: true, predicate: [\"items\"], descendants: true }, { propertyName: \"scroller\", first: true, predicate: [\"scroller\"], descendants: true }, { propertyName: \"overlayViewChild\", first: true, predicate: [\"overlay\"], descendants: true }, { propertyName: \"firstHiddenFocusableElementOnOverlay\", first: true, predicate: [\"firstHiddenFocusableEl\"], descendants: true }, { propertyName: \"lastHiddenFocusableElementOnOverlay\", first: true, predicate: [\"lastHiddenFocusableEl\"], descendants: true }], ngImport: i0, template: `\n        <div #container [attr.id]=\"id\" [ngClass]=\"containerClass\" (click)=\"onContainerClick($event)\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <span\n                #focusInput\n                [ngClass]=\"inputClass\"\n                *ngIf=\"!editable\"\n                [pTooltip]=\"tooltip\"\n                [tooltipPosition]=\"tooltipPosition\"\n                [positionStyle]=\"tooltipPositionStyle\"\n                [tooltipStyleClass]=\"tooltipStyleClass\"\n                [attr.aria-disabled]=\"disabled\"\n                [attr.id]=\"inputId\"\n                role=\"combobox\"\n                [attr.aria-label]=\"ariaLabel || (label() === 'p-emptylabel' ? undefined : label())\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-haspopup]=\"'listbox'\"\n                [attr.aria-expanded]=\"overlayVisible\"\n                [attr.aria-controls]=\"id + '_list'\"\n                [attr.tabindex]=\"!disabled ? tabindex : -1\"\n                pAutoFocus\n                [autofocus]=\"autofocus\"\n                [attr.aria-activedescendant]=\"focused ? focusedOptionId : undefined\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n                (keydown)=\"onKeyDown($event)\"\n            >\n                <ng-container *ngIf=\"!selectedItemTemplate; else defaultPlaceholder\">{{ label() === 'p-emptylabel' ? '&nbsp;' : label() }}</ng-container>\n                <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: selectedOption }\"></ng-container>\n                <ng-template #defaultPlaceholder>\n                    <span *ngIf=\"!modelValue() && (label() === placeholder || (label() && !placeholder))\">{{ label() === 'p-emptylabel' ? '&nbsp;' : placeholder }}</span>\n                </ng-template>\n            </span>\n            <input\n                *ngIf=\"editable\"\n                #editableInput\n                type=\"text\"\n                [attr.maxlength]=\"maxlength\"\n                [ngClass]=\"inputClass\"\n                [disabled]=\"disabled\"\n                aria-haspopup=\"listbox\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.aria-expanded]=\"overlayVisible\"\n                (input)=\"onEditableInput($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <ng-container *ngIf=\"isVisibleClearIcon\">\n                <TimesIcon [styleClass]=\"'p-dropdown-clear-icon'\" (click)=\"clear($event)\" *ngIf=\"!clearIconTemplate\" [attr.data-pc-section]=\"'clearicon'\" />\n                <span class=\"p-dropdown-clear-icon\" (click)=\"clear($event)\" *ngIf=\"clearIconTemplate\" [attr.data-pc-section]=\"'clearicon'\">\n                    <ng-template *ngTemplateOutlet=\"clearIconTemplate\"></ng-template>\n                </span>\n            </ng-container>\n\n            <div class=\"p-dropdown-trigger\" role=\"button\" aria-label=\"dropdown trigger\" aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\" [attr.data-pc-section]=\"'trigger'\">\n                <ng-container *ngIf=\"!dropdownIconTemplate\">\n                    <span class=\"p-dropdown-trigger-icon\" *ngIf=\"dropdownIcon\" [ngClass]=\"dropdownIcon\"></span>\n                    <ChevronDownIcon *ngIf=\"!dropdownIcon\" [styleClass]=\"'p-dropdown-trigger-icon'\" />\n                </ng-container>\n                <span *ngIf=\"dropdownIconTemplate\" class=\"p-dropdown-trigger-icon\">\n                    <ng-template *ngTemplateOutlet=\"dropdownIconTemplate\"></ng-template>\n                </span>\n            </div>\n\n            <p-overlay\n                #overlay\n                [(visible)]=\"overlayVisible\"\n                [options]=\"overlayOptions\"\n                [target]=\"'@parent'\"\n                [appendTo]=\"appendTo\"\n                [autoZIndex]=\"autoZIndex\"\n                [baseZIndex]=\"baseZIndex\"\n                [showTransitionOptions]=\"showTransitionOptions\"\n                [hideTransitionOptions]=\"hideTransitionOptions\"\n                (onAnimationStart)=\"onOverlayAnimationStart($event)\"\n                (onHide)=\"hide()\"\n            >\n                <ng-template pTemplate=\"content\">\n                    <div [ngClass]=\"'p-dropdown-panel p-component'\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\">\n                        <span\n                            #firstHiddenFocusableEl\n                            role=\"presentation\"\n                            [attr.aria-hidden]=\"true\"\n                            class=\"p-hidden-accessible p-hidden-focusable\"\n                            [attr.tabindex]=\"0\"\n                            (focus)=\"onFirstHiddenFocus($event)\"\n                            [attr.data-p-hidden-accessible]=\"true\"\n                            [attr.data-p-hidden-focusable]=\"true\"\n                        >\n                        </span>\n                        <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                        <div class=\"p-dropdown-header\" *ngIf=\"filter\" (click)=\"$event.stopPropagation()\">\n                            <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                                <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                            </ng-container>\n                            <ng-template #builtInFilterElement>\n                                <div class=\"p-dropdown-filter-container\">\n                                    <input\n                                        #filter\n                                        type=\"text\"\n                                        autocomplete=\"off\"\n                                        [value]=\"_filterValue() || ''\"\n                                        class=\"p-dropdown-filter p-inputtext p-component\"\n                                        [attr.placeholder]=\"filterPlaceholder\"\n                                        [attr.aria-owns]=\"id + '_list'\"\n                                        (input)=\"onFilterInputChange($event)\"\n                                        [attr.aria-label]=\"ariaFilterLabel\"\n                                        [attr.aria-activedescendant]=\"focusedOptionId\"\n                                        (keydown)=\"onFilterKeyDown($event)\"\n                                        (blur)=\"onFilterBlur($event)\"\n                                    />\n                                    <SearchIcon *ngIf=\"!filterIconTemplate\" [styleClass]=\"'p-dropdown-filter-icon'\" />\n                                    <span *ngIf=\"filterIconTemplate\" class=\"p-dropdown-filter-icon\">\n                                        <ng-template *ngTemplateOutlet=\"filterIconTemplate\"></ng-template>\n                                    </span>\n                                </div>\n                            </ng-template>\n                        </div>\n                        <div class=\"p-dropdown-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight || 'auto'\">\n                            <p-scroller\n                                *ngIf=\"virtualScroll\"\n                                #scroller\n                                [items]=\"visibleOptions()\"\n                                [style]=\"{ height: scrollHeight }\"\n                                [itemSize]=\"virtualScrollItemSize || _itemSize\"\n                                [autoSize]=\"true\"\n                                [lazy]=\"lazy\"\n                                (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                                [options]=\"virtualScrollOptions\"\n                            >\n                                <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                                </ng-template>\n                                <ng-container *ngIf=\"loaderTemplate\">\n                                    <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                                        <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                                    </ng-template>\n                                </ng-container>\n                            </p-scroller>\n                            <ng-container *ngIf=\"!virtualScroll\">\n                                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: visibleOptions(), options: {} }\"></ng-container>\n                            </ng-container>\n\n                            <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                                <ul #items [attr.id]=\"id + '_list'\" class=\"p-dropdown-items\" [ngClass]=\"scrollerOptions.contentStyleClass\" [style]=\"scrollerOptions.contentStyle\" role=\"listbox\">\n                                    <ng-template ngFor let-option [ngForOf]=\"items\" let-i=\"index\">\n                                        <ng-container *ngIf=\"option.group\">\n                                            <li class=\"p-dropdown-item-group\" [attr.id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\" role=\"option\">\n                                                <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(option.optionGroup) }}</span>\n                                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: option.optionGroup }\"></ng-container>\n                                            </li>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"!option.group\">\n                                            <p-dropdownItem\n                                                [id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\"\n                                                [option]=\"option\"\n                                                [selected]=\"isSelected(option)\"\n                                                [label]=\"getOptionLabel(option)\"\n                                                [disabled]=\"isOptionDisabled(option)\"\n                                                [template]=\"itemTemplate\"\n                                                [focused]=\"focusedOptionIndex() === getOptionIndex(i, scrollerOptions)\"\n                                                [ariaPosInset]=\"getAriaPosInset(getOptionIndex(i, scrollerOptions))\"\n                                                [ariaSetSize]=\"ariaSetSize\"\n                                                (onClick)=\"onOptionSelect($event, option)\"\n                                                (onMouseEnter)=\"onOptionMouseEnter($event, getOptionIndex(i, scrollerOptions))\"\n                                            ></p-dropdownItem>\n                                        </ng-container>\n                                    </ng-template>\n\n                                    <li *ngIf=\"filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                            {{ emptyFilterMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                                    </li>\n                                    <li *ngIf=\"!filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                            {{ emptyMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                                    </li>\n                                </ul>\n                            </ng-template>\n                        </div>\n                        <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                        <span\n                            #lastHiddenFocusableEl\n                            role=\"presentation\"\n                            [attr.aria-hidden]=\"true\"\n                            class=\"p-hidden-accessible p-hidden-focusable\"\n                            [attr.tabindex]=\"0\"\n                            (focus)=\"onLastHiddenFocus($event)\"\n                            [attr.data-p-hidden-accessible]=\"true\"\n                            [attr.data-p-hidden-focusable]=\"true\"\n                        ></span>\n                    </div>\n                </ng-template>\n            </p-overlay>\n        </div>\n    `, isInline: true, styles: [\"@layer primeng{.p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;opacity:0}input.p-dropdown-label{cursor:default}.p-dropdown .p-dropdown-panel{min-width:100%}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-item-group{cursor:auto}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(() => i1.NgClass), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgForOf), selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgIf), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgTemplateOutlet), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgStyle), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: i0.forwardRef(() => i4.Overlay), selector: \"p-overlay\", inputs: [\"visible\", \"mode\", \"style\", \"styleClass\", \"contentStyle\", \"contentStyleClass\", \"target\", \"appendTo\", \"autoZIndex\", \"baseZIndex\", \"showTransitionOptions\", \"hideTransitionOptions\", \"listener\", \"responsive\", \"options\"], outputs: [\"visibleChange\", \"onBeforeShow\", \"onShow\", \"onBeforeHide\", \"onHide\", \"onAnimationStart\", \"onAnimationDone\"] }, { kind: \"directive\", type: i0.forwardRef(() => i3.PrimeTemplate), selector: \"[pTemplate]\", inputs: [\"type\", \"pTemplate\"] }, { kind: \"directive\", type: i0.forwardRef(() => i5.Tooltip), selector: \"[pTooltip]\", inputs: [\"tooltipPosition\", \"tooltipEvent\", \"appendTo\", \"positionStyle\", \"tooltipStyleClass\", \"tooltipZIndex\", \"escape\", \"showDelay\", \"hideDelay\", \"life\", \"positionTop\", \"positionLeft\", \"autoHide\", \"fitContent\", \"hideOnEscape\", \"pTooltip\", \"tooltipDisabled\", \"tooltipOptions\"] }, { kind: \"component\", type: i0.forwardRef(() => i6.Scroller), selector: \"p-scroller\", inputs: [\"id\", \"style\", \"styleClass\", \"tabindex\", \"items\", \"itemSize\", \"scrollHeight\", \"scrollWidth\", \"orientation\", \"step\", \"delay\", \"resizeDelay\", \"appendOnly\", \"inline\", \"lazy\", \"disabled\", \"loaderDisabled\", \"columns\", \"showSpacer\", \"showLoader\", \"numToleratedItems\", \"loading\", \"autoSize\", \"trackBy\", \"options\"], outputs: [\"onLazyLoad\", \"onScroll\", \"onScrollIndexChange\"] }, { kind: \"directive\", type: i0.forwardRef(() => i7.AutoFocus), selector: \"[pAutoFocus]\", inputs: [\"autofocus\"] }, { kind: \"component\", type: i0.forwardRef(() => TimesIcon), selector: \"TimesIcon\" }, { kind: \"component\", type: i0.forwardRef(() => ChevronDownIcon), selector: \"ChevronDownIcon\" }, { kind: \"component\", type: i0.forwardRef(() => SearchIcon), selector: \"SearchIcon\" }, { kind: \"component\", type: i0.forwardRef(() => DropdownItem), selector: \"p-dropdownItem\", inputs: [\"id\", \"option\", \"selected\", \"focused\", \"label\", \"disabled\", \"visible\", \"itemSize\", \"ariaPosInset\", \"ariaSetSize\", \"template\"], outputs: [\"onClick\", \"onMouseEnter\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Dropdown, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-dropdown', template: `\n        <div #container [attr.id]=\"id\" [ngClass]=\"containerClass\" (click)=\"onContainerClick($event)\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <span\n                #focusInput\n                [ngClass]=\"inputClass\"\n                *ngIf=\"!editable\"\n                [pTooltip]=\"tooltip\"\n                [tooltipPosition]=\"tooltipPosition\"\n                [positionStyle]=\"tooltipPositionStyle\"\n                [tooltipStyleClass]=\"tooltipStyleClass\"\n                [attr.aria-disabled]=\"disabled\"\n                [attr.id]=\"inputId\"\n                role=\"combobox\"\n                [attr.aria-label]=\"ariaLabel || (label() === 'p-emptylabel' ? undefined : label())\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-haspopup]=\"'listbox'\"\n                [attr.aria-expanded]=\"overlayVisible\"\n                [attr.aria-controls]=\"id + '_list'\"\n                [attr.tabindex]=\"!disabled ? tabindex : -1\"\n                pAutoFocus\n                [autofocus]=\"autofocus\"\n                [attr.aria-activedescendant]=\"focused ? focusedOptionId : undefined\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n                (keydown)=\"onKeyDown($event)\"\n            >\n                <ng-container *ngIf=\"!selectedItemTemplate; else defaultPlaceholder\">{{ label() === 'p-emptylabel' ? '&nbsp;' : label() }}</ng-container>\n                <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: selectedOption }\"></ng-container>\n                <ng-template #defaultPlaceholder>\n                    <span *ngIf=\"!modelValue() && (label() === placeholder || (label() && !placeholder))\">{{ label() === 'p-emptylabel' ? '&nbsp;' : placeholder }}</span>\n                </ng-template>\n            </span>\n            <input\n                *ngIf=\"editable\"\n                #editableInput\n                type=\"text\"\n                [attr.maxlength]=\"maxlength\"\n                [ngClass]=\"inputClass\"\n                [disabled]=\"disabled\"\n                aria-haspopup=\"listbox\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.aria-expanded]=\"overlayVisible\"\n                (input)=\"onEditableInput($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <ng-container *ngIf=\"isVisibleClearIcon\">\n                <TimesIcon [styleClass]=\"'p-dropdown-clear-icon'\" (click)=\"clear($event)\" *ngIf=\"!clearIconTemplate\" [attr.data-pc-section]=\"'clearicon'\" />\n                <span class=\"p-dropdown-clear-icon\" (click)=\"clear($event)\" *ngIf=\"clearIconTemplate\" [attr.data-pc-section]=\"'clearicon'\">\n                    <ng-template *ngTemplateOutlet=\"clearIconTemplate\"></ng-template>\n                </span>\n            </ng-container>\n\n            <div class=\"p-dropdown-trigger\" role=\"button\" aria-label=\"dropdown trigger\" aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\" [attr.data-pc-section]=\"'trigger'\">\n                <ng-container *ngIf=\"!dropdownIconTemplate\">\n                    <span class=\"p-dropdown-trigger-icon\" *ngIf=\"dropdownIcon\" [ngClass]=\"dropdownIcon\"></span>\n                    <ChevronDownIcon *ngIf=\"!dropdownIcon\" [styleClass]=\"'p-dropdown-trigger-icon'\" />\n                </ng-container>\n                <span *ngIf=\"dropdownIconTemplate\" class=\"p-dropdown-trigger-icon\">\n                    <ng-template *ngTemplateOutlet=\"dropdownIconTemplate\"></ng-template>\n                </span>\n            </div>\n\n            <p-overlay\n                #overlay\n                [(visible)]=\"overlayVisible\"\n                [options]=\"overlayOptions\"\n                [target]=\"'@parent'\"\n                [appendTo]=\"appendTo\"\n                [autoZIndex]=\"autoZIndex\"\n                [baseZIndex]=\"baseZIndex\"\n                [showTransitionOptions]=\"showTransitionOptions\"\n                [hideTransitionOptions]=\"hideTransitionOptions\"\n                (onAnimationStart)=\"onOverlayAnimationStart($event)\"\n                (onHide)=\"hide()\"\n            >\n                <ng-template pTemplate=\"content\">\n                    <div [ngClass]=\"'p-dropdown-panel p-component'\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\">\n                        <span\n                            #firstHiddenFocusableEl\n                            role=\"presentation\"\n                            [attr.aria-hidden]=\"true\"\n                            class=\"p-hidden-accessible p-hidden-focusable\"\n                            [attr.tabindex]=\"0\"\n                            (focus)=\"onFirstHiddenFocus($event)\"\n                            [attr.data-p-hidden-accessible]=\"true\"\n                            [attr.data-p-hidden-focusable]=\"true\"\n                        >\n                        </span>\n                        <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                        <div class=\"p-dropdown-header\" *ngIf=\"filter\" (click)=\"$event.stopPropagation()\">\n                            <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                                <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                            </ng-container>\n                            <ng-template #builtInFilterElement>\n                                <div class=\"p-dropdown-filter-container\">\n                                    <input\n                                        #filter\n                                        type=\"text\"\n                                        autocomplete=\"off\"\n                                        [value]=\"_filterValue() || ''\"\n                                        class=\"p-dropdown-filter p-inputtext p-component\"\n                                        [attr.placeholder]=\"filterPlaceholder\"\n                                        [attr.aria-owns]=\"id + '_list'\"\n                                        (input)=\"onFilterInputChange($event)\"\n                                        [attr.aria-label]=\"ariaFilterLabel\"\n                                        [attr.aria-activedescendant]=\"focusedOptionId\"\n                                        (keydown)=\"onFilterKeyDown($event)\"\n                                        (blur)=\"onFilterBlur($event)\"\n                                    />\n                                    <SearchIcon *ngIf=\"!filterIconTemplate\" [styleClass]=\"'p-dropdown-filter-icon'\" />\n                                    <span *ngIf=\"filterIconTemplate\" class=\"p-dropdown-filter-icon\">\n                                        <ng-template *ngTemplateOutlet=\"filterIconTemplate\"></ng-template>\n                                    </span>\n                                </div>\n                            </ng-template>\n                        </div>\n                        <div class=\"p-dropdown-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight || 'auto'\">\n                            <p-scroller\n                                *ngIf=\"virtualScroll\"\n                                #scroller\n                                [items]=\"visibleOptions()\"\n                                [style]=\"{ height: scrollHeight }\"\n                                [itemSize]=\"virtualScrollItemSize || _itemSize\"\n                                [autoSize]=\"true\"\n                                [lazy]=\"lazy\"\n                                (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                                [options]=\"virtualScrollOptions\"\n                            >\n                                <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                                </ng-template>\n                                <ng-container *ngIf=\"loaderTemplate\">\n                                    <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                                        <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                                    </ng-template>\n                                </ng-container>\n                            </p-scroller>\n                            <ng-container *ngIf=\"!virtualScroll\">\n                                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: visibleOptions(), options: {} }\"></ng-container>\n                            </ng-container>\n\n                            <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                                <ul #items [attr.id]=\"id + '_list'\" class=\"p-dropdown-items\" [ngClass]=\"scrollerOptions.contentStyleClass\" [style]=\"scrollerOptions.contentStyle\" role=\"listbox\">\n                                    <ng-template ngFor let-option [ngForOf]=\"items\" let-i=\"index\">\n                                        <ng-container *ngIf=\"option.group\">\n                                            <li class=\"p-dropdown-item-group\" [attr.id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\" role=\"option\">\n                                                <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(option.optionGroup) }}</span>\n                                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: option.optionGroup }\"></ng-container>\n                                            </li>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"!option.group\">\n                                            <p-dropdownItem\n                                                [id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\"\n                                                [option]=\"option\"\n                                                [selected]=\"isSelected(option)\"\n                                                [label]=\"getOptionLabel(option)\"\n                                                [disabled]=\"isOptionDisabled(option)\"\n                                                [template]=\"itemTemplate\"\n                                                [focused]=\"focusedOptionIndex() === getOptionIndex(i, scrollerOptions)\"\n                                                [ariaPosInset]=\"getAriaPosInset(getOptionIndex(i, scrollerOptions))\"\n                                                [ariaSetSize]=\"ariaSetSize\"\n                                                (onClick)=\"onOptionSelect($event, option)\"\n                                                (onMouseEnter)=\"onOptionMouseEnter($event, getOptionIndex(i, scrollerOptions))\"\n                                            ></p-dropdownItem>\n                                        </ng-container>\n                                    </ng-template>\n\n                                    <li *ngIf=\"filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                            {{ emptyFilterMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                                    </li>\n                                    <li *ngIf=\"!filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                            {{ emptyMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                                    </li>\n                                </ul>\n                            </ng-template>\n                        </div>\n                        <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                        <span\n                            #lastHiddenFocusableEl\n                            role=\"presentation\"\n                            [attr.aria-hidden]=\"true\"\n                            class=\"p-hidden-accessible p-hidden-focusable\"\n                            [attr.tabindex]=\"0\"\n                            (focus)=\"onLastHiddenFocus($event)\"\n                            [attr.data-p-hidden-accessible]=\"true\"\n                            [attr.data-p-hidden-focusable]=\"true\"\n                        ></span>\n                    </div>\n                </ng-template>\n            </p-overlay>\n        </div>\n    `, host: {\n                        class: 'p-element p-inputwrapper',\n                        '[class.p-inputwrapper-filled]': 'filled',\n                        '[class.p-inputwrapper-focus]': 'focused || overlayVisible'\n                    }, providers: [DROPDOWN_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\"@layer primeng{.p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;opacity:0}input.p-dropdown-label{cursor:default}.p-dropdown .p-dropdown-panel{min-width:100%}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-item-group{cursor:auto}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i3.FilterService }, { type: i3.PrimeNGConfig }], propDecorators: { id: [{\n                type: Input\n            }], scrollHeight: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], panelStyle: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], panelStyleClass: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], appendTo: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], filterPlaceholder: [{\n                type: Input\n            }], filterLocale: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], filterBy: [{\n                type: Input\n            }], filterFields: [{\n                type: Input\n            }], autofocus: [{\n                type: Input\n            }], resetFilterOnHide: [{\n                type: Input\n            }], dropdownIcon: [{\n                type: Input\n            }], optionLabel: [{\n                type: Input\n            }], optionValue: [{\n                type: Input\n            }], optionDisabled: [{\n                type: Input\n            }], optionGroupLabel: [{\n                type: Input\n            }], optionGroupChildren: [{\n                type: Input\n            }], autoDisplayFirst: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], showClear: [{\n                type: Input\n            }], emptyFilterMessage: [{\n                type: Input\n            }], emptyMessage: [{\n                type: Input\n            }], lazy: [{\n                type: Input\n            }], virtualScroll: [{\n                type: Input\n            }], virtualScrollItemSize: [{\n                type: Input\n            }], virtualScrollOptions: [{\n                type: Input\n            }], overlayOptions: [{\n                type: Input\n            }], ariaFilterLabel: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], filterMatchMode: [{\n                type: Input\n            }], maxlength: [{\n                type: Input\n            }], tooltip: [{\n                type: Input\n            }], tooltipPosition: [{\n                type: Input\n            }], tooltipPositionStyle: [{\n                type: Input\n            }], tooltipStyleClass: [{\n                type: Input\n            }], focusOnHover: [{\n                type: Input\n            }], selectOnFocus: [{\n                type: Input\n            }], autoOptionFocus: [{\n                type: Input\n            }], autofocusFilter: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], itemSize: [{\n                type: Input\n            }], autoZIndex: [{\n                type: Input\n            }], baseZIndex: [{\n                type: Input\n            }], showTransitionOptions: [{\n                type: Input\n            }], hideTransitionOptions: [{\n                type: Input\n            }], filterValue: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], onChange: [{\n                type: Output\n            }], onFilter: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onClick: [{\n                type: Output\n            }], onShow: [{\n                type: Output\n            }], onHide: [{\n                type: Output\n            }], onClear: [{\n                type: Output\n            }], onLazyLoad: [{\n                type: Output\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container']\n            }], filterViewChild: [{\n                type: ViewChild,\n                args: ['filter']\n            }], focusInputViewChild: [{\n                type: ViewChild,\n                args: ['focusInput']\n            }], editableInputViewChild: [{\n                type: ViewChild,\n                args: ['editableInput']\n            }], itemsViewChild: [{\n                type: ViewChild,\n                args: ['items']\n            }], scroller: [{\n                type: ViewChild,\n                args: ['scroller']\n            }], overlayViewChild: [{\n                type: ViewChild,\n                args: ['overlay']\n            }], firstHiddenFocusableElementOnOverlay: [{\n                type: ViewChild,\n                args: ['firstHiddenFocusableEl']\n            }], lastHiddenFocusableElementOnOverlay: [{\n                type: ViewChild,\n                args: ['lastHiddenFocusableEl']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass DropdownModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: DropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.5\", ngImport: i0, type: DropdownModule, declarations: [Dropdown, DropdownItem], imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule, TimesIcon, ChevronDownIcon, SearchIcon], exports: [Dropdown, OverlayModule, SharedModule, ScrollerModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: DropdownModule, imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule, TimesIcon, ChevronDownIcon, SearchIcon, OverlayModule, SharedModule, ScrollerModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: DropdownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule, TimesIcon, ChevronDownIcon, SearchIcon],\n                    exports: [Dropdown, OverlayModule, SharedModule, ScrollerModule],\n                    declarations: [Dropdown, DropdownItem]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DROPDOWN_VALUE_ACCESSOR, Dropdown, DropdownItem, DropdownModule };\n"],"mappings":"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AAI,EAAE9D;IACV,CAAC,CAAC;IAAE8C,WAAW,EAAE,CAAC;MACdgB,IAAI,EAAE9D;IACV,CAAC,CAAC;IAAE+C,QAAQ,EAAE,CAAC;MACXe,IAAI,EAAE9D;IACV,CAAC,CAAC;IAAEgD,OAAO,EAAE,CAAC;MACVc,IAAI,EAAE7D;IACV,CAAC,CAAC;IAAEgD,YAAY,EAAE,CAAC;MACfa,IAAI,EAAE7D;IACV,CAAC;EAAE,CAAC;AAAA;AAChB;AACA;AACA;AACA;AACA,MAAMiC,QAAQ,CAAC;EACXiC,EAAE;EACFC,QAAQ;EACRC,EAAE;EACFC,IAAI;EACJC,aAAa;EACbC,MAAM;EACN;AACJ;AACA;AACA;EACInC,EAAE;EACF;AACJ;AACA;AACA;EACIoC,YAAY,GAAG,OAAO;EACtB;AACJ;AACA;AACA;EACIC,MAAM;EACN;AACJ;AACA;AACA;EACIC,IAAI;EACJ;AACJ;AACA;AACA;EACIC,KAAK;EACL;AACJ;AACA;AACA;EACIC,UAAU;EACV;AACJ;AACA;AACA;EACIC,UAAU;EACV;AACJ;AACA;AACA;EACIC,eAAe;EACf;AACJ;AACA;AACA;EACIC,QAAQ;EACR;AACJ;AACA;AACA;EACIC,QAAQ;EACR;AACJ;AACA;AACA;EACIC,QAAQ;EACR;AACJ;AACA;AACA;EACIC,QAAQ;EACR;AACJ;AACA;AACA;EACIC,QAAQ,GAAG,CAAC;EACZ;AACJ;AACA;AACA;EACIC,WAAW;EACX;AACJ;AACA;AACA;EACIC,iBAAiB;EACjB;AACJ;AACA;AACA;EACIC,YAAY;EACZ;AACJ;AACA;AACA;EACIC,OAAO;EACP;AACJ;AACA;AACA;EACIC,OAAO;EACP;AACJ;AACA;AACA;EACIC,QAAQ;EACR;AACJ;AACA;AACA;EACIC,YAAY;EACZ;AACJ;AACA;AACA;EACIC,SAAS;EACT;AACJ;AACA;AACA;EACIC,iBAAiB,GAAG,KAAK;EACzB;AACJ;AACA;AACA;EACIC,YAAY;EACZ;AACJ;AACA;AACA;EACIC,WAAW;EACX;AACJ;AACA;AACA;EACIC,WAAW;EACX;AACJ;AACA;AACA;EACIC,cAAc;EACd;AACJ;AACA;AACA;EACIC,gBAAgB,GAAG,OAAO;EAC1B;AACJ;AACA;AACA;EACIC,mBAAmB,GAAG,OAAO;EAC7B;AACJ;AACA;AACA;EACIC,gBAAgB,GAAG,IAAI;EACvB;AACJ;AACA;AACA;AACA;EACIC,KAAK;EACL;AACJ;AACA;AACA;EACIC,SAAS;EACT;AACJ;AACA;AACA;EACIC,kBAAkB,GAAG,EAAE;EACvB;AACJ;AACA;AACA;EACIC,YAAY,GAAG,EAAE;EACjB;AACJ;AACA;AACA;EACIC,IAAI,GAAG,KAAK;EACZ;AACJ;AACA;AACA;EACIC,aAAa;EACb;AACJ;AACA;AACA;EACIC,qBAAqB;EACrB;AACJ;AACA;AACA;EACIC,oBAAoB;EACpB;AACJ;AACA;AACA;EACIC,cAAc;EACd;AACJ;AACA;AACA;EACIC,eAAe;EACf;AACJ;AACA;AACA;EACIC,SAAS;EACT;AACJ;AACA;AACA;EACIC,cAAc;EACd;AACJ;AACA;AACA;EACIC,eAAe,GAAG,UAAU;EAC5B;AACJ;AACA;AACA;EACIC,SAAS;EACT;AACJ;AACA;AACA;EACIC,OAAO,GAAG,EAAE;EACZ;AACJ;AACA;AACA;EACIC,eAAe,GAAG,OAAO;EACzB;AACJ;AACA;AACA;EACIC,oBAAoB,GAAG,UAAU;EACjC;AACJ;AACA;AACA;EACIC,iBAAiB;EACjB;AACJ;AACA;AACA;EACIC,YAAY,GAAG,KAAK;EACpB;AACJ;AACA;AACA;EACIC,aAAa,GAAG,KAAK;EACrB;AACJ;AACA;AACA;EACIC,eAAe,GAAG,IAAI;EACtB;AACJ;AACA;AACA;EACIC,eAAe,GAAG,IAAI;EACtB;AACJ;AACA;AACA;EACI,IAAIhF,QAAQ,GAAG;IACX,OAAO,IAAI,CAACiF,SAAS;EACzB;EACA,IAAIjF,QAAQ,CAACiF,SAAS,EAAE;IACpB,IAAIA,SAAS,EAAE;MACX,IAAI,CAACnF,OAAO,GAAG,KAAK;MACpB,IAAI,IAAI,CAACoF,cAAc,EACnB,IAAI,CAACC,IAAI,EAAE;IACnB;IACA,IAAI,CAA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}