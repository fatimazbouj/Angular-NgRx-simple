{"ast":null,"code":"import { style, animate, animation, useAnimation, transition, trigger } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i1 from 'primeng/api';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { ObjectUtils, ZIndexUtils } from 'primeng/utils';\nconst _c0 = [\"overlay\"];\nconst _c1 = [\"content\"];\nfunction Overlay_div_0_div_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c2 = function (a0, a1, a2) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1,\n    transform: a2\n  };\n};\nconst _c3 = function (a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\nconst _c4 = function (a0) {\n  return {\n    mode: a0\n  };\n};\nconst _c5 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nfunction Overlay_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1, 3);\n    i0.ɵɵlistener(\"click\", function Overlay_div_0_div_2_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.onOverlayContentClick($event));\n    })(\"@overlayContentAnimation.start\", function Overlay_div_0_div_2_Template_div_animation_overlayContentAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.onOverlayContentAnimationStart($event));\n    })(\"@overlayContentAnimation.done\", function Overlay_div_0_div_2_Template_div_animation_overlayContentAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.onOverlayContentAnimationDone($event));\n    });\n    i0.ɵɵprojection(2);\n    i0.ɵɵtemplate(3, Overlay_div_0_div_2_ng_container_3_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r2.contentStyleClass);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r2.contentStyle)(\"ngClass\", \"p-overlay-content\")(\"@overlayContentAnimation\", i0.ɵɵpureFunction1(11, _c3, i0.ɵɵpureFunction3(7, _c2, ctx_r2.showTransitionOptions, ctx_r2.hideTransitionOptions, ctx_r2.transformOptions[ctx_r2.modal ? ctx_r2.overlayResponsiveDirection : \"default\"])));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.contentTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(15, _c5, i0.ɵɵpureFunction1(13, _c4, ctx_r2.overlayMode)));\n  }\n}\nconst _c6 = function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n  return {\n    \"p-overlay p-component\": true,\n    \"p-overlay-modal p-component-overlay p-component-overlay-enter\": a1,\n    \"p-overlay-center\": a2,\n    \"p-overlay-top\": a3,\n    \"p-overlay-top-start\": a4,\n    \"p-overlay-top-end\": a5,\n    \"p-overlay-bottom\": a6,\n    \"p-overlay-bottom-start\": a7,\n    \"p-overlay-bottom-end\": a8,\n    \"p-overlay-left\": a9,\n    \"p-overlay-left-start\": a10,\n    \"p-overlay-left-end\": a11,\n    \"p-overlay-right\": a12,\n    \"p-overlay-right-start\": a13,\n    \"p-overlay-right-end\": a14\n  };\n};\nfunction Overlay_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1, 2);\n    i0.ɵɵlistener(\"click\", function Overlay_div_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onOverlayClick());\n    });\n    i0.ɵɵtemplate(2, Overlay_div_0_div_2_Template, 4, 17, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.styleClass);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.style)(\"ngClass\", i0.ɵɵpureFunctionV(5, _c6, [ctx_r0.modal, ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"center\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"top\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"top-start\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"top-end\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"bottom\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"bottom-start\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"bottom-end\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"left\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"left-start\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"left-end\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"right\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"right-start\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"right-end\"]));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.visible);\n  }\n}\nconst _c7 = [\"*\"];\nconst OVERLAY_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Overlay),\n  multi: true\n};\nconst showOverlayContentAnimation = animation([style({\n  transform: '{{transform}}',\n  opacity: 0\n}), animate('{{showTransitionParams}}')]);\nconst hideOverlayContentAnimation = animation([animate('{{hideTransitionParams}}', style({\n  transform: '{{transform}}',\n  opacity: 0\n}))]);\n/**\n * This API allows overlay components to be controlled from the PrimeNGConfig. In this way, all overlay components in the application can have the same behavior.\n * @group Components\n */\nclass Overlay {\n  document;\n  platformId;\n  el;\n  renderer;\n  config;\n  overlayService;\n  cd;\n  zone;\n  /**\n   * The visible property is an input that determines the visibility of the component.\n   * @defaultValue false\n   * @group Props\n   */\n  get visible() {\n    return this._visible;\n  }\n  set visible(value) {\n    this._visible = value;\n    if (this._visible && !this.modalVisible) {\n      this.modalVisible = true;\n    }\n  }\n  /**\n   * The mode property is an input that determines the overlay mode type or string.\n   * @defaultValue null\n   * @group Props\n   */\n  get mode() {\n    return this._mode || this.overlayOptions?.mode;\n  }\n  set mode(value) {\n    this._mode = value;\n  }\n  /**\n   * The style property is an input that determines the style object for the component.\n   * @defaultValue null\n   * @group Props\n   */\n  get style() {\n    return ObjectUtils.merge(this._style, this.modal ? this.overlayResponsiveOptions?.style : this.overlayOptions?.style);\n  }\n  set style(value) {\n    this._style = value;\n  }\n  /**\n   * The styleClass property is an input that determines the CSS class(es) for the component.\n   * @defaultValue null\n   * @group Props\n   */\n  get styleClass() {\n    return ObjectUtils.merge(this._styleClass, this.modal ? this.overlayResponsiveOptions?.styleClass : this.overlayOptions?.styleClass);\n  }\n  set styleClass(value) {\n    this._styleClass = value;\n  }\n  /**\n   * The contentStyle property is an input that determines the style object for the content of the component.\n   * @defaultValue null\n   * @group Props\n   */\n  get contentStyle() {\n    return ObjectUtils.merge(this._contentStyle, this.modal ? this.overlayResponsiveOptions?.contentStyle : this.overlayOptions?.contentStyle);\n  }\n  set contentStyle(value) {\n    this._contentStyle = value;\n  }\n  /**\n   * The contentStyleClass property is an input that determines the CSS class(es) for the content of the component.\n   * @defaultValue null\n   * @group Props\n   */\n  get contentStyleClass() {\n    return ObjectUtils.merge(this._contentStyleClass, this.modal ? this.overlayResponsiveOptions?.contentStyleClass : this.overlayOptions?.contentStyleClass);\n  }\n  set contentStyleClass(value) {\n    this._contentStyleClass = value;\n  }\n  /**\n   * The target property is an input that specifies the target element or selector for the component.\n   * @defaultValue null\n   * @group Props\n   */\n  get target() {\n    const value = this._target || this.overlayOptions?.target;\n    return value === undefined ? '@prev' : value;\n  }\n  set target(value) {\n    this._target = value;\n  }\n  /**\n   * Overlay can be mounted into its location, body or DOM element instance using this option.\n   * @defaultValue null\n   * @group Props\n   */\n  get appendTo() {\n    return this._appendTo || this.overlayOptions?.appendTo;\n  }\n  set appendTo(value) {\n    this._appendTo = value;\n  }\n  /**\n   * The autoZIndex determines whether to automatically manage layering. Its default value is 'false'.\n   * @defaultValue false\n   * @group Props\n   */\n  get autoZIndex() {\n    const value = this._autoZIndex || this.overlayOptions?.autoZIndex;\n    return value === undefined ? true : value;\n  }\n  set autoZIndex(value) {\n    this._autoZIndex = value;\n  }\n  /**\n   * The baseZIndex is base zIndex value to use in layering.\n   * @defaultValue null\n   * @group Props\n   */\n  get baseZIndex() {\n    const value = this._baseZIndex || this.overlayOptions?.baseZIndex;\n    return value === undefined ? 0 : value;\n  }\n  set baseZIndex(value) {\n    this._baseZIndex = value;\n  }\n  /**\n   * Transition options of the show or hide animation.\n   * @defaultValue .12s cubic-bezier(0, 0, 0.2, 1)\n   * @group Props\n   */\n  get showTransitionOptions() {\n    const value = this._showTransitionOptions || this.overlayOptions?.showTransitionOptions;\n    return value === undefined ? '.12s cubic-bezier(0, 0, 0.2, 1)' : value;\n  }\n  set showTransitionOptions(value) {\n    this._showTransitionOptions = value;\n  }\n  /**\n   * The hideTransitionOptions property is an input that determines the CSS transition options for hiding the component.\n   * @defaultValue .1s linear\n   * @group Props\n   */\n  get hideTransitionOptions() {\n    const value = this._hideTransitionOptions || this.overlayOptions?.hideTransitionOptions;\n    return value === undefined ? '.1s linear' : value;\n  }\n  set hideTransitionOptions(value) {\n    this._hideTransitionOptions = value;\n  }\n  /**\n   * The listener property is an input that specifies the listener object for the component.\n   * @defaultValue null\n   * @group Props\n   */\n  get listener() {\n    return this._listener || this.overlayOptions?.listener;\n  }\n  set listener(value) {\n    this._listener = value;\n  }\n  /**\n   * It is the option used to determine in which mode it should appear according to the given media or breakpoint.\n   * @defaultValue null\n   * @group Props\n   */\n  get responsive() {\n    return this._responsive || this.overlayOptions?.responsive;\n  }\n  set responsive(val) {\n    this._responsive = val;\n  }\n  /**\n   * The options property is an input that specifies the overlay options for the component.\n   * @defaultValue null\n   * @group Props\n   */\n  get options() {\n    return this._options;\n  }\n  set options(val) {\n    this._options = val;\n  }\n  /**\n   * This EventEmitter is used to notify changes in the visibility state of a component.\n   * @param {Boolean} boolean - Value of visibility as boolean.\n   * @group Emits\n   */\n  visibleChange = new EventEmitter();\n  /**\n   * Callback to invoke before the overlay is shown.\n   * @param {OverlayOnBeforeShowEvent} event - Custom overlay before show event.\n   * @group Emits\n   */\n  onBeforeShow = new EventEmitter();\n  /**\n   * Callback to invoke when the overlay is shown.\n   * @param {OverlayOnShowEvent} event - Custom overlay show event.\n   * @group Emits\n   */\n  onShow = new EventEmitter();\n  /**\n   * Callback to invoke before the overlay is hidden.\n   * @param {OverlayOnBeforeHideEvent} event - Custom overlay before hide event.\n   * @group Emits\n   */\n  onBeforeHide = new EventEmitter();\n  /**\n   * Callback to invoke when the overlay is hidden\n   * @param {OverlayOnHideEvent} event - Custom hide event.\n   * @group Emits\n   */\n  onHide = new EventEmitter();\n  /**\n   * Callback to invoke when the animation is started.\n   * @param {AnimationEvent} event - Animation event.\n   * @group Emits\n   */\n  onAnimationStart = new EventEmitter();\n  /**\n   * Callback to invoke when the animation is done.\n   * @param {AnimationEvent} event - Animation event.\n   * @group Emits\n   */\n  onAnimationDone = new EventEmitter();\n  templates;\n  overlayViewChild;\n  contentViewChild;\n  contentTemplate;\n  _visible = false;\n  _mode;\n  _style;\n  _styleClass;\n  _contentStyle;\n  _contentStyleClass;\n  _target;\n  _appendTo;\n  _autoZIndex;\n  _baseZIndex;\n  _showTransitionOptions;\n  _hideTransitionOptions;\n  _listener;\n  _responsive;\n  _options;\n  modalVisible = false;\n  isOverlayClicked = false;\n  isOverlayContentClicked = false;\n  scrollHandler;\n  documentClickListener;\n  documentResizeListener;\n  documentKeyboardListener;\n  window;\n  transformOptions = {\n    default: 'scaleY(0.8)',\n    center: 'scale(0.7)',\n    top: 'translate3d(0px, -100%, 0px)',\n    'top-start': 'translate3d(0px, -100%, 0px)',\n    'top-end': 'translate3d(0px, -100%, 0px)',\n    bottom: 'translate3d(0px, 100%, 0px)',\n    'bottom-start': 'translate3d(0px, 100%, 0px)',\n    'bottom-end': 'translate3d(0px, 100%, 0px)',\n    left: 'translate3d(-100%, 0px, 0px)',\n    'left-start': 'translate3d(-100%, 0px, 0px)',\n    'left-end': 'translate3d(-100%, 0px, 0px)',\n    right: 'translate3d(100%, 0px, 0px)',\n    'right-start': 'translate3d(100%, 0px, 0px)',\n    'right-end': 'translate3d(100%, 0px, 0px)'\n  };\n  get modal() {\n    if (isPlatformBrowser(this.platformId)) {\n      return this.mode === 'modal' || this.overlayResponsiveOptions && this.window?.matchMedia(this.overlayResponsiveOptions.media?.replace('@media', '') || `(max-width: ${this.overlayResponsiveOptions.breakpoint})`).matches;\n    }\n  }\n  get overlayMode() {\n    return this.mode || (this.modal ? 'modal' : 'overlay');\n  }\n  get overlayOptions() {\n    return {\n      ...this.config?.overlayOptions,\n      ...this.options\n    }; // TODO: Improve performance\n  }\n\n  get overlayResponsiveOptions() {\n    return {\n      ...this.overlayOptions?.responsive,\n      ...this.responsive\n    }; // TODO: Improve performance\n  }\n\n  get overlayResponsiveDirection() {\n    return this.overlayResponsiveOptions?.direction || 'center';\n  }\n  get overlayEl() {\n    return this.overlayViewChild?.nativeElement;\n  }\n  get contentEl() {\n    return this.contentViewChild?.nativeElement;\n  }\n  get targetEl() {\n    return DomHandler.getTargetElement(this.target, this.el?.nativeElement);\n  }\n  constructor(document, platformId, el, renderer, config, overlayService, cd, zone) {\n    this.document = document;\n    this.platformId = platformId;\n    this.el = el;\n    this.renderer = renderer;\n    this.config = config;\n    this.overlayService = overlayService;\n    this.cd = cd;\n    this.zone = zone;\n    this.window = this.document.defaultView;\n  }\n  ngAfterContentInit() {\n    this.templates?.forEach(item => {\n      switch (item.getType()) {\n        case 'content':\n          this.contentTemplate = item.template;\n          break;\n        // TODO: new template types may be added.\n        default:\n          this.contentTemplate = item.template;\n          break;\n      }\n    });\n  }\n  show(overlay, isFocus = false) {\n    this.onVisibleChange(true);\n    this.handleEvents('onShow', {\n      overlay: overlay || this.overlayEl,\n      target: this.targetEl,\n      mode: this.overlayMode\n    });\n    isFocus && DomHandler.focus(this.targetEl);\n    this.modal && DomHandler.addClass(this.document?.body, 'p-overflow-hidden');\n  }\n  hide(overlay, isFocus = false) {\n    if (!this.visible) {\n      return;\n    } else {\n      this.onVisibleChange(false);\n      this.handleEvents('onHide', {\n        overlay: overlay || this.overlayEl,\n        target: this.targetEl,\n        mode: this.overlayMode\n      });\n      isFocus && DomHandler.focus(this.targetEl);\n      this.modal && DomHandler.removeClass(this.document?.body, 'p-overflow-hidden');\n    }\n  }\n  alignOverlay() {\n    !this.modal && DomHandler.alignOverlay(this.overlayEl, this.targetEl, this.appendTo);\n  }\n  onVisibleChange(visible) {\n    this._visible = visible;\n    this.visibleChange.emit(visible);\n  }\n  onOverlayClick() {\n    this.isOverlayClicked = true;\n  }\n  onOverlayContentClick(event) {\n    this.overlayService.add({\n      originalEvent: event,\n      target: this.targetEl\n    });\n    this.isOverlayContentClicked = true;\n  }\n  onOverlayContentAnimationStart(event) {\n    switch (event.toState) {\n      case 'visible':\n        this.handleEvents('onBeforeShow', {\n          overlay: this.overlayEl,\n          target: this.targetEl,\n          mode: this.overlayMode\n        });\n        if (this.autoZIndex) {\n          ZIndexUtils.set(this.overlayMode, this.overlayEl, this.baseZIndex + this.config?.zIndex[this.overlayMode]);\n        }\n        DomHandler.appendOverlay(this.overlayEl, this.appendTo === 'body' ? this.document.body : this.appendTo, this.appendTo);\n        this.alignOverlay();\n        break;\n      case 'void':\n        this.handleEvents('onBeforeHide', {\n          overlay: this.overlayEl,\n          target: this.targetEl,\n          mode: this.overlayMode\n        });\n        this.modal && DomHandler.addClass(this.overlayEl, 'p-component-overlay-leave');\n        break;\n    }\n    this.handleEvents('onAnimationStart', event);\n  }\n  onOverlayContentAnimationDone(event) {\n    const container = this.overlayEl || event.element.parentElement;\n    switch (event.toState) {\n      case 'visible':\n        this.show(container, true);\n        this.bindListeners();\n        break;\n      case 'void':\n        this.hide(container, true);\n        this.unbindListeners();\n        DomHandler.appendOverlay(this.overlayEl, this.targetEl, this.appendTo);\n        ZIndexUtils.clear(container);\n        this.modalVisible = false;\n        this.cd.markForCheck();\n        break;\n    }\n    this.handleEvents('onAnimationDone', event);\n  }\n  handleEvents(name, params) {\n    this[name].emit(params);\n    this.options && this.options[name] && this.options[name](params);\n    this.config?.overlayOptions && (this.config?.overlayOptions)[name] && (this.config?.overlayOptions)[name](params);\n  }\n  bindListeners() {\n    this.bindScrollListener();\n    this.bindDocumentClickListener();\n    this.bindDocumentResizeListener();\n    this.bindDocumentKeyboardListener();\n  }\n  unbindListeners() {\n    this.unbindScrollListener();\n    this.unbindDocumentClickListener();\n    this.unbindDocumentResizeListener();\n    this.unbindDocumentKeyboardListener();\n  }\n  bindScrollListener() {\n    if (!this.scrollHandler) {\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.targetEl, event => {\n        const valid = this.listener ? this.listener(event, {\n          type: 'scroll',\n          mode: this.overlayMode,\n          valid: true\n        }) : true;\n        valid && this.hide(event, true);\n      });\n    }\n    this.scrollHandler.bindScrollListener();\n  }\n  unbindScrollListener() {\n    if (this.scrollHandler) {\n      this.scrollHandler.unbindScrollListener();\n    }\n  }\n  bindDocumentClickListener() {\n    if (!this.documentClickListener) {\n      this.documentClickListener = this.renderer.listen(this.document, 'click', event => {\n        const isTargetClicked = this.targetEl && (this.targetEl.isSameNode(event.target) || !this.isOverlayClicked && this.targetEl.contains(event.target));\n        const isOutsideClicked = !isTargetClicked && !this.isOverlayContentClicked;\n        const valid = this.listener ? this.listener(event, {\n          type: 'outside',\n          mode: this.overlayMode,\n          valid: event.which !== 3 && isOutsideClicked\n        }) : isOutsideClicked;\n        valid && this.hide(event);\n        this.isOverlayClicked = this.isOverlayContentClicked = false;\n      });\n    }\n  }\n  unbindDocumentClickListener() {\n    if (this.documentClickListener) {\n      this.documentClickListener();\n      this.documentClickListener = null;\n    }\n  }\n  bindDocumentResizeListener() {\n    if (!this.documentResizeListener) {\n      this.documentResizeListener = this.renderer.listen(this.window, 'resize', event => {\n        const valid = this.listener ? this.listener(event, {\n          type: 'resize',\n          mode: this.overlayMode,\n          valid: !DomHandler.isTouchDevice()\n        }) : !DomHandler.isTouchDevice();\n        valid && this.hide(event, true);\n      });\n    }\n  }\n  unbindDocumentResizeListener() {\n    if (this.documentResizeListener) {\n      this.documentResizeListener();\n      this.documentResizeListener = null;\n    }\n  }\n  bindDocumentKeyboardListener() {\n    if (this.documentKeyboardListener) {\n      return;\n    }\n    this.zone.runOutsideAngular(() => {\n      this.documentKeyboardListener = this.renderer.listen(this.window, 'keydown', event => {\n        if (this.overlayOptions.hideOnEscape === false || event.code !== 'Escape') {\n          return;\n        }\n        const valid = this.listener ? this.listener(event, {\n          type: 'keydown',\n          mode: this.overlayMode,\n          valid: !DomHandler.isTouchDevice()\n        }) : !DomHandler.isTouchDevice();\n        if (valid) {\n          this.zone.run(() => {\n            this.hide(event, true);\n          });\n        }\n      });\n    });\n  }\n  unbindDocumentKeyboardListener() {\n    if (this.documentKeyboardListener) {\n      this.documentKeyboardListener();\n      this.documentKeyboardListener = null;\n    }\n  }\n  ngOnDestroy() {\n    this.hide(this.overlayEl, true);\n    if (this.overlayEl) {\n      DomHandler.appendOverlay(this.overlayEl, this.targetEl, this.appendTo);\n      ZIndexUtils.clear(this.overlayEl);\n    }\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy();\n      this.scrollHandler = null;\n    }\n    this.unbindListeners();\n  }\n  static ɵfac = function Overlay_Factory(t) {\n    return new (t || Overlay)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.PrimeNGConfig), i0.ɵɵdirectiveInject(i1.OverlayService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Overlay,\n    selectors: [[\"p-overlay\"]],\n    contentQueries: function Overlay_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function Overlay_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.overlayViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentViewChild = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      visible: \"visible\",\n      mode: \"mode\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      contentStyle: \"contentStyle\",\n      contentStyleClass: \"contentStyleClass\",\n      target: \"target\",\n      appendTo: \"appendTo\",\n      autoZIndex: \"autoZIndex\",\n      baseZIndex: \"baseZIndex\",\n      showTransitionOptions: \"showTransitionOptions\",\n      hideTransitionOptions: \"hideTransitionOptions\",\n      listener: \"listener\",\n      responsive: \"responsive\",\n      options: \"options\"\n    },\n    outputs: {\n      visibleChange: \"visibleChange\",\n      onBeforeShow: \"onBeforeShow\",\n      onShow: \"onShow\",\n      onBeforeHide: \"onBeforeHide\",\n      onHide: \"onHide\",\n      onAnimationStart: \"onAnimationStart\",\n      onAnimationDone: \"onAnimationDone\"\n    },\n    features: [i0.ɵɵProvidersFeature([OVERLAY_VALUE_ACCESSOR])],\n    ngContentSelectors: _c7,\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ngStyle\", \"class\", \"ngClass\", \"click\", 4, \"ngIf\"], [3, \"ngStyle\", \"ngClass\", \"click\"], [\"overlay\", \"\"], [\"content\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function Overlay_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, Overlay_div_0_Template, 3, 20, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.modalVisible);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle],\n    styles: [\"@layer primeng{.p-overlay{position:absolute;top:0;left:0}.p-overlay-modal{display:flex;align-items:center;justify-content:center;position:fixed;top:0;left:0;width:100%;height:100%}.p-overlay-content{transform-origin:inherit}.p-overlay-modal>.p-overlay-content{z-index:1;width:90%}.p-overlay-top{align-items:flex-start}.p-overlay-top-start{align-items:flex-start;justify-content:flex-start}.p-overlay-top-end{align-items:flex-start;justify-content:flex-end}.p-overlay-bottom{align-items:flex-end}.p-overlay-bottom-start{align-items:flex-end;justify-content:flex-start}.p-overlay-bottom-end{align-items:flex-end;justify-content:flex-end}.p-overlay-left{justify-content:flex-start}.p-overlay-left-start{justify-content:flex-start;align-items:flex-start}.p-overlay-left-end{justify-content:flex-start;align-items:flex-end}.p-overlay-right{justify-content:flex-end}.p-overlay-right-start{justify-content:flex-end;align-items:flex-start}.p-overlay-right-end{justify-content:flex-end;align-items:flex-end}}\\n\"],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('overlayContentAnimation', [transition(':enter', [useAnimation(showOverlayContentAnimation)]), transition(':leave', [useAnimation(hideOverlayContentAnimation)])])]\n    },\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Overlay, [{\n    type: Component,\n    args: [{\n      selector: 'p-overlay',\n      template: `\n        <div\n            *ngIf=\"modalVisible\"\n            #overlay\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            [ngClass]=\"{\n                'p-overlay p-component': true,\n                'p-overlay-modal p-component-overlay p-component-overlay-enter': modal,\n                'p-overlay-center': modal && overlayResponsiveDirection === 'center',\n                'p-overlay-top': modal && overlayResponsiveDirection === 'top',\n                'p-overlay-top-start': modal && overlayResponsiveDirection === 'top-start',\n                'p-overlay-top-end': modal && overlayResponsiveDirection === 'top-end',\n                'p-overlay-bottom': modal && overlayResponsiveDirection === 'bottom',\n                'p-overlay-bottom-start': modal && overlayResponsiveDirection === 'bottom-start',\n                'p-overlay-bottom-end': modal && overlayResponsiveDirection === 'bottom-end',\n                'p-overlay-left': modal && overlayResponsiveDirection === 'left',\n                'p-overlay-left-start': modal && overlayResponsiveDirection === 'left-start',\n                'p-overlay-left-end': modal && overlayResponsiveDirection === 'left-end',\n                'p-overlay-right': modal && overlayResponsiveDirection === 'right',\n                'p-overlay-right-start': modal && overlayResponsiveDirection === 'right-start',\n                'p-overlay-right-end': modal && overlayResponsiveDirection === 'right-end'\n            }\"\n            (click)=\"onOverlayClick()\"\n        >\n            <div\n                *ngIf=\"visible\"\n                #content\n                [ngStyle]=\"contentStyle\"\n                [class]=\"contentStyleClass\"\n                [ngClass]=\"'p-overlay-content'\"\n                (click)=\"onOverlayContentClick($event)\"\n                [@overlayContentAnimation]=\"{ value: 'visible', params: { showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions, transform: transformOptions[modal ? overlayResponsiveDirection : 'default'] } }\"\n                (@overlayContentAnimation.start)=\"onOverlayContentAnimationStart($event)\"\n                (@overlayContentAnimation.done)=\"onOverlayContentAnimationDone($event)\"\n            >\n                <ng-content></ng-content>\n                <ng-container *ngTemplateOutlet=\"contentTemplate; context: { $implicit: { mode: overlayMode } }\"></ng-container>\n            </div>\n        </div>\n    `,\n      animations: [trigger('overlayContentAnimation', [transition(':enter', [useAnimation(showOverlayContentAnimation)]), transition(':leave', [useAnimation(hideOverlayContentAnimation)])])],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [OVERLAY_VALUE_ACCESSOR],\n      host: {\n        class: 'p-element'\n      },\n      styles: [\"@layer primeng{.p-overlay{position:absolute;top:0;left:0}.p-overlay-modal{display:flex;align-items:center;justify-content:center;position:fixed;top:0;left:0;width:100%;height:100%}.p-overlay-content{transform-origin:inherit}.p-overlay-modal>.p-overlay-content{z-index:1;width:90%}.p-overlay-top{align-items:flex-start}.p-overlay-top-start{align-items:flex-start;justify-content:flex-start}.p-overlay-top-end{align-items:flex-start;justify-content:flex-end}.p-overlay-bottom{align-items:flex-end}.p-overlay-bottom-start{align-items:flex-end;justify-content:flex-start}.p-overlay-bottom-end{align-items:flex-end;justify-content:flex-end}.p-overlay-left{justify-content:flex-start}.p-overlay-left-start{justify-content:flex-start;align-items:flex-start}.p-overlay-left-end{justify-content:flex-start;align-items:flex-end}.p-overlay-right{justify-content:flex-end}.p-overlay-right-start{justify-content:flex-end;align-items:flex-start}.p-overlay-right-end{justify-content:flex-end;align-items:flex-end}}\\n\"]\n    }]\n  }], () => [{\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i1.PrimeNGConfig\n  }, {\n    type: i1.OverlayService\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.NgZone\n  }], {\n    visible: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    contentStyle: [{\n      type: Input\n    }],\n    contentStyleClass: [{\n      type: Input\n    }],\n    target: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    listener: [{\n      type: Input\n    }],\n    responsive: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    visibleChange: [{\n      type: Output\n    }],\n    onBeforeShow: [{\n      type: Output\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onBeforeHide: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    onAnimationStart: [{\n      type: Output\n    }],\n    onAnimationDone: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    overlayViewChild: [{\n      type: ViewChild,\n      args: ['overlay']\n    }],\n    contentViewChild: [{\n      type: ViewChild,\n      args: ['content']\n    }]\n  });\n})();\nclass OverlayModule {\n  static ɵfac = function OverlayModule_Factory(t) {\n    return new (t || OverlayModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: OverlayModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, SharedModule, SharedModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OverlayModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, SharedModule],\n      exports: [Overlay, SharedModule],\n      declarations: [Overlay]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OVERLAY_VALUE_ACCESSOR, Overlay, OverlayModule };","map":{"version":3,"names":["style","animate","animation","useAnimation","transition","trigger","i2","isPlatformBrowser","DOCUMENT","CommonModule","i0","forwardRef","EventEmitter","PLATFORM_ID","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","Output","ContentChildren","ViewChild","NgModule","NG_VALUE_ACCESSOR","i1","PrimeTemplate","SharedModule","DomHandler","ConnectedOverlayScrollHandler","ObjectUtils","ZIndexUtils","OVERLAY_VALUE_ACCESSOR","provide","useExisting","Overlay","multi","showOverlayContentAnimation","transform","opacity","hideOverlayContentAnimation","document","platformId","el","renderer","config","overlayService","cd","zone","visible","_visible","value","modalVisible","mode","_mode","overlayOptions","merge","_style","modal","overlayResponsiveOptions","styleClass","_styleClass","contentStyle","_contentStyle","contentStyleClass","_contentStyleClass","target","_target","undefined","appendTo","_appendTo","autoZIndex","_autoZIndex","baseZIndex","_baseZIndex","showTransitionOptions","_showTransitionOptions","hideTransitionOptions","_hideTransitionOptions","listener","_listener","responsive","_responsive","val","options","_options","visibleChange","onBeforeShow","onShow","onBeforeHide","onHide","onAnimationStart","onAnimationDone","templates","overlayViewChild","contentViewChild","contentTemplate","isOverlayClicked","isOverlayContentClicked","scrollHandler","documentClickListener","documentResizeListener","documentKeyboardListener","window","transformOptions","default","center","top","bottom","left","right","matchMedia","media","replace","breakpoint","matches","overlayMode","overlayResponsiveDirection","direction","overlayEl","nativeElement","contentEl","targetEl","getTargetElement","constructor","defaultView","ngAfterContentInit","forEach","item","getType","template","show","overlay","isFocus","onVisibleChange","handleEvents","focus","addClass","body","hide","removeClass","alignOverlay","emit","onOverlayClick","onOverlayContentClick","event","add","originalEvent","onOverlayContentAnimationStart","toState","set","zIndex","appendOverlay","onOverlayContentAnimationDone","container","element","parentElement","bindListeners","unbindListeners","clear","markForCheck","name","params","bindScrollListener","bindDocumentClickListener","bindDocumentResizeListener","bindDocumentKeyboardListener","unbindScrollListener","unbindDocumentClickListener","unbindDocumentResizeListener","unbindDocumentKeyboardListener","valid","type","listen","isTargetClicked","isSameNode","contains","isOutsideClicked","which","isTouchDevice","runOutsideAngular","hideOnEscape","code","run","ngOnDestroy","destroy","ɵfac","ElementRef","Renderer2","PrimeNGConfig","OverlayService","ChangeDetectorRef","NgZone","ɵcmp","NgClass","NgIf","NgTemplateOutlet","NgStyle","args","selector","animations","changeDetection","OnPush","encapsulation","None","providers","host","class","styles","Document","decorators","OverlayModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["C:/Users/Administrator/Desktop/R&D/angular/NgRx-simple/node_modules/primeng/fesm2022/primeng-overlay.mjs"],"sourcesContent":["import { style, animate, animation, useAnimation, transition, trigger } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i1 from 'primeng/api';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { ObjectUtils, ZIndexUtils } from 'primeng/utils';\n\nconst OVERLAY_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Overlay),\n    multi: true\n};\nconst showOverlayContentAnimation = animation([style({ transform: '{{transform}}', opacity: 0 }), animate('{{showTransitionParams}}')]);\nconst hideOverlayContentAnimation = animation([animate('{{hideTransitionParams}}', style({ transform: '{{transform}}', opacity: 0 }))]);\n/**\n * This API allows overlay components to be controlled from the PrimeNGConfig. In this way, all overlay components in the application can have the same behavior.\n * @group Components\n */\nclass Overlay {\n    document;\n    platformId;\n    el;\n    renderer;\n    config;\n    overlayService;\n    cd;\n    zone;\n    /**\n     * The visible property is an input that determines the visibility of the component.\n     * @defaultValue false\n     * @group Props\n     */\n    get visible() {\n        return this._visible;\n    }\n    set visible(value) {\n        this._visible = value;\n        if (this._visible && !this.modalVisible) {\n            this.modalVisible = true;\n        }\n    }\n    /**\n     * The mode property is an input that determines the overlay mode type or string.\n     * @defaultValue null\n     * @group Props\n     */\n    get mode() {\n        return this._mode || this.overlayOptions?.mode;\n    }\n    set mode(value) {\n        this._mode = value;\n    }\n    /**\n     * The style property is an input that determines the style object for the component.\n     * @defaultValue null\n     * @group Props\n     */\n    get style() {\n        return ObjectUtils.merge(this._style, this.modal ? this.overlayResponsiveOptions?.style : this.overlayOptions?.style);\n    }\n    set style(value) {\n        this._style = value;\n    }\n    /**\n     * The styleClass property is an input that determines the CSS class(es) for the component.\n     * @defaultValue null\n     * @group Props\n     */\n    get styleClass() {\n        return ObjectUtils.merge(this._styleClass, this.modal ? this.overlayResponsiveOptions?.styleClass : this.overlayOptions?.styleClass);\n    }\n    set styleClass(value) {\n        this._styleClass = value;\n    }\n    /**\n     * The contentStyle property is an input that determines the style object for the content of the component.\n     * @defaultValue null\n     * @group Props\n     */\n    get contentStyle() {\n        return ObjectUtils.merge(this._contentStyle, this.modal ? this.overlayResponsiveOptions?.contentStyle : this.overlayOptions?.contentStyle);\n    }\n    set contentStyle(value) {\n        this._contentStyle = value;\n    }\n    /**\n     * The contentStyleClass property is an input that determines the CSS class(es) for the content of the component.\n     * @defaultValue null\n     * @group Props\n     */\n    get contentStyleClass() {\n        return ObjectUtils.merge(this._contentStyleClass, this.modal ? this.overlayResponsiveOptions?.contentStyleClass : this.overlayOptions?.contentStyleClass);\n    }\n    set contentStyleClass(value) {\n        this._contentStyleClass = value;\n    }\n    /**\n     * The target property is an input that specifies the target element or selector for the component.\n     * @defaultValue null\n     * @group Props\n     */\n    get target() {\n        const value = this._target || this.overlayOptions?.target;\n        return value === undefined ? '@prev' : value;\n    }\n    set target(value) {\n        this._target = value;\n    }\n    /**\n     * Overlay can be mounted into its location, body or DOM element instance using this option.\n     * @defaultValue null\n     * @group Props\n     */\n    get appendTo() {\n        return this._appendTo || this.overlayOptions?.appendTo;\n    }\n    set appendTo(value) {\n        this._appendTo = value;\n    }\n    /**\n     * The autoZIndex determines whether to automatically manage layering. Its default value is 'false'.\n     * @defaultValue false\n     * @group Props\n     */\n    get autoZIndex() {\n        const value = this._autoZIndex || this.overlayOptions?.autoZIndex;\n        return value === undefined ? true : value;\n    }\n    set autoZIndex(value) {\n        this._autoZIndex = value;\n    }\n    /**\n     * The baseZIndex is base zIndex value to use in layering.\n     * @defaultValue null\n     * @group Props\n     */\n    get baseZIndex() {\n        const value = this._baseZIndex || this.overlayOptions?.baseZIndex;\n        return value === undefined ? 0 : value;\n    }\n    set baseZIndex(value) {\n        this._baseZIndex = value;\n    }\n    /**\n     * Transition options of the show or hide animation.\n     * @defaultValue .12s cubic-bezier(0, 0, 0.2, 1)\n     * @group Props\n     */\n    get showTransitionOptions() {\n        const value = this._showTransitionOptions || this.overlayOptions?.showTransitionOptions;\n        return value === undefined ? '.12s cubic-bezier(0, 0, 0.2, 1)' : value;\n    }\n    set showTransitionOptions(value) {\n        this._showTransitionOptions = value;\n    }\n    /**\n     * The hideTransitionOptions property is an input that determines the CSS transition options for hiding the component.\n     * @defaultValue .1s linear\n     * @group Props\n     */\n    get hideTransitionOptions() {\n        const value = this._hideTransitionOptions || this.overlayOptions?.hideTransitionOptions;\n        return value === undefined ? '.1s linear' : value;\n    }\n    set hideTransitionOptions(value) {\n        this._hideTransitionOptions = value;\n    }\n    /**\n     * The listener property is an input that specifies the listener object for the component.\n     * @defaultValue null\n     * @group Props\n     */\n    get listener() {\n        return this._listener || this.overlayOptions?.listener;\n    }\n    set listener(value) {\n        this._listener = value;\n    }\n    /**\n     * It is the option used to determine in which mode it should appear according to the given media or breakpoint.\n     * @defaultValue null\n     * @group Props\n     */\n    get responsive() {\n        return this._responsive || this.overlayOptions?.responsive;\n    }\n    set responsive(val) {\n        this._responsive = val;\n    }\n    /**\n     * The options property is an input that specifies the overlay options for the component.\n     * @defaultValue null\n     * @group Props\n     */\n    get options() {\n        return this._options;\n    }\n    set options(val) {\n        this._options = val;\n    }\n    /**\n     * This EventEmitter is used to notify changes in the visibility state of a component.\n     * @param {Boolean} boolean - Value of visibility as boolean.\n     * @group Emits\n     */\n    visibleChange = new EventEmitter();\n    /**\n     * Callback to invoke before the overlay is shown.\n     * @param {OverlayOnBeforeShowEvent} event - Custom overlay before show event.\n     * @group Emits\n     */\n    onBeforeShow = new EventEmitter();\n    /**\n     * Callback to invoke when the overlay is shown.\n     * @param {OverlayOnShowEvent} event - Custom overlay show event.\n     * @group Emits\n     */\n    onShow = new EventEmitter();\n    /**\n     * Callback to invoke before the overlay is hidden.\n     * @param {OverlayOnBeforeHideEvent} event - Custom overlay before hide event.\n     * @group Emits\n     */\n    onBeforeHide = new EventEmitter();\n    /**\n     * Callback to invoke when the overlay is hidden\n     * @param {OverlayOnHideEvent} event - Custom hide event.\n     * @group Emits\n     */\n    onHide = new EventEmitter();\n    /**\n     * Callback to invoke when the animation is started.\n     * @param {AnimationEvent} event - Animation event.\n     * @group Emits\n     */\n    onAnimationStart = new EventEmitter();\n    /**\n     * Callback to invoke when the animation is done.\n     * @param {AnimationEvent} event - Animation event.\n     * @group Emits\n     */\n    onAnimationDone = new EventEmitter();\n    templates;\n    overlayViewChild;\n    contentViewChild;\n    contentTemplate;\n    _visible = false;\n    _mode;\n    _style;\n    _styleClass;\n    _contentStyle;\n    _contentStyleClass;\n    _target;\n    _appendTo;\n    _autoZIndex;\n    _baseZIndex;\n    _showTransitionOptions;\n    _hideTransitionOptions;\n    _listener;\n    _responsive;\n    _options;\n    modalVisible = false;\n    isOverlayClicked = false;\n    isOverlayContentClicked = false;\n    scrollHandler;\n    documentClickListener;\n    documentResizeListener;\n    documentKeyboardListener;\n    window;\n    transformOptions = {\n        default: 'scaleY(0.8)',\n        center: 'scale(0.7)',\n        top: 'translate3d(0px, -100%, 0px)',\n        'top-start': 'translate3d(0px, -100%, 0px)',\n        'top-end': 'translate3d(0px, -100%, 0px)',\n        bottom: 'translate3d(0px, 100%, 0px)',\n        'bottom-start': 'translate3d(0px, 100%, 0px)',\n        'bottom-end': 'translate3d(0px, 100%, 0px)',\n        left: 'translate3d(-100%, 0px, 0px)',\n        'left-start': 'translate3d(-100%, 0px, 0px)',\n        'left-end': 'translate3d(-100%, 0px, 0px)',\n        right: 'translate3d(100%, 0px, 0px)',\n        'right-start': 'translate3d(100%, 0px, 0px)',\n        'right-end': 'translate3d(100%, 0px, 0px)'\n    };\n    get modal() {\n        if (isPlatformBrowser(this.platformId)) {\n            return this.mode === 'modal' || (this.overlayResponsiveOptions && this.window?.matchMedia(this.overlayResponsiveOptions.media?.replace('@media', '') || `(max-width: ${this.overlayResponsiveOptions.breakpoint})`).matches);\n        }\n    }\n    get overlayMode() {\n        return this.mode || (this.modal ? 'modal' : 'overlay');\n    }\n    get overlayOptions() {\n        return { ...this.config?.overlayOptions, ...this.options }; // TODO: Improve performance\n    }\n    get overlayResponsiveOptions() {\n        return { ...this.overlayOptions?.responsive, ...this.responsive }; // TODO: Improve performance\n    }\n    get overlayResponsiveDirection() {\n        return this.overlayResponsiveOptions?.direction || 'center';\n    }\n    get overlayEl() {\n        return this.overlayViewChild?.nativeElement;\n    }\n    get contentEl() {\n        return this.contentViewChild?.nativeElement;\n    }\n    get targetEl() {\n        return DomHandler.getTargetElement(this.target, this.el?.nativeElement);\n    }\n    constructor(document, platformId, el, renderer, config, overlayService, cd, zone) {\n        this.document = document;\n        this.platformId = platformId;\n        this.el = el;\n        this.renderer = renderer;\n        this.config = config;\n        this.overlayService = overlayService;\n        this.cd = cd;\n        this.zone = zone;\n        this.window = this.document.defaultView;\n    }\n    ngAfterContentInit() {\n        this.templates?.forEach((item) => {\n            switch (item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                    break;\n                // TODO: new template types may be added.\n                default:\n                    this.contentTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    show(overlay, isFocus = false) {\n        this.onVisibleChange(true);\n        this.handleEvents('onShow', { overlay: overlay || this.overlayEl, target: this.targetEl, mode: this.overlayMode });\n        isFocus && DomHandler.focus(this.targetEl);\n        this.modal && DomHandler.addClass(this.document?.body, 'p-overflow-hidden');\n    }\n    hide(overlay, isFocus = false) {\n        if (!this.visible) {\n            return;\n        }\n        else {\n            this.onVisibleChange(false);\n            this.handleEvents('onHide', { overlay: overlay || this.overlayEl, target: this.targetEl, mode: this.overlayMode });\n            isFocus && DomHandler.focus(this.targetEl);\n            this.modal && DomHandler.removeClass(this.document?.body, 'p-overflow-hidden');\n        }\n    }\n    alignOverlay() {\n        !this.modal && DomHandler.alignOverlay(this.overlayEl, this.targetEl, this.appendTo);\n    }\n    onVisibleChange(visible) {\n        this._visible = visible;\n        this.visibleChange.emit(visible);\n    }\n    onOverlayClick() {\n        this.isOverlayClicked = true;\n    }\n    onOverlayContentClick(event) {\n        this.overlayService.add({\n            originalEvent: event,\n            target: this.targetEl\n        });\n        this.isOverlayContentClicked = true;\n    }\n    onOverlayContentAnimationStart(event) {\n        switch (event.toState) {\n            case 'visible':\n                this.handleEvents('onBeforeShow', { overlay: this.overlayEl, target: this.targetEl, mode: this.overlayMode });\n                if (this.autoZIndex) {\n                    ZIndexUtils.set(this.overlayMode, this.overlayEl, this.baseZIndex + this.config?.zIndex[this.overlayMode]);\n                }\n                DomHandler.appendOverlay(this.overlayEl, this.appendTo === 'body' ? this.document.body : this.appendTo, this.appendTo);\n                this.alignOverlay();\n                break;\n            case 'void':\n                this.handleEvents('onBeforeHide', { overlay: this.overlayEl, target: this.targetEl, mode: this.overlayMode });\n                this.modal && DomHandler.addClass(this.overlayEl, 'p-component-overlay-leave');\n                break;\n        }\n        this.handleEvents('onAnimationStart', event);\n    }\n    onOverlayContentAnimationDone(event) {\n        const container = this.overlayEl || event.element.parentElement;\n        switch (event.toState) {\n            case 'visible':\n                this.show(container, true);\n                this.bindListeners();\n                break;\n            case 'void':\n                this.hide(container, true);\n                this.unbindListeners();\n                DomHandler.appendOverlay(this.overlayEl, this.targetEl, this.appendTo);\n                ZIndexUtils.clear(container);\n                this.modalVisible = false;\n                this.cd.markForCheck();\n                break;\n        }\n        this.handleEvents('onAnimationDone', event);\n    }\n    handleEvents(name, params) {\n        this[name].emit(params);\n        this.options && this.options[name] && this.options[name](params);\n        this.config?.overlayOptions && (this.config?.overlayOptions)[name] && (this.config?.overlayOptions)[name](params);\n    }\n    bindListeners() {\n        this.bindScrollListener();\n        this.bindDocumentClickListener();\n        this.bindDocumentResizeListener();\n        this.bindDocumentKeyboardListener();\n    }\n    unbindListeners() {\n        this.unbindScrollListener();\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindDocumentKeyboardListener();\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.targetEl, (event) => {\n                const valid = this.listener ? this.listener(event, { type: 'scroll', mode: this.overlayMode, valid: true }) : true;\n                valid && this.hide(event, true);\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            this.documentClickListener = this.renderer.listen(this.document, 'click', (event) => {\n                const isTargetClicked = this.targetEl && (this.targetEl.isSameNode(event.target) || (!this.isOverlayClicked && this.targetEl.contains(event.target)));\n                const isOutsideClicked = !isTargetClicked && !this.isOverlayContentClicked;\n                const valid = this.listener ? this.listener(event, { type: 'outside', mode: this.overlayMode, valid: event.which !== 3 && isOutsideClicked }) : isOutsideClicked;\n                valid && this.hide(event);\n                this.isOverlayClicked = this.isOverlayContentClicked = false;\n            });\n        }\n    }\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n    bindDocumentResizeListener() {\n        if (!this.documentResizeListener) {\n            this.documentResizeListener = this.renderer.listen(this.window, 'resize', (event) => {\n                const valid = this.listener ? this.listener(event, { type: 'resize', mode: this.overlayMode, valid: !DomHandler.isTouchDevice() }) : !DomHandler.isTouchDevice();\n                valid && this.hide(event, true);\n            });\n        }\n    }\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            this.documentResizeListener();\n            this.documentResizeListener = null;\n        }\n    }\n    bindDocumentKeyboardListener() {\n        if (this.documentKeyboardListener) {\n            return;\n        }\n        this.zone.runOutsideAngular(() => {\n            this.documentKeyboardListener = this.renderer.listen(this.window, 'keydown', (event) => {\n                if (this.overlayOptions.hideOnEscape === false || event.code !== 'Escape') {\n                    return;\n                }\n                const valid = this.listener ? this.listener(event, { type: 'keydown', mode: this.overlayMode, valid: !DomHandler.isTouchDevice() }) : !DomHandler.isTouchDevice();\n                if (valid) {\n                    this.zone.run(() => {\n                        this.hide(event, true);\n                    });\n                }\n            });\n        });\n    }\n    unbindDocumentKeyboardListener() {\n        if (this.documentKeyboardListener) {\n            this.documentKeyboardListener();\n            this.documentKeyboardListener = null;\n        }\n    }\n    ngOnDestroy() {\n        this.hide(this.overlayEl, true);\n        if (this.overlayEl) {\n            DomHandler.appendOverlay(this.overlayEl, this.targetEl, this.appendTo);\n            ZIndexUtils.clear(this.overlayEl);\n        }\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n        this.unbindListeners();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Overlay, deps: [{ token: DOCUMENT }, { token: PLATFORM_ID }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.PrimeNGConfig }, { token: i1.OverlayService }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.5\", type: Overlay, selector: \"p-overlay\", inputs: { visible: \"visible\", mode: \"mode\", style: \"style\", styleClass: \"styleClass\", contentStyle: \"contentStyle\", contentStyleClass: \"contentStyleClass\", target: \"target\", appendTo: \"appendTo\", autoZIndex: \"autoZIndex\", baseZIndex: \"baseZIndex\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\", listener: \"listener\", responsive: \"responsive\", options: \"options\" }, outputs: { visibleChange: \"visibleChange\", onBeforeShow: \"onBeforeShow\", onShow: \"onShow\", onBeforeHide: \"onBeforeHide\", onHide: \"onHide\", onAnimationStart: \"onAnimationStart\", onAnimationDone: \"onAnimationDone\" }, host: { classAttribute: \"p-element\" }, providers: [OVERLAY_VALUE_ACCESSOR], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"overlayViewChild\", first: true, predicate: [\"overlay\"], descendants: true }, { propertyName: \"contentViewChild\", first: true, predicate: [\"content\"], descendants: true }], ngImport: i0, template: `\n        <div\n            *ngIf=\"modalVisible\"\n            #overlay\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            [ngClass]=\"{\n                'p-overlay p-component': true,\n                'p-overlay-modal p-component-overlay p-component-overlay-enter': modal,\n                'p-overlay-center': modal && overlayResponsiveDirection === 'center',\n                'p-overlay-top': modal && overlayResponsiveDirection === 'top',\n                'p-overlay-top-start': modal && overlayResponsiveDirection === 'top-start',\n                'p-overlay-top-end': modal && overlayResponsiveDirection === 'top-end',\n                'p-overlay-bottom': modal && overlayResponsiveDirection === 'bottom',\n                'p-overlay-bottom-start': modal && overlayResponsiveDirection === 'bottom-start',\n                'p-overlay-bottom-end': modal && overlayResponsiveDirection === 'bottom-end',\n                'p-overlay-left': modal && overlayResponsiveDirection === 'left',\n                'p-overlay-left-start': modal && overlayResponsiveDirection === 'left-start',\n                'p-overlay-left-end': modal && overlayResponsiveDirection === 'left-end',\n                'p-overlay-right': modal && overlayResponsiveDirection === 'right',\n                'p-overlay-right-start': modal && overlayResponsiveDirection === 'right-start',\n                'p-overlay-right-end': modal && overlayResponsiveDirection === 'right-end'\n            }\"\n            (click)=\"onOverlayClick()\"\n        >\n            <div\n                *ngIf=\"visible\"\n                #content\n                [ngStyle]=\"contentStyle\"\n                [class]=\"contentStyleClass\"\n                [ngClass]=\"'p-overlay-content'\"\n                (click)=\"onOverlayContentClick($event)\"\n                [@overlayContentAnimation]=\"{ value: 'visible', params: { showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions, transform: transformOptions[modal ? overlayResponsiveDirection : 'default'] } }\"\n                (@overlayContentAnimation.start)=\"onOverlayContentAnimationStart($event)\"\n                (@overlayContentAnimation.done)=\"onOverlayContentAnimationDone($event)\"\n            >\n                <ng-content></ng-content>\n                <ng-container *ngTemplateOutlet=\"contentTemplate; context: { $implicit: { mode: overlayMode } }\"></ng-container>\n            </div>\n        </div>\n    `, isInline: true, styles: [\"@layer primeng{.p-overlay{position:absolute;top:0;left:0}.p-overlay-modal{display:flex;align-items:center;justify-content:center;position:fixed;top:0;left:0;width:100%;height:100%}.p-overlay-content{transform-origin:inherit}.p-overlay-modal>.p-overlay-content{z-index:1;width:90%}.p-overlay-top{align-items:flex-start}.p-overlay-top-start{align-items:flex-start;justify-content:flex-start}.p-overlay-top-end{align-items:flex-start;justify-content:flex-end}.p-overlay-bottom{align-items:flex-end}.p-overlay-bottom-start{align-items:flex-end;justify-content:flex-start}.p-overlay-bottom-end{align-items:flex-end;justify-content:flex-end}.p-overlay-left{justify-content:flex-start}.p-overlay-left-start{justify-content:flex-start;align-items:flex-start}.p-overlay-left-end{justify-content:flex-start;align-items:flex-end}.p-overlay-right{justify-content:flex-end}.p-overlay-right-start{justify-content:flex-end;align-items:flex-start}.p-overlay-right-end{justify-content:flex-end;align-items:flex-end}}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], animations: [trigger('overlayContentAnimation', [transition(':enter', [useAnimation(showOverlayContentAnimation)]), transition(':leave', [useAnimation(hideOverlayContentAnimation)])])], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Overlay, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-overlay', template: `\n        <div\n            *ngIf=\"modalVisible\"\n            #overlay\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            [ngClass]=\"{\n                'p-overlay p-component': true,\n                'p-overlay-modal p-component-overlay p-component-overlay-enter': modal,\n                'p-overlay-center': modal && overlayResponsiveDirection === 'center',\n                'p-overlay-top': modal && overlayResponsiveDirection === 'top',\n                'p-overlay-top-start': modal && overlayResponsiveDirection === 'top-start',\n                'p-overlay-top-end': modal && overlayResponsiveDirection === 'top-end',\n                'p-overlay-bottom': modal && overlayResponsiveDirection === 'bottom',\n                'p-overlay-bottom-start': modal && overlayResponsiveDirection === 'bottom-start',\n                'p-overlay-bottom-end': modal && overlayResponsiveDirection === 'bottom-end',\n                'p-overlay-left': modal && overlayResponsiveDirection === 'left',\n                'p-overlay-left-start': modal && overlayResponsiveDirection === 'left-start',\n                'p-overlay-left-end': modal && overlayResponsiveDirection === 'left-end',\n                'p-overlay-right': modal && overlayResponsiveDirection === 'right',\n                'p-overlay-right-start': modal && overlayResponsiveDirection === 'right-start',\n                'p-overlay-right-end': modal && overlayResponsiveDirection === 'right-end'\n            }\"\n            (click)=\"onOverlayClick()\"\n        >\n            <div\n                *ngIf=\"visible\"\n                #content\n                [ngStyle]=\"contentStyle\"\n                [class]=\"contentStyleClass\"\n                [ngClass]=\"'p-overlay-content'\"\n                (click)=\"onOverlayContentClick($event)\"\n                [@overlayContentAnimation]=\"{ value: 'visible', params: { showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions, transform: transformOptions[modal ? overlayResponsiveDirection : 'default'] } }\"\n                (@overlayContentAnimation.start)=\"onOverlayContentAnimationStart($event)\"\n                (@overlayContentAnimation.done)=\"onOverlayContentAnimationDone($event)\"\n            >\n                <ng-content></ng-content>\n                <ng-container *ngTemplateOutlet=\"contentTemplate; context: { $implicit: { mode: overlayMode } }\"></ng-container>\n            </div>\n        </div>\n    `, animations: [trigger('overlayContentAnimation', [transition(':enter', [useAnimation(showOverlayContentAnimation)]), transition(':leave', [useAnimation(hideOverlayContentAnimation)])])], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [OVERLAY_VALUE_ACCESSOR], host: {\n                        class: 'p-element'\n                    }, styles: [\"@layer primeng{.p-overlay{position:absolute;top:0;left:0}.p-overlay-modal{display:flex;align-items:center;justify-content:center;position:fixed;top:0;left:0;width:100%;height:100%}.p-overlay-content{transform-origin:inherit}.p-overlay-modal>.p-overlay-content{z-index:1;width:90%}.p-overlay-top{align-items:flex-start}.p-overlay-top-start{align-items:flex-start;justify-content:flex-start}.p-overlay-top-end{align-items:flex-start;justify-content:flex-end}.p-overlay-bottom{align-items:flex-end}.p-overlay-bottom-start{align-items:flex-end;justify-content:flex-start}.p-overlay-bottom-end{align-items:flex-end;justify-content:flex-end}.p-overlay-left{justify-content:flex-start}.p-overlay-left-start{justify-content:flex-start;align-items:flex-start}.p-overlay-left-end{justify-content:flex-start;align-items:flex-end}.p-overlay-right{justify-content:flex-end}.p-overlay-right-start{justify-content:flex-end;align-items:flex-start}.p-overlay-right-end{justify-content:flex-end;align-items:flex-end}}\\n\"] }]\n        }], ctorParameters: () => [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.PrimeNGConfig }, { type: i1.OverlayService }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }], propDecorators: { visible: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], contentStyle: [{\n                type: Input\n            }], contentStyleClass: [{\n                type: Input\n            }], target: [{\n                type: Input\n            }], appendTo: [{\n                type: Input\n            }], autoZIndex: [{\n                type: Input\n            }], baseZIndex: [{\n                type: Input\n            }], showTransitionOptions: [{\n                type: Input\n            }], hideTransitionOptions: [{\n                type: Input\n            }], listener: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], visibleChange: [{\n                type: Output\n            }], onBeforeShow: [{\n                type: Output\n            }], onShow: [{\n                type: Output\n            }], onBeforeHide: [{\n                type: Output\n            }], onHide: [{\n                type: Output\n            }], onAnimationStart: [{\n                type: Output\n            }], onAnimationDone: [{\n                type: Output\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], overlayViewChild: [{\n                type: ViewChild,\n                args: ['overlay']\n            }], contentViewChild: [{\n                type: ViewChild,\n                args: ['content']\n            }] } });\nclass OverlayModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: OverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.5\", ngImport: i0, type: OverlayModule, declarations: [Overlay], imports: [CommonModule, SharedModule], exports: [Overlay, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: OverlayModule, imports: [CommonModule, SharedModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: OverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, SharedModule],\n                    exports: [Overlay, SharedModule],\n                    declarations: [Overlay]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OVERLAY_VALUE_ACCESSOR, Overlay, OverlayModule };\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,OAAO,EAAEC,SAAS,EAAEC,YAAY,EAAEC,UAAU,EAAEC,OAAO,QAAQ,qBAAqB;AAClG,OAAO,KAAKC,EAAE,MAAM,iBAAiB;AACrC,SAASC,iBAAiB,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,iBAAiB;AAC3E,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,SAASC,UAAU,EAAEC,YAAY,EAAEC,WAAW,EAAEC,SAAS,EAAEC,uBAAuB,EAAEC,iBAAiB,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,eAAe,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,eAAe;AACzL,SAASC,iBAAiB,QAAQ,gBAAgB;AAClD,OAAO,KAAKC,EAAE,MAAM,aAAa;AACjC,SAASC,aAAa,EAAEC,YAAY,QAAQ,aAAa;AACzD,SAASC,UAAU,EAAEC,6BAA6B,QAAQ,aAAa;AACvE,SAASC,WAAW,EAAEC,WAAW,QAAQ,eAAe;AAAC;AAAA;AAAA;EAAA;IAifoCpB,EAAE,sBAsCiC;EAAA;AAAA;AAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA,YAtCnCA,EAAE;IAAFA,EAAE,+BAoClF;IApCgFA,EAAE;MAAFA,EAAE;MAAA,eAAFA,EAAE;MAAA,OAAFA,EAAE,aAgCtE,oCAA6B;IAAA,EAAC;MAhCsCA,EAAE;MAAA,eAAFA,EAAE;MAAA,OAAFA,EAAE,aAkC7C,6CAAsC;IAAA,EAFjC;MAhCsCA,EAAE;MAAA,eAAFA,EAAE;MAAA,OAAFA,EAAE,aAmC9C,4CAAqC;IAAA,EAH/B;IAhCsCA,EAAE,gBAqCtD;IArCoDA,EAAE,oFAsCiC;IAtCnCA,EAAE,eAuC7E;EAAA;EAAA;IAAA,eAvC2EA,EAAE;IAAFA,EAAE,qCA8BpD;IA9BkDA,EAAE,2CA6BvD,6DA7BqDA,EAAE,0BAAFA,EAAE,6KA6BvD;IA7BqDA,EAAE,aAsC7B;IAtC2BA,EAAE,uDAsC7B,4BAtC2BA,EAAE,0BAAFA,EAAE,+CAsC7B;EAAA;AAAA;AAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA,aAtC2BA,EAAE;IAAFA,EAAE,+BAyBtF;IAzBoFA,EAAE;MAAFA,EAAE;MAAA,eAAFA,EAAE;MAAA,OAAFA,EAAE,aAwB1E,uBAAgB;IAAA,EAAC;IAxBuDA,EAAE,6DAuC7E;IAvC2EA,EAAE,eAwCjF;EAAA;EAAA;IAAA,eAxC+EA,EAAE;IAAFA,EAAE,8BAM/D;IAN6DA,EAAE,oCAKlE,YALgEA,EAAE,+3BAKlE;IALgEA,EAAE,aA2BjE;IA3B+DA,EAAE,mCA2BjE;EAAA;AAAA;AAAA;AA1gB9B,MAAMqB,sBAAsB,GAAG;EAC3BC,OAAO,EAAET,iBAAiB;EAC1BU,WAAW,EAAEtB,UAAU,CAAC,MAAMuB,OAAO,CAAC;EACtCC,KAAK,EAAE;AACX,CAAC;AACD,MAAMC,2BAA2B,GAAGlC,SAAS,CAAC,CAACF,KAAK,CAAC;EAAEqC,SAAS,EAAE,eAAe;EAAEC,OAAO,EAAE;AAAE,CAAC,CAAC,EAAErC,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC;AACvI,MAAMsC,2BAA2B,GAAGrC,SAAS,CAAC,CAACD,OAAO,CAAC,0BAA0B,EAAED,KAAK,CAAC;EAAEqC,SAAS,EAAE,eAAe;EAAEC,OAAO,EAAE;AAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACvI;AACA;AACA;AACA;AACA,MAAMJ,OAAO,CAAC;EACVM,QAAQ;EACRC,UAAU;EACVC,EAAE;EACFC,QAAQ;EACRC,MAAM;EACNC,cAAc;EACdC,EAAE;EACFC,IAAI;EACJ;AACJ;AACA;AACA;AACA;EACI,IAAIC,OAAO,GAAG;IACV,OAAO,IAAI,CAACC,QAAQ;EACxB;EACA,IAAID,OAAO,CAACE,KAAK,EAAE;IACf,IAAI,CAACD,QAAQ,GAAGC,KAAK;IACrB,IAAI,IAAI,CAACD,QAAQ,IAAI,CAAC,IAAI,CAACE,YAAY,EAAE;MACrC,IAAI,CAACA,YAAY,GAAG,IAAI;IAC5B;EACJ;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIC,IAAI,GAAG;IACP,OAAO,IAAI,CAACC,KAAK,IAAI,IAAI,CAACC,cAAc,EAAEF,IAAI;EAClD;EACA,IAAIA,IAAI,CAACF,KAAK,EAAE;IACZ,IAAI,CAACG,KAAK,GAAGH,KAAK;EACtB;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIlD,KAAK,GAAG;IACR,OAAO6B,WAAW,CAAC0B,KAAK,CAAC,IAAI,CAACC,MAAM,EAAE,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,wBAAwB,EAAE1D,KAAK,GAAG,IAAI,CAACsD,cAAc,EAAEtD,KAAK,CAAC;EACzH;EACA,IAAIA,KAAK,CAACkD,KAAK,EAAE;IACb,IAAI,CAACM,MAAM,GAAGN,KAAK;EACvB;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIS,UAAU,GAAG;IACb,OAAO9B,WAAW,CAAC0B,KAAK,CAAC,IAAI,CAACK,WAAW,EAAE,IAAI,CAACH,KAAK,GAAG,IAAI,CAACC,wBAAwB,EAAEC,UAAU,GAAG,IAAI,CAACL,cAAc,EAAEK,UAAU,CAAC;EACxI;EACA,IAAIA,UAAU,CAACT,KAAK,EAAE;IAClB,IAAI,CAACU,WAAW,GAAGV,KAAK;EAC5B;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIW,YAAY,GAAG;IACf,OAAOhC,WAAW,CAAC0B,KAAK,CAAC,IAAI,CAACO,aAAa,EAAE,IAAI,CAACL,KAAK,GAAG,IAAI,CAACC,wBAAwB,EAAEG,YAAY,GAAG,IAAI,CAACP,cAAc,EAAEO,YAAY,CAAC;EAC9I;EACA,IAAIA,YAAY,CAACX,KAAK,EAAE;IACpB,IAAI,CAACY,aAAa,GAAGZ,KAAK;EAC9B;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIa,iBAAiB,GAAG;IACpB,OAAOlC,WAAW,CAAC0B,KAAK,CAAC,IAAI,CAACS,kBAAkB,EAAE,IAAI,CAACP,KAAK,GAAG,IAAI,CAACC,wBAAwB,EAAEK,iBAAiB,GAAG,IAAI,CAACT,cAAc,EAAES,iBAAiB,CAAC;EAC7J;EACA,IAAIA,iBAAiB,CAACb,KAAK,EAAE;IACzB,IAAI,CAACc,kBAAkB,GAAGd,KAAK;EACnC;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIe,MAAM,GAAG;IACT,MAAMf,KAAK,GAAG,IAAI,CAACgB,OAAO,IAAI,IAAI,CAACZ,cAAc,EAAEW,MAAM;IACzD,OAAOf,KAAK,KAAKiB,SAAS,GAAG,OAAO,GAAGjB,KAAK;EAChD;EACA,IAAIe,MAAM,CAACf,KAAK,EAAE;IACd,IAAI,CAACgB,OAAO,GAAGhB,KAAK;EACxB;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIkB,QAAQ,GAAG;IACX,OAAO,IAAI,CAACC,SAAS,IAAI,IAAI,CAACf,cAAc,EAAEc,QAAQ;EAC1D;EACA,IAAIA,QAAQ,CAAClB,KAAK,EAAE;IAChB,IAAI,CAACmB,SAAS,GAAGnB,KAAK;EAC1B;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIoB,UAAU,GAAG;IACb,MAAMpB,KAAK,GAAG,IAAI,CAACqB,WAAW,IAAI,IAAI,CAACjB,cAAc,EAAEgB,UAAU;IACjE,OAAOpB,KAAK,KAAKiB,SAAS,GAAG,IAAI,GAAGjB,KAAK;EAC7C;EACA,IAAIoB,UAAU,CAACpB,KAAK,EAAE;IAClB,IAAI,CAACqB,WAAW,GAAGrB,KAAK;EAC5B;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIsB,UAAU,GAAG;IACb,MAAMtB,KAAK,GAAG,IAAI,CAACuB,WAAW,IAAI,IAAI,CAACnB,cAAc,EAAEkB,UAAU;IACjE,OAAOtB,KAAK,KAAKiB,SAAS,GAAG,CAAC,GAAGjB,KAAK;EAC1C;EACA,IAAIsB,UAAU,CAACtB,KAAK,EAAE;IAClB,IAAI,CAACuB,WAAW,GAAGvB,KAAK;EAC5B;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIwB,qBAAqB,GAAG;IACxB,MAAMxB,KAAK,GAAG,IAAI,CAACyB,sBAAsB,IAAI,IAAI,CAACrB,cAAc,EAAEoB,qBAAqB;IACvF,OAAOxB,KAAK,KAAKiB,SAAS,GAAG,iCAAiC,GAAGjB,KAAK;EAC1E;EACA,IAAIwB,qBAAqB,CAACxB,KAAK,EAAE;IAC7B,IAAI,CAACyB,sBAAsB,GAAGzB,KAAK;EACvC;EACA;AACJ;AACA;AACA;AACA;EACI,IAAI0B,qBAAqB,GAAG;IACxB,MAAM1B,KAAK,GAAG,IAAI,CAAC2B,sBAAsB,IAAI,IAAI,CAACvB,cAAc,EAAEsB,qBAAqB;IACvF,OAAO1B,KAAK,KAAKiB,SAAS,GAAG,YAAY,GAAGjB,KAAK;EACrD;EACA,IAAI0B,qBAAqB,CAAC1B,KAAK,EAAE;IAC7B,IAAI,CAAC2B,sBAAsB,GAAG3B,KAAK;EACvC;EACA;AACJ;AACA;AACA;AACA;EACI,IAAI4B,QAAQ,GAAG;IACX,OAAO,IAAI,CAACC,SAAS,IAAI,IAAI,CAACzB,cAAc,EAAEwB,QAAQ;EAC1D;EACA,IAAIA,QAAQ,CAAC5B,KAAK,EAAE;IAChB,IAAI,CAAC6B,SAAS,GAAG7B,KAAK;EAC1B;EACA;AACJ;AACA;AACA;AACA;EACI,IAAI8B,UAAU,GAAG;IACb,OAAO,IAAI,CAACC,WAAW,IAAI,IAAI,CAAC3B,cAAc,EAAE0B,UAAU;EAC9D;EACA,IAAIA,UAAU,CAACE,GAAG,EAAE;IAChB,IAAI,CAACD,WAAW,GAAGC,GAAG;EAC1B;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIC,OAAO,GAAG;IACV,OAAO,IAAI,CAACC,QAAQ;EACxB;EACA,IAAID,OAAO,CAACD,GAAG,EAAE;IACb,IAAI,CAACE,QAAQ,GAAGF,GAAG;EACvB;EACA;AACJ;AACA;AACA;AACA;EACIG,aAAa,GAAG,IAAIzE,YAAY,EAAE;EAClC;AACJ;AACA;AACA;AACA;EACI0E,YAAY,GAAG,IAAI1E,YAAY,EAAE;EACjC;AACJ;AACA;AACA;AACA;EACI2E,MAAM,GAAG,IAAI3E,YAAY,EAAE;EAC3B;AACJ;AACA;AACA;AACA;EACI4E,YAAY,GAAG,IAAI5E,YAAY,EAAE;EACjC;AACJ;AACA;AACA;AACA;EACI6E,MAAM,GAAG,IAAI7E,YAAY,EAAE;EAC3B;AACJ;AACA;AACA;AACA;EACI8E,gBAAgB,GAAG,IAAI9E,YAAY,EAAE;EACrC;AACJ;AACA;AACA;AACA;EACI+E,eAAe,GAAG,IAAI/E,YAAY,EAAE;EACpCgF,SAAS;EACTC,gBAAgB;EAChBC,gBAAgB;EAChBC,eAAe;EACf9C,QAAQ,GAAG,KAAK;EAChBI,KAAK;EACLG,MAAM;EACNI,WAAW;EACXE,aAAa;EACbE,kBAAkB;EAClBE,OAAO;EACPG,SAAS;EACTE,WAAW;EACXE,WAAW;EACXE,sBAAsB;EACtBE,sBAAsB;EACtBE,SAAS;EACTE,WAAW;EACXG,QAAQ;EACRjC,YAAY,GAAG,KAAK;EACpB6C,gBAAgB,GAAG,KAAK;EACxBC,uBAAuB,GAAG,KAAK;EAC/BC,aAAa;EACbC,qBAAqB;EACrBC,sBAAsB;EACtBC,wBAAwB;EACxBC,MAAM;EACNC,gBAAgB,GAAG;IACfC,OAAO,EAAE,aAAa;IACtBC,MAAM,EAAE,YAAY;IACpBC,GAAG,EAAE,8BAA8B;IACnC,WAAW,EAAE,8BAA8B;IAC3C,SAAS,EAAE,8BAA8B;IACzCC,MAAM,EAAE,6BAA6B;IACrC,cAAc,EAAE,6BAA6B;IAC7C,YAAY,EAAE,6BAA6B;IAC3CC,IAAI,EAAE,8BAA8B;IACpC,YAAY,EAAE,8BAA8B;IAC5C,UAAU,EAAE,8BAA8B;IAC1CC,KAAK,EAAE,6BAA6B;IACpC,aAAa,EAAE,6BAA6B;IAC5C,WAAW,EAAE;EACjB,CAAC;EACD,IAAIpD,KAAK,GAAG;IACR,IAAIlD,iBAAiB,CAAC,IAAI,CAACkC,UAAU,CAAC,EAAE;MACpC,OAAO,IAAI,CAACW,IAAI,KAAK,OAAO,IAAK,IAAI,CAACM,wBAAwB,IAAI,IAAI,CAAC4C,MAAM,EAAEQ,UAAU,CAAC,IAAI,CAACpD,wBAAwB,CAACqD,KAAK,EAAEC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAK,eAAc,IAAI,CAACtD,wBAAwB,CAACuD,UAAW,GAAE,CAAC,CAACC,OAAQ;IAChO;EACJ;EACA,IAAIC,WAAW,GAAG;IACd,OAAO,IAAI,CAAC/D,IAAI,KAAK,IAAI,CAACK,KAAK,GAAG,OAAO,GAAG,SAAS,CAAC;EAC1D;EACA,IAAIH,cAAc,GAAG;IACjB,OAAO;MAAE,GAAG,IAAI,CAACV,MAAM,EAAEU,cAAc;MAAE,GAAG,IAAI,CAAC6B;IAAQ,CAAC,CAAC,CAAC;EAChE;;EACA,IAAIzB,wBAAwB,GAAG;IAC3B,OAAO;MAAE,GAAG,IAAI,CAACJ,cAAc,EAAE0B,UAAU;MAAE,GAAG,IAAI,CAACA;IAAW,CAAC,CAAC,CAAC;EACvE;;EACA,IAAIoC,0BAA0B,GAAG;IAC7B,OAAO,IAAI,CAAC1D,wBAAwB,EAAE2D,SAAS,IAAI,QAAQ;EAC/D;EACA,IAAIC,SAAS,GAAG;IACZ,OAAO,IAAI,CAACzB,gBAAgB,EAAE0B,aAAa;EAC/C;EACA,IAAIC,SAAS,GAAG;IACZ,OAAO,IAAI,CAAC1B,gBAAgB,EAAEyB,aAAa;EAC/C;EACA,IAAIE,QAAQ,GAAG;IACX,OAAO9F,UAAU,CAAC+F,gBAAgB,CAAC,IAAI,CAACzD,MAAM,EAAE,IAAI,CAACvB,EAAE,EAAE6E,aAAa,CAAC;EAC3E;EACAI,WAAW,CAACnF,QAAQ,EAAEC,UAAU,EAAEC,EAAE,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,cAAc,EAAEC,EAAE,EAAEC,IAAI,EAAE;IAC9E,IAAI,CAACP,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACuD,MAAM,GAAG,IAAI,CAAC9D,QAAQ,CAACoF,WAAW;EAC3C;EACAC,kBAAkB,GAAG;IACjB,IAAI,CAACjC,SAAS,EAAEkC,OAAO,CAAEC,IAAI,IAAK;MAC9B,QAAQA,IAAI,CAACC,OAAO,EAAE;QAClB,KAAK,SAAS;UACV,IAAI,CAACjC,eAAe,GAAGgC,IAAI,CAACE,QAAQ;UACpC;QACJ;QACA;UACI,IAAI,CAAClC,eAAe,GAAGgC,IAAI,CAACE,QAAQ;UACpC;MAAM;IAElB,CAAC,CAAC;EACN;EACAC,IAAI,CAACC,OAAO,EAAEC,OAAO,GAAG,KAAK,EAAE;IAC3B,IAAI,CAACC,eAAe,CAAC,IAAI,CAAC;IAC1B,IAAI,CAACC,YAAY,CAAC,QAAQ,EAAE;MAAEH,OAAO,EAAEA,OAAO,IAAI,IAAI,CAACb,SAAS;MAAErD,MAAM,EAAE,IAAI,CAACwD,QAAQ;MAAErE,IAAI,EAAE,IAAI,CAAC+D;IAAY,CAAC,CAAC;IAClHiB,OAAO,IAAIzG,UAAU,CAAC4G,KAAK,CAAC,IAAI,CAACd,QAAQ,CAAC;IAC1C,IAAI,CAAChE,KAAK,IAAI9B,UAAU,CAAC6G,QAAQ,CAAC,IAAI,CAAChG,QAAQ,EAAEiG,IAAI,EAAE,mBAAmB,CAAC;EAC/E;EACAC,IAAI,CAACP,OAAO,EAAEC,OAAO,GAAG,KAAK,EAAE;IAC3B,IAAI,CAAC,IAAI,CAACpF,OAAO,EAAE;MACf;IACJ,CAAC,MACI;MACD,IAAI,CAACqF,eAAe,CAAC,KAAK,CAAC;MAC3B,IAAI,CAACC,YAAY,CAAC,QAAQ,EAAE;QAAEH,OAAO,EAAEA,OAAO,IAAI,IAAI,CAACb,SAAS;QAAErD,MAAM,EAAE,IAAI,CAACwD,QAAQ;QAAErE,IAAI,EAAE,IAAI,CAAC+D;MAAY,CAAC,CAAC;MAClHiB,OAAO,IAAIzG,UAAU,CAAC4G,KAAK,CAAC,IAAI,CAACd,QAAQ,CAAC;MAC1C,IAAI,CAAChE,KAAK,IAAI9B,UAAU,CAACgH,WAAW,CAAC,IAAI,CAACnG,QAAQ,EAAEiG,IAAI,EAAE,mBAAmB,CAAC;IAClF;EACJ;EACAG,YAAY,GAAG;IACX,CAAC,IAAI,CAACnF,KAAK,IAAI9B,UAAU,CAACiH,YAAY,CAAC,IAAI,CAACtB,SAAS,EAAE,IAAI,CAACG,QAAQ,EAAE,IAAI,CAACrD,QAAQ,CAAC;EACxF;EACAiE,eAAe,CAACrF,OAAO,EAAE;IACrB,IAAI,CAACC,QAAQ,GAAGD,OAAO;IACvB,IAAI,CAACqC,aAAa,CAACwD,IAAI,CAAC7F,OAAO,CAAC;EACpC;EACA8F,cAAc,GAAG;IACb,IAAI,CAAC9C,gBAAgB,GAAG,IAAI;EAChC;EACA+C,qBAAqB,CAACC,KAAK,EAAE;IACzB,IAAI,CAACnG,cAAc,CAACoG,GAAG,CAAC;MACpBC,aAAa,EAAEF,KAAK;MACpB/E,MAAM,EAAE,IAAI,CAACwD;IACjB,CAAC,CAAC;IACF,IAAI,CAACxB,uBAAuB,GAAG,IAAI;EACvC;EACAkD,8BAA8B,CAACH,KAAK,EAAE;IAClC,QAAQA,KAAK,CAACI,OAAO;MACjB,KAAK,SAAS;QACV,IAAI,CAACd,YAAY,CAAC,cAAc,EAAE;UAAEH,OAAO,EAAE,IAAI,CAACb,SAAS;UAAErD,MAAM,EAAE,IAAI,CAACwD,QAAQ;UAAErE,IAAI,EAAE,IAAI,CAAC+D;QAAY,CAAC,CAAC;QAC7G,IAAI,IAAI,CAAC7C,UAAU,EAAE;UACjBxC,WAAW,CAACuH,GAAG,CAAC,IAAI,CAAClC,WAAW,EAAE,IAAI,CAACG,SAAS,EAAE,IAAI,CAAC9C,UAAU,GAAG,IAAI,CAAC5B,MAAM,EAAE0G,MAAM,CAAC,IAAI,CAACnC,WAAW,CAAC,CAAC;QAC9G;QACAxF,UAAU,CAAC4H,aAAa,CAAC,IAAI,CAACjC,SAAS,EAAE,IAAI,CAAClD,QAAQ,KAAK,MAAM,GAAG,IAAI,CAAC5B,QAAQ,CAACiG,IAAI,GAAG,IAAI,CAACrE,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAAC;QACtH,IAAI,CAACwE,YAAY,EAAE;QACnB;MACJ,KAAK,MAAM;QACP,IAAI,CAACN,YAAY,CAAC,cAAc,EAAE;UAAEH,OAAO,EAAE,IAAI,CAACb,SAAS;UAAErD,MAAM,EAAE,IAAI,CAACwD,QAAQ;UAAErE,IAAI,EAAE,IAAI,CAAC+D;QAAY,CAAC,CAAC;QAC7G,IAAI,CAAC1D,KAAK,IAAI9B,UAAU,CAAC6G,QAAQ,CAAC,IAAI,CAAClB,SAAS,EAAE,2BAA2B,CAAC;QAC9E;IAAM;IAEd,IAAI,CAACgB,YAAY,CAAC,kBAAkB,EAAEU,KAAK,CAAC;EAChD;EACAQ,6BAA6B,CAACR,KAAK,EAAE;IACjC,MAAMS,SAAS,GAAG,IAAI,CAACnC,SAAS,IAAI0B,KAAK,CAACU,OAAO,CAACC,aAAa;IAC/D,QAAQX,KAAK,CAACI,OAAO;MACjB,KAAK,SAAS;QACV,IAAI,CAAClB,IAAI,CAACuB,SAAS,EAAE,IAAI,CAAC;QAC1B,IAAI,CAACG,aAAa,EAAE;QACpB;MACJ,KAAK,MAAM;QACP,IAAI,CAAClB,IAAI,CAACe,SAAS,EAAE,IAAI,CAAC;QAC1B,IAAI,CAACI,eAAe,EAAE;QACtBlI,UAAU,CAAC4H,aAAa,CAAC,IAAI,CAACjC,SAAS,EAAE,IAAI,CAACG,QAAQ,EAAE,IAAI,CAACrD,QAAQ,CAAC;QACtEtC,WAAW,CAACgI,KAAK,CAACL,SAAS,CAAC;QAC5B,IAAI,CAACtG,YAAY,GAAG,KAAK;QACzB,IAAI,CAACL,EAAE,CAACiH,YAAY,EAAE;QACtB;IAAM;IAEd,IAAI,CAACzB,YAAY,CAAC,iBAAiB,EAAEU,KAAK,CAAC;EAC/C;EACAV,YAAY,CAAC0B,IAAI,EAAEC,MAAM,EAAE;IACvB,IAAI,CAACD,IAAI,CAAC,CAACnB,IAAI,CAACoB,MAAM,CAAC;IACvB,IAAI,CAAC9E,OAAO,IAAI,IAAI,CAACA,OAAO,CAAC6E,IAAI,CAAC,IAAI,IAAI,CAAC7E,OAAO,CAAC6E,IAAI,CAAC,CAACC,MAAM,CAAC;IAChE,IAAI,CAACrH,MAAM,EAAEU,cAAc,IAAI,CAAC,IAAI,CAACV,MAAM,EAAEU,cAAc,EAAE0G,IAAI,CAAC,IAAI,CAAC,IAAI,CAACpH,MAAM,EAAEU,cAAc,EAAE0G,IAAI,CAAC,CAACC,MAAM,CAAC;EACrH;EACAL,aAAa,GAAG;IACZ,IAAI,CAACM,kBAAkB,EAAE;IACzB,IAAI,CAACC,yBAAyB,EAAE;IAChC,IAAI,CAACC,0BAA0B,EAAE;IACjC,IAAI,CAACC,4BAA4B,EAAE;EACvC;EACAR,eAAe,GAAG;IACd,IAAI,CAACS,oBAAoB,EAAE;IAC3B,IAAI,CAACC,2BAA2B,EAAE;IAClC,IAAI,CAACC,4BAA4B,EAAE;IACnC,IAAI,CAACC,8BAA8B,EAAE;EACzC;EACAP,kBAAkB,GAAG;IACjB,IAAI,CAAC,IAAI,CAAChE,aAAa,EAAE;MACrB,IAAI,CAACA,aAAa,GAAG,IAAItE,6BAA6B,CAAC,IAAI,CAAC6F,QAAQ,EAAGuB,KAAK,IAAK;QAC7E,MAAM0B,KAAK,GAAG,IAAI,CAAC5F,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACkE,KAAK,EAAE;UAAE2B,IAAI,EAAE,QAAQ;UAAEvH,IAAI,EAAE,IAAI,CAAC+D,WAAW;UAAEuD,KAAK,EAAE;QAAK,CAAC,CAAC,GAAG,IAAI;QAClHA,KAAK,IAAI,IAAI,CAAChC,IAAI,CAACM,KAAK,EAAE,IAAI,CAAC;MACnC,CAAC,CAAC;IACN;IACA,IAAI,CAAC9C,aAAa,CAACgE,kBAAkB,EAAE;EAC3C;EACAI,oBAAoB,GAAG;IACnB,IAAI,IAAI,CAACpE,aAAa,EAAE;MACpB,IAAI,CAACA,aAAa,CAACoE,oBAAoB,EAAE;IAC7C;EACJ;EACAH,yBAAyB,GAAG;IACxB,IAAI,CAAC,IAAI,CAAChE,qBAAqB,EAAE;MAC7B,IAAI,CAACA,qBAAqB,GAAG,IAAI,CAACxD,QAAQ,CAACiI,MAAM,CAAC,IAAI,CAACpI,QAAQ,EAAE,OAAO,EAAGwG,KAAK,IAAK;QACjF,MAAM6B,eAAe,GAAG,IAAI,CAACpD,QAAQ,KAAK,IAAI,CAACA,QAAQ,CAACqD,UAAU,CAAC9B,KAAK,CAAC/E,MAAM,CAAC,IAAK,CAAC,IAAI,CAAC+B,gBAAgB,IAAI,IAAI,CAACyB,QAAQ,CAACsD,QAAQ,CAAC/B,KAAK,CAAC/E,MAAM,CAAE,CAAC;QACrJ,MAAM+G,gBAAgB,GAAG,CAACH,eAAe,IAAI,CAAC,IAAI,CAAC5E,uBAAuB;QAC1E,MAAMyE,KAAK,GAAG,IAAI,CAAC5F,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACkE,KAAK,EAAE;UAAE2B,IAAI,EAAE,SAAS;UAAEvH,IAAI,EAAE,IAAI,CAAC+D,WAAW;UAAEuD,KAAK,EAAE1B,KAAK,CAACiC,KAAK,KAAK,CAAC,IAAID;QAAiB,CAAC,CAAC,GAAGA,gBAAgB;QAChKN,KAAK,IAAI,IAAI,CAAChC,IAAI,CAACM,KAAK,CAAC;QACzB,IAAI,CAAChD,gBAAgB,GAAG,IAAI,CAACC,uBAAuB,GAAG,KAAK;MAChE,CAAC,CAAC;IACN;EACJ;EACAsE,2BAA2B,GAAG;IAC1B,IAAI,IAAI,CAACpE,qBAAqB,EAAE;MAC5B,IAAI,CAACA,qBAAqB,EAAE;MAC5B,IAAI,CAACA,qBAAqB,GAAG,IAAI;IACrC;EACJ;EACAiE,0BAA0B,GAAG;IACzB,IAAI,CAAC,IAAI,CAAChE,sBAAsB,EAAE;MAC9B,IAAI,CAACA,sBAAsB,GAAG,IAAI,CAACzD,QAAQ,CAACiI,MAAM,CAAC,IAAI,CAACtE,MAAM,EAAE,QAAQ,EAAG0C,KAAK,IAAK;QACjF,MAAM0B,KAAK,GAAG,IAAI,CAAC5F,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACkE,KAAK,EAAE;UAAE2B,IAAI,EAAE,QAAQ;UAAEvH,IAAI,EAAE,IAAI,CAAC+D,WAAW;UAAEuD,KAAK,EAAE,CAAC/I,UAAU,CAACuJ,aAAa;QAAG,CAAC,CAAC,GAAG,CAACvJ,UAAU,CAACuJ,aAAa,EAAE;QAChKR,KAAK,IAAI,IAAI,CAAChC,IAAI,CAACM,KAAK,EAAE,IAAI,CAAC;MACnC,CAAC,CAAC;IACN;EACJ;EACAwB,4BAA4B,GAAG;IAC3B,IAAI,IAAI,CAACpE,sBAAsB,EAAE;MAC7B,IAAI,CAACA,sBAAsB,EAAE;MAC7B,IAAI,CAACA,sBAAsB,GAAG,IAAI;IACtC;EACJ;EACAiE,4BAA4B,GAAG;IAC3B,IAAI,IAAI,CAAChE,wBAAwB,EAAE;MAC/B;IACJ;IACA,IAAI,CAACtD,IAAI,CAACoI,iBAAiB,CAAC,MAAM;MAC9B,IAAI,CAAC9E,wBAAwB,GAAG,IAAI,CAAC1D,QAAQ,CAACiI,MAAM,CAAC,IAAI,CAACtE,MAAM,EAAE,SAAS,EAAG0C,KAAK,IAAK;QACpF,IAAI,IAAI,CAAC1F,cAAc,CAAC8H,YAAY,KAAK,KAAK,IAAIpC,KAAK,CAACqC,IAAI,KAAK,QAAQ,EAAE;UACvE;QACJ;QACA,MAAMX,KAAK,GAAG,IAAI,CAAC5F,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACkE,KAAK,EAAE;UAAE2B,IAAI,EAAE,SAAS;UAAEvH,IAAI,EAAE,IAAI,CAAC+D,WAAW;UAAEuD,KAAK,EAAE,CAAC/I,UAAU,CAACuJ,aAAa;QAAG,CAAC,CAAC,GAAG,CAACvJ,UAAU,CAACuJ,aAAa,EAAE;QACjK,IAAIR,KAAK,EAAE;UACP,IAAI,CAAC3H,IAAI,CAACuI,GAAG,CAAC,MAAM;YAChB,IAAI,CAAC5C,IAAI,CAACM,KAAK,EAAE,IAAI,CAAC;UAC1B,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACAyB,8BAA8B,GAAG;IAC7B,IAAI,IAAI,CAACpE,wBAAwB,EAAE;MAC/B,IAAI,CAACA,wBAAwB,EAAE;MAC/B,IAAI,CAACA,wBAAwB,GAAG,IAAI;IACxC;EACJ;EACAkF,WAAW,GAAG;IACV,IAAI,CAAC7C,IAAI,CAAC,IAAI,CAACpB,SAAS,EAAE,IAAI,CAAC;IAC/B,IAAI,IAAI,CAACA,SAAS,EAAE;MAChB3F,UAAU,CAAC4H,aAAa,CAAC,IAAI,CAACjC,SAAS,EAAE,IAAI,CAACG,QAAQ,EAAE,IAAI,CAACrD,QAAQ,CAAC;MACtEtC,WAAW,CAACgI,KAAK,CAAC,IAAI,CAACxC,SAAS,CAAC;IACrC;IACA,IAAI,IAAI,CAACpB,aAAa,EAAE;MACpB,IAAI,CAACA,aAAa,CAACsF,OAAO,EAAE;MAC5B,IAAI,CAACtF,aAAa,GAAG,IAAI;IAC7B;IACA,IAAI,CAAC2D,eAAe,EAAE;EAC1B;EACA,OAAO4B,IAAI;IAAA,iBAAwFvJ,OAAO,EAAjBxB,EAAE,mBAAiCF,QAAQ,GAA3CE,EAAE,mBAAsDG,WAAW,GAAnEH,EAAE,mBAA8EA,EAAE,CAACgL,UAAU,GAA7FhL,EAAE,mBAAwGA,EAAE,CAACiL,SAAS,GAAtHjL,EAAE,mBAAiIc,EAAE,CAACoK,aAAa,GAAnJlL,EAAE,mBAA8Jc,EAAE,CAACqK,cAAc,GAAjLnL,EAAE,mBAA4LA,EAAE,CAACoL,iBAAiB,GAAlNpL,EAAE,mBAA6NA,EAAE,CAACqL,MAAM;EAAA;EACjU,OAAOC,IAAI,kBAD8EtL,EAAE;IAAA,MACJwB,OAAO;IAAA;IAAA;MAAA;QADLxB,EAAE,0BAC+wBe,aAAa;MAAA;MAAA;QAAA;QAD9xBf,EAAE,qBAAFA,EAAE;MAAA;IAAA;IAAA;MAAA;QAAFA,EAAE;QAAFA,EAAE;MAAA;MAAA;QAAA;QAAFA,EAAE,qBAAFA,EAAE;QAAFA,EAAE,qBAAFA,EAAE;MAAA;IAAA;IAAA;IAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAA,WAAFA,EAAE,oBACmsB,CAACqB,sBAAsB,CAAC;IAAA;IAAA;IAAA;IAAA;IAAA;MAAA;QAD7tBrB,EAAE;QAAFA,EAAE,uDAwCjF;MAAA;MAAA;QAxC+EA,EAAE,qCAGhE;MAAA;IAAA;IAAA,eAsCyhCJ,EAAE,CAAC2L,OAAO,EAAoF3L,EAAE,CAAC4L,IAAI,EAA6F5L,EAAE,CAAC6L,gBAAgB,EAAoJ7L,EAAE,CAAC8L,OAAO;IAAA;IAAA;IAAA;MAAA,WAA6D,CAAC/L,OAAO,CAAC,yBAAyB,EAAE,CAACD,UAAU,CAAC,QAAQ,EAAE,CAACD,YAAY,CAACiC,2BAA2B,CAAC,CAAC,CAAC,EAAEhC,UAAU,CAAC,QAAQ,EAAE,CAACD,YAAY,CAACoC,2BAA2B,CAAC,CAAC,CAAC,CAAC,CAAC;IAAC;IAAA;EAAA;AACppD;AACA;EAAA,mDA3C6F7B,EAAE,mBA2CJwB,OAAO,EAAc,CAAC;IACrGyI,IAAI,EAAE7J,SAAS;IACfuL,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE,WAAW;MAAErE,QAAQ,EAAG;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;MAAEsE,UAAU,EAAE,CAAClM,OAAO,CAAC,yBAAyB,EAAE,CAACD,UAAU,CAAC,QAAQ,EAAE,CAACD,YAAY,CAACiC,2BAA2B,CAAC,CAAC,CAAC,EAAEhC,UAAU,CAAC,QAAQ,EAAE,CAACD,YAAY,CAACoC,2BAA2B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAAEiK,eAAe,EAAEzL,uBAAuB,CAAC0L,MAAM;MAAEC,aAAa,EAAE1L,iBAAiB,CAAC2L,IAAI;MAAEC,SAAS,EAAE,CAAC7K,sBAAsB,CAAC;MAAE8K,IAAI,EAAE;QAC5SC,KAAK,EAAE;MACX,CAAC;MAAEC,MAAM,EAAE,CAAC,2+BAA2+B;IAAE,CAAC;EACtgC,CAAC,CAAC,EAAkB,MAAM,CAAC;IAAEpC,IAAI,EAAEqC,QAAQ;IAAEC,UAAU,EAAE,CAAC;MAC9CtC,IAAI,EAAE1J,MAAM;MACZoL,IAAI,EAAE,CAAC7L,QAAQ;IACnB,CAAC;EAAE,CAAC,EAAE;IAAEmK,IAAI,EAAExG,SAAS;IAAE8I,UAAU,EAAE,CAAC;MAClCtC,IAAI,EAAE1J,MAAM;MACZoL,IAAI,EAAE,CAACxL,WAAW;IACtB,CAAC;EAAE,CAAC,EAAE;IAAE8J,IAAI,EAAEjK,EAAE,CAACgL;EAAW,CAAC,EAAE;IAAEf,IAAI,EAAEjK,EAAE,CAACiL;EAAU,CAAC,EAAE;IAAEhB,IAAI,EAAEnJ,EAAE,CAACoK;EAAc,CAAC,EAAE;IAAEjB,IAAI,EAAEnJ,EAAE,CAACqK;EAAe,CAAC,EAAE;IAAElB,IAAI,EAAEjK,EAAE,CAACoL;EAAkB,CAAC,EAAE;IAAEnB,IAAI,EAAEjK,EAAE,CAACqL;EAAO,CAAC,CAAC,EAAkB;IAAE/I,OAAO,EAAE,CAAC;MAClM2H,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEkC,IAAI,EAAE,CAAC;MACPuH,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAElB,KAAK,EAAE,CAAC;MACR2K,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEyC,UAAU,EAAE,CAAC;MACbgH,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAE2C,YAAY,EAAE,CAAC;MACf8G,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAE6C,iBAAiB,EAAE,CAAC;MACpB4G,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAE+C,MAAM,EAAE,CAAC;MACT0G,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEkD,QAAQ,EAAE,CAAC;MACXuG,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEoD,UAAU,EAAE,CAAC;MACbqG,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEsD,UAAU,EAAE,CAAC;MACbmG,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEwD,qBAAqB,EAAE,CAAC;MACxBiG,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAE0D,qBAAqB,EAAE,CAAC;MACxB+F,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAE4D,QAAQ,EAAE,CAAC;MACX6F,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAE8D,UAAU,EAAE,CAAC;MACb2F,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEiE,OAAO,EAAE,CAAC;MACVwF,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEmE,aAAa,EAAE,CAAC;MAChBsF,IAAI,EAAExJ;IACV,CAAC,CAAC;IAAEmE,YAAY,EAAE,CAAC;MACfqF,IAAI,EAAExJ;IACV,CAAC,CAAC;IAAEoE,MAAM,EAAE,CAAC;MACToF,IAAI,EAAExJ;IACV,CAAC,CAAC;IAAEqE,YAAY,EAAE,CAAC;MACfmF,IAAI,EAAExJ;IACV,CAAC,CAAC;IAAEsE,MAAM,EAAE,CAAC;MACTkF,IAAI,EAAExJ;IACV,CAAC,CAAC;IAAEuE,gBAAgB,EAAE,CAAC;MACnBiF,IAAI,EAAExJ;IACV,CAAC,CAAC;IAAEwE,eAAe,EAAE,CAAC;MAClBgF,IAAI,EAAExJ;IACV,CAAC,CAAC;IAAEyE,SAAS,EAAE,CAAC;MACZ+E,IAAI,EAAEvJ,eAAe;MACrBiL,IAAI,EAAE,CAAC5K,aAAa;IACxB,CAAC,CAAC;IAAEoE,gBAAgB,EAAE,CAAC;MACnB8E,IAAI,EAAEtJ,SAAS;MACfgL,IAAI,EAAE,CAAC,SAAS;IACpB,CAAC,CAAC;IAAEvG,gBAAgB,EAAE,CAAC;MACnB6E,IAAI,EAAEtJ,SAAS;MACfgL,IAAI,EAAE,CAAC,SAAS;IACpB,CAAC;EAAE,CAAC;AAAA;AAChB,MAAMa,aAAa,CAAC;EAChB,OAAOzB,IAAI;IAAA,iBAAwFyB,aAAa;EAAA;EAChH,OAAOC,IAAI,kBAtJ8EzM,EAAE;IAAA,MAsJSwM;EAAa;EACjH,OAAOE,IAAI,kBAvJ8E1M,EAAE;IAAA,UAuJkCD,YAAY,EAAEiB,YAAY,EAAEA,YAAY;EAAA;AACzK;AACA;EAAA,mDAzJ6FhB,EAAE,mBAyJJwM,aAAa,EAAc,CAAC;IAC3GvC,IAAI,EAAErJ,QAAQ;IACd+K,IAAI,EAAE,CAAC;MACCgB,OAAO,EAAE,CAAC5M,YAAY,EAAEiB,YAAY,CAAC;MACrC4L,OAAO,EAAE,CAACpL,OAAO,EAAER,YAAY,CAAC;MAChC6L,YAAY,EAAE,CAACrL,OAAO;IAC1B,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAASH,sBAAsB,EAAEG,OAAO,EAAEgL,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}