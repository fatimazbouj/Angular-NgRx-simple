{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport * as fromUsers from './index';\nconst initialUsersState = {\n  users: [],\n  isLoading: false\n};\nconst reducer = createReducer(initialUsersState, on(fromUsers.getUsers, state => {\n  return {\n    ...state,\n    isLoading: true\n  };\n}), on(fromUsers.getUsersSuccess, (state, {\n  users\n}) => {\n  return {\n    ...state,\n    isLoading: false,\n    users: users\n  };\n}), on(fromUsers.createUsers, state => {\n  return {\n    ...state,\n    isLoading: true\n  };\n}), on(fromUsers.createUserSuccess, (state, {\n  user\n}) => {\n  return {\n    ...state,\n    users: [...state.users, user],\n    isLoading: false\n  };\n}), on(fromUsers.updateUser, state => {\n  return {\n    ...state,\n    isLoading: true\n  };\n}), on(fromUsers.updateUserSuccess, (state, {\n  user\n}) => {\n  return {\n    ...state,\n    users: state.users.map(e => e.id === user.id ? user : e),\n    isLoading: false\n  };\n}), on(fromUsers.deleteUser, state => {\n  return {\n    ...state,\n    isLoading: true\n  };\n}), on(fromUsers.deleteUserSuccess, (state, {\n  user\n}) => {\n  return {\n    ...state,\n    users: state.users.filter(e => e.id !== user.id),\n    isLoading: false\n  };\n}));\nexport function usersReducer(state = initialUsersState, action) {\n  return reducer(state, action);\n}","map":{"version":3,"mappings":"AAAA,SAAiBA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAEvD,OAAO,KAAKC,SAAS,MAAM,SAAS;AAIpC,MAAMC,iBAAiB,GAAe;EACpCC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE;CACZ;AAED,MAAMC,OAAO,GAAGN,aAAa,CAC3BG,iBAAiB,EACjBF,EAAE,CACAC,SAAS,CAACK,QAAQ,EACjBC,KAAK,IAAI;EACR,OAAO;IACL,GAAGA,KAAK;IACRH,SAAS,EAAE;GACZ;AACH,CAAC,CACF,EAEDJ,EAAE,CACAC,SAAS,CAACO,eAAe,EACzB,CAACD,KAAK,EAAE;EAAEJ;AAAK,CAAE,KAAI;EACnB,OAAO;IACL,GAAGI,KAAK;IACRH,SAAS,EAAE,KAAK;IAChBD,KAAK,EAAEA;GACR;AACH,CAAC,CACF,EACDH,EAAE,CACAC,SAAS,CAACQ,WAAW,EAAEF,KAAK,IAAG;EAC7B,OAAM;IACJ,GAAGA,KAAK;IACRH,SAAS,EAAC;GACX;AACH,CAAC,CACF,EACDJ,EAAE,CACAC,SAAS,CAACS,iBAAiB,EAAC,CAACH,KAAK,EAAC;EAACI;AAAI,CAAC,KAAG;EAC1C,OAAM;IACJ,GAAGJ,KAAK;IACRJ,KAAK,EAAC,CAAC,GAAGI,KAAK,CAACJ,KAAK,EAACQ,IAAI,CAAC;IAC3BP,SAAS,EAAC;GACX;AACH,CAAC,CACF,EACDJ,EAAE,CACAC,SAAS,CAACW,UAAU,EAAEL,KAAK,IAAG;EAC5B,OAAM;IACJ,GAAGA,KAAK;IACRH,SAAS,EAAC;GACX;AACH,CAAC,CACF,EACDJ,EAAE,CAACC,SAAS,CAACY,iBAAiB,EAAC,CAACN,KAAK,EAAG;EAAEI;AAAI,CAAE,KAAG;EACjD,OAAM;IACJ,GAAGJ,KAAK;IACRJ,KAAK,EAAEI,KAAK,CAACJ,KAAK,CAACW,GAAG,CAAEC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAIL,IAAI,CAACK,EAAE,GAACL,IAAI,GAACI,CAAC,CAAC;IACpDX,SAAS,EAAC;GACX;AACH,CAAC,CACF,EACDJ,EAAE,CACAC,SAAS,CAACgB,UAAU,EAAEV,KAAK,IAAG;EAC5B,OAAM;IACJ,GAAGA,KAAK;IACRH,SAAS,EAAC;GACX;AACH,CAAC,CACF,EACDJ,EAAE,CACAC,SAAS,CAACiB,iBAAiB,EAAC,CAACX,KAAK,EAAC;EAAEI;AAAI,CAAE,KAAG;EAC5C,OAAM;IACJ,GAAGJ,KAAK;IACRJ,KAAK,EAACI,KAAK,CAACJ,KAAK,CAACgB,MAAM,CAACJ,CAAC,IAAEA,CAAC,CAACC,EAAE,KAAGL,IAAI,CAACK,EAAE,CAAC;IAC3CZ,SAAS,EAAC;GACX;AACH,CAAC,CACF,CACA;AAED,OAAM,SAAUgB,YAAY,CAACb,KAAK,GAACL,iBAAiB,EAACmB,MAAc;EACjE,OAAOhB,OAAO,CAACE,KAAK,EAACc,MAAM,CAAC;AAC9B","names":["createReducer","on","fromUsers","initialUsersState","users","isLoading","reducer","getUsers","state","getUsersSuccess","createUsers","createUserSuccess","user","updateUser","updateUserSuccess","map","e","id","deleteUser","deleteUserSuccess","filter","usersReducer","action"],"sourceRoot":"","sources":["C:\\Users\\Administrator\\Desktop\\R&D\\angular\\NgRx-simple\\src\\app\\users\\store\\users.reducers.ts"],"sourcesContent":["import { Action, createReducer, on } from \"@ngrx/store\";\r\nimport { IUserState } from \"../interfaces/user-state.interface\";\r\nimport * as fromUsers from './index';\r\nimport { state } from \"@angular/animations\";\r\nimport { Actions } from \"@ngrx/effects\";\r\n\r\nconst initialUsersState: IUserState = {\r\n  users: [],\r\n  isLoading: false\r\n}\r\n\r\nconst reducer = createReducer(\r\n  initialUsersState,\r\n  on(\r\n    fromUsers.getUsers,\r\n    (state) => {\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    }\r\n  ),\r\n\r\n  on(\r\n    fromUsers.getUsersSuccess,\r\n    (state, { users }) => {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        users: users\r\n      };\r\n    }\r\n  ),\r\n  on(\r\n    fromUsers.createUsers,(state)=>{\r\n      return{\r\n        ...state,\r\n        isLoading:true\r\n      }\r\n    }\r\n  ),\r\n  on(\r\n    fromUsers.createUserSuccess,(state,{user})=>{\r\n      return{\r\n        ...state,\r\n        users:[...state.users,user],\r\n        isLoading:false\r\n      }\r\n    }\r\n  ),\r\n  on(\r\n    fromUsers.updateUser,(state)=>{\r\n      return{\r\n        ...state,\r\n        isLoading:true,\r\n      }\r\n    }\r\n  ),\r\n  on(fromUsers.updateUserSuccess,(state , { user })=>{\r\n    return{\r\n      ...state,\r\n      users: state.users.map((e)=> e.id=== user.id?user:e),\r\n      isLoading:false\r\n    }\r\n  }\r\n),\r\non(\r\n  fromUsers.deleteUser,(state)=>{\r\n    return{\r\n      ...state,\r\n      isLoading:true,\r\n    }\r\n  }\r\n),\r\non(\r\n  fromUsers.deleteUserSuccess,(state,{ user })=>{\r\n    return{\r\n      ...state,\r\n      users:state.users.filter(e=>e.id!==user.id),\r\n      isLoading:false\r\n    }\r\n  }\r\n)\r\n);\r\n\r\nexport function usersReducer(state=initialUsersState,action: Action):IUserState{\r\n  return reducer(state,action);\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}