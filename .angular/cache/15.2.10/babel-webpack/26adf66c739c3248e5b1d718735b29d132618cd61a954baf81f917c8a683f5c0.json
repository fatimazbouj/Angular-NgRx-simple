{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { SpinnerIcon } from 'primeng/icons/spinner';\n\n/**\n * Scroller is a performance-approach to handle huge data efficiently.\n * @group Components\n */\nconst _c0 = [\"element\"];\nconst _c1 = [\"content\"];\nfunction Scroller_ng_container_0_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c2 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    options: a1\n  };\n};\nfunction Scroller_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Scroller_ng_container_0_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.contentTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c2, ctx_r4.loadedItems, ctx_r4.getContentOptions()));\n  }\n}\nfunction Scroller_ng_container_0_ng_template_4_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Scroller_ng_container_0_ng_template_4_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Scroller_ng_container_0_ng_template_4_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r12 = ctx.$implicit;\n    const index_r13 = ctx.index;\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r11.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c2, item_r12, ctx_r11.getOptions(index_r13)));\n  }\n}\nconst _c3 = function (a0) {\n  return {\n    \"p-scroller-loading\": a0\n  };\n};\nfunction Scroller_ng_container_0_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8, 9);\n    i0.ɵɵtemplate(2, Scroller_ng_container_0_ng_template_4_ng_container_2_Template, 2, 5, \"ng-container\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c3, ctx_r6.d_loading))(\"ngStyle\", ctx_r6.contentStyle);\n    i0.ɵɵattribute(\"data-pc-section\", \"content\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.loadedItems)(\"ngForTrackBy\", ctx_r6._trackBy || ctx_r6.index);\n  }\n}\nfunction Scroller_ng_container_0_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r7.spacerStyle);\n    i0.ɵɵattribute(\"data-pc-section\", \"spacer\");\n  }\n}\nfunction Scroller_ng_container_0_div_7_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c4 = function (a0) {\n  return {\n    numCols: a0\n  };\n};\nconst _c5 = function (a0) {\n  return {\n    options: a0\n  };\n};\nfunction Scroller_ng_container_0_div_7_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Scroller_ng_container_0_div_7_ng_container_1_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const index_r20 = ctx.index;\n    const ctx_r18 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r18.loaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c5, ctx_r18.getLoaderOptions(index_r20, ctx_r18.both && i0.ɵɵpureFunction1(2, _c4, ctx_r18._numItemsInViewport.cols))));\n  }\n}\nfunction Scroller_ng_container_0_div_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Scroller_ng_container_0_div_7_ng_container_1_ng_container_1_Template, 2, 6, \"ng-container\", 14);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r15.loaderArr);\n  }\n}\nfunction Scroller_ng_container_0_div_7_ng_template_2_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c6 = function () {\n  return {\n    styleClass: \"p-scroller-loading-icon\"\n  };\n};\nfunction Scroller_ng_container_0_div_7_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Scroller_ng_container_0_div_7_ng_template_2_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r22 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r22.loaderIconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(3, _c5, i0.ɵɵpureFunction0(2, _c6)));\n  }\n}\nfunction Scroller_ng_container_0_div_7_ng_template_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"SpinnerIcon\", 16);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-scroller-loading-icon pi-spin\");\n    i0.ɵɵattribute(\"data-pc-section\", \"loadingIcon\");\n  }\n}\nfunction Scroller_ng_container_0_div_7_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Scroller_ng_container_0_div_7_ng_template_2_ng_container_0_Template, 2, 5, \"ng-container\", 0);\n    i0.ɵɵtemplate(1, Scroller_ng_container_0_div_7_ng_template_2_ng_template_1_Template, 1, 2, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n  }\n  if (rf & 2) {\n    const _r23 = i0.ɵɵreference(2);\n    const ctx_r17 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r17.loaderIconTemplate)(\"ngIfElse\", _r23);\n  }\n}\nconst _c7 = function (a0) {\n  return {\n    \"p-component-overlay\": a0\n  };\n};\nfunction Scroller_ng_container_0_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, Scroller_ng_container_0_div_7_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n    i0.ɵɵtemplate(2, Scroller_ng_container_0_div_7_ng_template_2_Template, 3, 2, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r16 = i0.ɵɵreference(3);\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c7, !ctx_r8.loaderTemplate));\n    i0.ɵɵattribute(\"data-pc-section\", \"loader\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.loaderTemplate)(\"ngIfElse\", _r16);\n  }\n}\nconst _c8 = function (a1, a2, a3) {\n  return {\n    \"p-scroller\": true,\n    \"p-scroller-inline\": a1,\n    \"p-both-scroll\": a2,\n    \"p-horizontal-scroll\": a3\n  };\n};\nfunction Scroller_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 2, 3);\n    i0.ɵɵlistener(\"scroll\", function Scroller_ng_container_0_Template_div_scroll_1_listener($event) {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.onContainerScroll($event));\n    });\n    i0.ɵɵtemplate(3, Scroller_ng_container_0_ng_container_3_Template, 2, 5, \"ng-container\", 0);\n    i0.ɵɵtemplate(4, Scroller_ng_container_0_ng_template_4_Template, 3, 7, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(6, Scroller_ng_container_0_div_6_Template, 1, 2, \"div\", 5);\n    i0.ɵɵtemplate(7, Scroller_ng_container_0_div_7_Template, 4, 6, \"div\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const _r5 = i0.ɵɵreference(5);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r0._styleClass);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0._style)(\"ngClass\", i0.ɵɵpureFunction3(12, _c8, ctx_r0.inline, ctx_r0.both, ctx_r0.horizontal));\n    i0.ɵɵattribute(\"id\", ctx_r0._id)(\"tabindex\", ctx_r0.tabindex)(\"data-pc-name\", \"scroller\")(\"data-pc-section\", \"root\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.contentTemplate)(\"ngIfElse\", _r5);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0._showSpacer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.loaderDisabled && ctx_r0._showLoader && ctx_r0.d_loading);\n  }\n}\nfunction Scroller_ng_template_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c9 = function (a0, a1) {\n  return {\n    rows: a0,\n    columns: a1\n  };\n};\nfunction Scroller_ng_template_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Scroller_ng_template_1_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r28.contentTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(5, _c2, ctx_r28.items, i0.ɵɵpureFunction2(2, _c9, ctx_r28._items, ctx_r28.loadedColumns)));\n  }\n}\nfunction Scroller_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n    i0.ɵɵtemplate(1, Scroller_ng_template_1_ng_container_1_Template, 2, 8, \"ng-container\", 17);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.contentTemplate);\n  }\n}\nconst _c10 = [\"*\"];\nclass Scroller {\n  document;\n  platformId;\n  renderer;\n  cd;\n  zone;\n  /**\n   * Unique identifier of the element.\n   * @group Props\n   */\n  get id() {\n    return this._id;\n  }\n  set id(val) {\n    this._id = val;\n  }\n  /**\n   * Inline style of the component.\n   * @group Props\n   */\n  get style() {\n    return this._style;\n  }\n  set style(val) {\n    this._style = val;\n  }\n  /**\n   * Style class of the element.\n   * @group Props\n   */\n  get styleClass() {\n    return this._styleClass;\n  }\n  set styleClass(val) {\n    this._styleClass = val;\n  }\n  /**\n   * Index of the element in tabbing order.\n   * @group Props\n   */\n  get tabindex() {\n    return this._tabindex;\n  }\n  set tabindex(val) {\n    this._tabindex = val;\n  }\n  /**\n   * An array of objects to display.\n   * @group Props\n   */\n  get items() {\n    return this._items;\n  }\n  set items(val) {\n    this._items = val;\n  }\n  /**\n   * The height/width of item according to orientation.\n   * @group Props\n   */\n  get itemSize() {\n    return this._itemSize;\n  }\n  set itemSize(val) {\n    this._itemSize = val;\n  }\n  /**\n   * Height of the scroll viewport.\n   * @group Props\n   */\n  get scrollHeight() {\n    return this._scrollHeight;\n  }\n  set scrollHeight(val) {\n    this._scrollHeight = val;\n  }\n  /**\n   * Width of the scroll viewport.\n   * @group Props\n   */\n  get scrollWidth() {\n    return this._scrollWidth;\n  }\n  set scrollWidth(val) {\n    this._scrollWidth = val;\n  }\n  /**\n   * The orientation of scrollbar.\n   * @group Props\n   */\n  get orientation() {\n    return this._orientation;\n  }\n  set orientation(val) {\n    this._orientation = val;\n  }\n  /**\n   * Used to specify how many items to load in each load method in lazy mode.\n   * @group Props\n   */\n  get step() {\n    return this._step;\n  }\n  set step(val) {\n    this._step = val;\n  }\n  /**\n   * Delay in scroll before new data is loaded.\n   * @group Props\n   */\n  get delay() {\n    return this._delay;\n  }\n  set delay(val) {\n    this._delay = val;\n  }\n  /**\n   * Delay after window's resize finishes.\n   * @group Props\n   */\n  get resizeDelay() {\n    return this._resizeDelay;\n  }\n  set resizeDelay(val) {\n    this._resizeDelay = val;\n  }\n  /**\n   * Used to append each loaded item to top without removing any items from the DOM. Using very large data may cause the browser to crash.\n   * @group Props\n   */\n  get appendOnly() {\n    return this._appendOnly;\n  }\n  set appendOnly(val) {\n    this._appendOnly = val;\n  }\n  /**\n   * Specifies whether the scroller should be displayed inline or not.\n   * @group Props\n   */\n  get inline() {\n    return this._inline;\n  }\n  set inline(val) {\n    this._inline = val;\n  }\n  /**\n   * Defines if data is loaded and interacted with in lazy manner.\n   * @group Props\n   */\n  get lazy() {\n    return this._lazy;\n  }\n  set lazy(val) {\n    this._lazy = val;\n  }\n  /**\n   * If disabled, the scroller feature is eliminated and the content is displayed directly.\n   * @group Props\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(val) {\n    this._disabled = val;\n  }\n  /**\n   * Used to implement a custom loader instead of using the loader feature in the scroller.\n   * @group Props\n   */\n  get loaderDisabled() {\n    return this._loaderDisabled;\n  }\n  set loaderDisabled(val) {\n    this._loaderDisabled = val;\n  }\n  /**\n   * Columns to display.\n   * @group Props\n   */\n  get columns() {\n    return this._columns;\n  }\n  set columns(val) {\n    this._columns = val;\n  }\n  /**\n   * Used to implement a custom spacer instead of using the spacer feature in the scroller.\n   * @group Props\n   */\n  get showSpacer() {\n    return this._showSpacer;\n  }\n  set showSpacer(val) {\n    this._showSpacer = val;\n  }\n  /**\n   * Defines whether to show loader.\n   * @group Props\n   */\n  get showLoader() {\n    return this._showLoader;\n  }\n  set showLoader(val) {\n    this._showLoader = val;\n  }\n  /**\n   * Determines how many additional elements to add to the DOM outside of the view. According to the scrolls made up and down, extra items are added in a certain algorithm in the form of multiples of this number. Default value is half the number of items shown in the view.\n   * @group Props\n   */\n  get numToleratedItems() {\n    return this._numToleratedItems;\n  }\n  set numToleratedItems(val) {\n    this._numToleratedItems = val;\n  }\n  /**\n   * Defines whether the data is loaded.\n   * @group Props\n   */\n  get loading() {\n    return this._loading;\n  }\n  set loading(val) {\n    this._loading = val;\n  }\n  /**\n   * Defines whether to dynamically change the height or width of scrollable container.\n   * @group Props\n   */\n  get autoSize() {\n    return this._autoSize;\n  }\n  set autoSize(val) {\n    this._autoSize = val;\n  }\n  /**\n   * Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity.\n   * @group Props\n   */\n  get trackBy() {\n    return this._trackBy;\n  }\n  set trackBy(val) {\n    this._trackBy = val;\n  }\n  /**\n   * Defines whether to use the scroller feature. The properties of scroller component can be used like an object in it.\n   * @group Props\n   */\n  get options() {\n    return this._options;\n  }\n  set options(val) {\n    this._options = val;\n    if (val && typeof val === 'object') {\n      //@ts-ignore\n      Object.entries(val).forEach(([k, v]) => this[`_${k}`] !== v && (this[`_${k}`] = v));\n    }\n  }\n  /**\n   * Callback to invoke in lazy mode to load new data.\n   * @param {ScrollerLazyLoadEvent} event - Custom lazy load event.\n   * @group Emits\n   */\n  onLazyLoad = new EventEmitter();\n  /**\n   * Callback to invoke when scroll position changes.\n   * @param {ScrollerScrollEvent} event - Custom scroll event.\n   * @group Emits\n   */\n  onScroll = new EventEmitter();\n  /**\n   * Callback to invoke when scroll position and item's range in view changes.\n   * @param {ScrollerScrollEvent} event - Custom scroll index change event.\n   * @group Emits\n   */\n  onScrollIndexChange = new EventEmitter();\n  elementViewChild;\n  contentViewChild;\n  templates;\n  _id;\n  _style;\n  _styleClass;\n  _tabindex = 0;\n  _items;\n  _itemSize = 0;\n  _scrollHeight;\n  _scrollWidth;\n  _orientation = 'vertical';\n  _step = 0;\n  _delay = 0;\n  _resizeDelay = 10;\n  _appendOnly = false;\n  _inline = false;\n  _lazy = false;\n  _disabled = false;\n  _loaderDisabled = false;\n  _columns;\n  _showSpacer = true;\n  _showLoader = false;\n  _numToleratedItems;\n  _loading;\n  _autoSize = false;\n  _trackBy;\n  _options;\n  d_loading = false;\n  d_numToleratedItems;\n  contentEl;\n  contentTemplate;\n  itemTemplate;\n  loaderTemplate;\n  loaderIconTemplate;\n  first = 0;\n  last = 0;\n  page = 0;\n  isRangeChanged = false;\n  numItemsInViewport = 0;\n  lastScrollPos = 0;\n  lazyLoadState = {};\n  loaderArr = [];\n  spacerStyle = {};\n  contentStyle = {};\n  scrollTimeout;\n  resizeTimeout;\n  initialized = false;\n  windowResizeListener;\n  defaultWidth;\n  defaultHeight;\n  defaultContentWidth;\n  defaultContentHeight;\n  get vertical() {\n    return this._orientation === 'vertical';\n  }\n  get horizontal() {\n    return this._orientation === 'horizontal';\n  }\n  get both() {\n    return this._orientation === 'both';\n  }\n  get loadedItems() {\n    if (this._items && !this.d_loading) {\n      if (this.both) return this._items.slice(this._appendOnly ? 0 : this.first.rows, this.last.rows).map(item => this._columns ? item : item.slice(this._appendOnly ? 0 : this.first.cols, this.last.cols));else if (this.horizontal && this._columns) return this._items;else return this._items.slice(this._appendOnly ? 0 : this.first, this.last);\n    }\n    return [];\n  }\n  get loadedRows() {\n    return this.d_loading ? this._loaderDisabled ? this.loaderArr : [] : this.loadedItems;\n  }\n  get loadedColumns() {\n    if (this._columns && (this.both || this.horizontal)) {\n      return this.d_loading && this._loaderDisabled ? this.both ? this.loaderArr[0] : this.loaderArr : this._columns.slice(this.both ? this.first.cols : this.first, this.both ? this.last.cols : this.last);\n    }\n    return this._columns;\n  }\n  get isPageChanged() {\n    return this._step ? this.page !== this.getPageByFirst() : true;\n  }\n  constructor(document, platformId, renderer, cd, zone) {\n    this.document = document;\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.zone = zone;\n  }\n  ngOnInit() {\n    this.setInitialState();\n  }\n  ngOnChanges(simpleChanges) {\n    let isLoadingChanged = false;\n    if (simpleChanges.loading) {\n      const {\n        previousValue,\n        currentValue\n      } = simpleChanges.loading;\n      if (this.lazy && previousValue !== currentValue && currentValue !== this.d_loading) {\n        this.d_loading = currentValue;\n        isLoadingChanged = true;\n      }\n    }\n    if (simpleChanges.orientation) {\n      this.lastScrollPos = this.both ? {\n        top: 0,\n        left: 0\n      } : 0;\n    }\n    if (simpleChanges.numToleratedItems) {\n      const {\n        previousValue,\n        currentValue\n      } = simpleChanges.numToleratedItems;\n      if (previousValue !== currentValue && currentValue !== this.d_numToleratedItems) {\n        this.d_numToleratedItems = currentValue;\n      }\n    }\n    if (simpleChanges.options) {\n      const {\n        previousValue,\n        currentValue\n      } = simpleChanges.options;\n      if (this.lazy && previousValue?.loading !== currentValue?.loading && currentValue?.loading !== this.d_loading) {\n        this.d_loading = currentValue.loading;\n        isLoadingChanged = true;\n      }\n      if (previousValue?.numToleratedItems !== currentValue?.numToleratedItems && currentValue?.numToleratedItems !== this.d_numToleratedItems) {\n        this.d_numToleratedItems = currentValue.numToleratedItems;\n      }\n    }\n    if (this.initialized) {\n      const isChanged = !isLoadingChanged && (simpleChanges.items?.previousValue?.length !== simpleChanges.items?.currentValue?.length || simpleChanges.itemSize || simpleChanges.scrollHeight || simpleChanges.scrollWidth);\n      if (isChanged) {\n        this.init();\n        this.calculateAutoSize();\n      }\n    }\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'content':\n          this.contentTemplate = item.template;\n          break;\n        case 'item':\n          this.itemTemplate = item.template;\n          break;\n        case 'loader':\n          this.loaderTemplate = item.template;\n          break;\n        case 'loadericon':\n          this.loaderIconTemplate = item.template;\n          break;\n        default:\n          this.itemTemplate = item.template;\n          break;\n      }\n    });\n  }\n  ngAfterViewInit() {\n    Promise.resolve().then(() => {\n      this.viewInit();\n    });\n  }\n  ngAfterViewChecked() {\n    if (!this.initialized) {\n      this.viewInit();\n    }\n  }\n  ngOnDestroy() {\n    this.unbindResizeListener();\n    this.contentEl = null;\n    this.initialized = false;\n  }\n  viewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      if (DomHandler.isVisible(this.elementViewChild?.nativeElement)) {\n        this.setInitialState();\n        this.setContentEl(this.contentEl);\n        this.init();\n        this.defaultWidth = DomHandler.getWidth(this.elementViewChild?.nativeElement);\n        this.defaultHeight = DomHandler.getHeight(this.elementViewChild?.nativeElement);\n        this.defaultContentWidth = DomHandler.getWidth(this.contentEl);\n        this.defaultContentHeight = DomHandler.getHeight(this.contentEl);\n        this.initialized = true;\n      }\n    }\n  }\n  init() {\n    if (!this._disabled) {\n      this.setSize();\n      this.calculateOptions();\n      this.setSpacerSize();\n      this.bindResizeListener();\n      this.cd.detectChanges();\n    }\n  }\n  setContentEl(el) {\n    this.contentEl = el || this.contentViewChild?.nativeElement || DomHandler.findSingle(this.elementViewChild?.nativeElement, '.p-scroller-content');\n  }\n  setInitialState() {\n    this.first = this.both ? {\n      rows: 0,\n      cols: 0\n    } : 0;\n    this.last = this.both ? {\n      rows: 0,\n      cols: 0\n    } : 0;\n    this.numItemsInViewport = this.both ? {\n      rows: 0,\n      cols: 0\n    } : 0;\n    this.lastScrollPos = this.both ? {\n      top: 0,\n      left: 0\n    } : 0;\n    this.d_loading = this._loading || false;\n    this.d_numToleratedItems = this._numToleratedItems;\n    this.loaderArr = [];\n    this.spacerStyle = {};\n    this.contentStyle = {};\n  }\n  getElementRef() {\n    return this.elementViewChild;\n  }\n  getPageByFirst() {\n    return Math.floor((this.first + this.d_numToleratedItems * 4) / (this._step || 1));\n  }\n  scrollTo(options) {\n    this.lastScrollPos = this.both ? {\n      top: 0,\n      left: 0\n    } : 0;\n    this.elementViewChild?.nativeElement?.scrollTo(options);\n  }\n  scrollToIndex(index, behavior = 'auto') {\n    const {\n      numToleratedItems\n    } = this.calculateNumItems();\n    const contentPos = this.getContentPosition();\n    const calculateFirst = (_index = 0, _numT) => _index <= _numT ? 0 : _index;\n    const calculateCoord = (_first, _size, _cpos) => _first * _size + _cpos;\n    const scrollTo = (left = 0, top = 0) => this.scrollTo({\n      left,\n      top,\n      behavior\n    });\n    let newFirst = 0;\n    if (this.both) {\n      newFirst = {\n        rows: calculateFirst(index[0], numToleratedItems[0]),\n        cols: calculateFirst(index[1], numToleratedItems[1])\n      };\n      scrollTo(calculateCoord(newFirst.cols, this._itemSize[1], contentPos.left), calculateCoord(newFirst.rows, this._itemSize[0], contentPos.top));\n    } else {\n      newFirst = calculateFirst(index, numToleratedItems);\n      if (this.horizontal) {\n        scrollTo(calculateCoord(newFirst, this._itemSize, contentPos.left), 0);\n      }\n      if (this.vertical) {\n        const currentScrollLeft = this.elementViewChild?.nativeElement.scrollLeft;\n        scrollTo(currentScrollLeft, calculateCoord(newFirst, this._itemSize, contentPos.top));\n      }\n    }\n    this.isRangeChanged = this.first !== newFirst;\n    this.first = newFirst;\n  }\n  scrollInView(index, to, behavior = 'auto') {\n    if (to) {\n      const {\n        first,\n        viewport\n      } = this.getRenderedRange();\n      const scrollTo = (left = 0, top = 0) => this.scrollTo({\n        left,\n        top,\n        behavior\n      });\n      const isToStart = to === 'to-start';\n      const isToEnd = to === 'to-end';\n      if (isToStart) {\n        if (this.both) {\n          if (viewport.first.rows - first.rows > index[0]) {\n            scrollTo(viewport.first.cols * this._itemSize[1], (viewport.first.rows - 1) * this._itemSize[0]);\n          } else if (viewport.first.cols - first.cols > index[1]) {\n            scrollTo((viewport.first.cols - 1) * this._itemSize[1], viewport.first.rows * this._itemSize[0]);\n          }\n        } else {\n          if (viewport.first - first > index) {\n            const pos = (viewport.first - 1) * this._itemSize;\n            this.horizontal ? scrollTo(pos, 0) : scrollTo(0, pos);\n          }\n        }\n      } else if (isToEnd) {\n        if (this.both) {\n          if (viewport.last.rows - first.rows <= index[0] + 1) {\n            scrollTo(viewport.first.cols * this._itemSize[1], (viewport.first.rows + 1) * this._itemSize[0]);\n          } else if (viewport.last.cols - first.cols <= index[1] + 1) {\n            scrollTo((viewport.first.cols + 1) * this._itemSize[1], viewport.first.rows * this._itemSize[0]);\n          }\n        } else {\n          if (viewport.last - first <= index + 1) {\n            const pos = (viewport.first + 1) * this._itemSize;\n            this.horizontal ? scrollTo(pos, 0) : scrollTo(0, pos);\n          }\n        }\n      }\n    } else {\n      this.scrollToIndex(index, behavior);\n    }\n  }\n  getRenderedRange() {\n    const calculateFirstInViewport = (_pos, _size) => Math.floor(_pos / (_size || _pos));\n    let firstInViewport = this.first;\n    let lastInViewport = 0;\n    if (this.elementViewChild?.nativeElement) {\n      const {\n        scrollTop,\n        scrollLeft\n      } = this.elementViewChild.nativeElement;\n      if (this.both) {\n        firstInViewport = {\n          rows: calculateFirstInViewport(scrollTop, this._itemSize[0]),\n          cols: calculateFirstInViewport(scrollLeft, this._itemSize[1])\n        };\n        lastInViewport = {\n          rows: firstInViewport.rows + this.numItemsInViewport.rows,\n          cols: firstInViewport.cols + this.numItemsInViewport.cols\n        };\n      } else {\n        const scrollPos = this.horizontal ? scrollLeft : scrollTop;\n        firstInViewport = calculateFirstInViewport(scrollPos, this._itemSize);\n        lastInViewport = firstInViewport + this.numItemsInViewport;\n      }\n    }\n    return {\n      first: this.first,\n      last: this.last,\n      viewport: {\n        first: firstInViewport,\n        last: lastInViewport\n      }\n    };\n  }\n  calculateNumItems() {\n    const contentPos = this.getContentPosition();\n    const contentWidth = (this.elementViewChild?.nativeElement ? this.elementViewChild.nativeElement.offsetWidth - contentPos.left : 0) || 0;\n    const contentHeight = (this.elementViewChild?.nativeElement ? this.elementViewChild.nativeElement.offsetHeight - contentPos.top : 0) || 0;\n    const calculateNumItemsInViewport = (_contentSize, _itemSize) => Math.ceil(_contentSize / (_itemSize || _contentSize));\n    const calculateNumToleratedItems = _numItems => Math.ceil(_numItems / 2);\n    const numItemsInViewport = this.both ? {\n      rows: calculateNumItemsInViewport(contentHeight, this._itemSize[0]),\n      cols: calculateNumItemsInViewport(contentWidth, this._itemSize[1])\n    } : calculateNumItemsInViewport(this.horizontal ? contentWidth : contentHeight, this._itemSize);\n    const numToleratedItems = this.d_numToleratedItems || (this.both ? [calculateNumToleratedItems(numItemsInViewport.rows), calculateNumToleratedItems(numItemsInViewport.cols)] : calculateNumToleratedItems(numItemsInViewport));\n    return {\n      numItemsInViewport,\n      numToleratedItems\n    };\n  }\n  calculateOptions() {\n    const {\n      numItemsInViewport,\n      numToleratedItems\n    } = this.calculateNumItems();\n    const calculateLast = (_first, _num, _numT, _isCols = false) => this.getLast(_first + _num + (_first < _numT ? 2 : 3) * _numT, _isCols);\n    const first = this.first;\n    const last = this.both ? {\n      rows: calculateLast(this.first.rows, numItemsInViewport.rows, numToleratedItems[0]),\n      cols: calculateLast(this.first.cols, numItemsInViewport.cols, numToleratedItems[1], true)\n    } : calculateLast(this.first, numItemsInViewport, numToleratedItems);\n    this.last = last;\n    this.numItemsInViewport = numItemsInViewport;\n    this.d_numToleratedItems = numToleratedItems;\n    if (this.showLoader) {\n      this.loaderArr = this.both ? Array.from({\n        length: numItemsInViewport.rows\n      }).map(() => Array.from({\n        length: numItemsInViewport.cols\n      })) : Array.from({\n        length: numItemsInViewport\n      });\n    }\n    if (this._lazy) {\n      Promise.resolve().then(() => {\n        this.lazyLoadState = {\n          first: this._step ? this.both ? {\n            rows: 0,\n            cols: first.cols\n          } : 0 : first,\n          last: Math.min(this._step ? this._step : this.last, this.items.length)\n        };\n        this.handleEvents('onLazyLoad', this.lazyLoadState);\n      });\n    }\n  }\n  calculateAutoSize() {\n    if (this._autoSize && !this.d_loading) {\n      Promise.resolve().then(() => {\n        if (this.contentEl) {\n          this.contentEl.style.minHeight = this.contentEl.style.minWidth = 'auto';\n          this.contentEl.style.position = 'relative';\n          this.elementViewChild.nativeElement.style.contain = 'none';\n          const [contentWidth, contentHeight] = [DomHandler.getWidth(this.contentEl), DomHandler.getHeight(this.contentEl)];\n          contentWidth !== this.defaultContentWidth && (this.elementViewChild.nativeElement.style.width = '');\n          contentHeight !== this.defaultContentHeight && (this.elementViewChild.nativeElement.style.height = '');\n          const [width, height] = [DomHandler.getWidth(this.elementViewChild.nativeElement), DomHandler.getHeight(this.elementViewChild.nativeElement)];\n          (this.both || this.horizontal) && (this.elementViewChild.nativeElement.style.width = width < this.defaultWidth ? width + 'px' : this._scrollWidth || this.defaultWidth + 'px');\n          (this.both || this.vertical) && (this.elementViewChild.nativeElement.style.height = height < this.defaultHeight ? height + 'px' : this._scrollHeight || this.defaultHeight + 'px');\n          this.contentEl.style.minHeight = this.contentEl.style.minWidth = '';\n          this.contentEl.style.position = '';\n          this.elementViewChild.nativeElement.style.contain = '';\n        }\n      });\n    }\n  }\n  getLast(last = 0, isCols = false) {\n    return this._items ? Math.min(isCols ? (this._columns || this._items[0]).length : this._items.length, last) : 0;\n  }\n  getContentPosition() {\n    if (this.contentEl) {\n      const style = getComputedStyle(this.contentEl);\n      const left = parseFloat(style.paddingLeft) + Math.max(parseFloat(style.left) || 0, 0);\n      const right = parseFloat(style.paddingRight) + Math.max(parseFloat(style.right) || 0, 0);\n      const top = parseFloat(style.paddingTop) + Math.max(parseFloat(style.top) || 0, 0);\n      const bottom = parseFloat(style.paddingBottom) + Math.max(parseFloat(style.bottom) || 0, 0);\n      return {\n        left,\n        right,\n        top,\n        bottom,\n        x: left + right,\n        y: top + bottom\n      };\n    }\n    return {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      x: 0,\n      y: 0\n    };\n  }\n  setSize() {\n    if (this.elementViewChild?.nativeElement) {\n      const parentElement = this.elementViewChild.nativeElement.parentElement.parentElement;\n      const width = this._scrollWidth || `${this.elementViewChild.nativeElement.offsetWidth || parentElement.offsetWidth}px`;\n      const height = this._scrollHeight || `${this.elementViewChild.nativeElement.offsetHeight || parentElement.offsetHeight}px`;\n      const setProp = (_name, _value) => this.elementViewChild.nativeElement.style[_name] = _value;\n      if (this.both || this.horizontal) {\n        setProp('height', height);\n        setProp('width', width);\n      } else {\n        setProp('height', height);\n      }\n    }\n  }\n  setSpacerSize() {\n    if (this._items) {\n      const contentPos = this.getContentPosition();\n      const setProp = (_name, _value, _size, _cpos = 0) => this.spacerStyle = {\n        ...this.spacerStyle,\n        ...{\n          [`${_name}`]: (_value || []).length * _size + _cpos + 'px'\n        }\n      };\n      if (this.both) {\n        setProp('height', this._items, this._itemSize[0], contentPos.y);\n        setProp('width', this._columns || this._items[1], this._itemSize[1], contentPos.x);\n      } else {\n        this.horizontal ? setProp('width', this._columns || this._items, this._itemSize, contentPos.x) : setProp('height', this._items, this._itemSize, contentPos.y);\n      }\n    }\n  }\n  setContentPosition(pos) {\n    if (this.contentEl && !this._appendOnly) {\n      const first = pos ? pos.first : this.first;\n      const calculateTranslateVal = (_first, _size) => _first * _size;\n      const setTransform = (_x = 0, _y = 0) => this.contentStyle = {\n        ...this.contentStyle,\n        ...{\n          transform: `translate3d(${_x}px, ${_y}px, 0)`\n        }\n      };\n      if (this.both) {\n        setTransform(calculateTranslateVal(first.cols, this._itemSize[1]), calculateTranslateVal(first.rows, this._itemSize[0]));\n      } else {\n        const translateVal = calculateTranslateVal(first, this._itemSize);\n        this.horizontal ? setTransform(translateVal, 0) : setTransform(0, translateVal);\n      }\n    }\n  }\n  onScrollPositionChange(event) {\n    const target = event.target;\n    const contentPos = this.getContentPosition();\n    const calculateScrollPos = (_pos, _cpos) => _pos ? _pos > _cpos ? _pos - _cpos : _pos : 0;\n    const calculateCurrentIndex = (_pos, _size) => Math.floor(_pos / (_size || _pos));\n    const calculateTriggerIndex = (_currentIndex, _first, _last, _num, _numT, _isScrollDownOrRight) => {\n      return _currentIndex <= _numT ? _numT : _isScrollDownOrRight ? _last - _num - _numT : _first + _numT - 1;\n    };\n    const calculateFirst = (_currentIndex, _triggerIndex, _first, _last, _num, _numT, _isScrollDownOrRight) => {\n      if (_currentIndex <= _numT) return 0;else return Math.max(0, _isScrollDownOrRight ? _currentIndex < _triggerIndex ? _first : _currentIndex - _numT : _currentIndex > _triggerIndex ? _first : _currentIndex - 2 * _numT);\n    };\n    const calculateLast = (_currentIndex, _first, _last, _num, _numT, _isCols = false) => {\n      let lastValue = _first + _num + 2 * _numT;\n      if (_currentIndex >= _numT) {\n        lastValue += _numT + 1;\n      }\n      return this.getLast(lastValue, _isCols);\n    };\n    const scrollTop = calculateScrollPos(target.scrollTop, contentPos.top);\n    const scrollLeft = calculateScrollPos(target.scrollLeft, contentPos.left);\n    let newFirst = this.both ? {\n      rows: 0,\n      cols: 0\n    } : 0;\n    let newLast = this.last;\n    let isRangeChanged = false;\n    let newScrollPos = this.lastScrollPos;\n    if (this.both) {\n      const isScrollDown = this.lastScrollPos.top <= scrollTop;\n      const isScrollRight = this.lastScrollPos.left <= scrollLeft;\n      if (!this._appendOnly || this._appendOnly && (isScrollDown || isScrollRight)) {\n        const currentIndex = {\n          rows: calculateCurrentIndex(scrollTop, this._itemSize[0]),\n          cols: calculateCurrentIndex(scrollLeft, this._itemSize[1])\n        };\n        const triggerIndex = {\n          rows: calculateTriggerIndex(currentIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n          cols: calculateTriggerIndex(currentIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n        };\n        newFirst = {\n          rows: calculateFirst(currentIndex.rows, triggerIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n          cols: calculateFirst(currentIndex.cols, triggerIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n        };\n        newLast = {\n          rows: calculateLast(currentIndex.rows, newFirst.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0]),\n          cols: calculateLast(currentIndex.cols, newFirst.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], true)\n        };\n        isRangeChanged = newFirst.rows !== this.first.rows || newLast.rows !== this.last.rows || newFirst.cols !== this.first.cols || newLast.cols !== this.last.cols || this.isRangeChanged;\n        newScrollPos = {\n          top: scrollTop,\n          left: scrollLeft\n        };\n      }\n    } else {\n      const scrollPos = this.horizontal ? scrollLeft : scrollTop;\n      const isScrollDownOrRight = this.lastScrollPos <= scrollPos;\n      if (!this._appendOnly || this._appendOnly && isScrollDownOrRight) {\n        const currentIndex = calculateCurrentIndex(scrollPos, this._itemSize);\n        const triggerIndex = calculateTriggerIndex(currentIndex, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n        newFirst = calculateFirst(currentIndex, triggerIndex, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n        newLast = calculateLast(currentIndex, newFirst, this.last, this.numItemsInViewport, this.d_numToleratedItems);\n        isRangeChanged = newFirst !== this.first || newLast !== this.last || this.isRangeChanged;\n        newScrollPos = scrollPos;\n      }\n    }\n    return {\n      first: newFirst,\n      last: newLast,\n      isRangeChanged,\n      scrollPos: newScrollPos\n    };\n  }\n  onScrollChange(event) {\n    const {\n      first,\n      last,\n      isRangeChanged,\n      scrollPos\n    } = this.onScrollPositionChange(event);\n    if (isRangeChanged) {\n      const newState = {\n        first,\n        last\n      };\n      this.setContentPosition(newState);\n      this.first = first;\n      this.last = last;\n      this.lastScrollPos = scrollPos;\n      this.handleEvents('onScrollIndexChange', newState);\n      if (this._lazy && this.isPageChanged) {\n        const lazyLoadState = {\n          first: this._step ? Math.min(this.getPageByFirst() * this._step, this.items.length - this._step) : first,\n          last: Math.min(this._step ? (this.getPageByFirst() + 1) * this._step : last, this.items.length)\n        };\n        const isLazyStateChanged = this.lazyLoadState.first !== lazyLoadState.first || this.lazyLoadState.last !== lazyLoadState.last;\n        isLazyStateChanged && this.handleEvents('onLazyLoad', lazyLoadState);\n        this.lazyLoadState = lazyLoadState;\n      }\n    }\n  }\n  onContainerScroll(event) {\n    this.handleEvents('onScroll', {\n      originalEvent: event\n    });\n    if (this._delay && this.isPageChanged) {\n      if (this.scrollTimeout) {\n        clearTimeout(this.scrollTimeout);\n      }\n      if (!this.d_loading && this.showLoader) {\n        const {\n          isRangeChanged\n        } = this.onScrollPositionChange(event);\n        const changed = isRangeChanged || (this._step ? this.isPageChanged : false);\n        if (changed) {\n          this.d_loading = true;\n          this.cd.detectChanges();\n        }\n      }\n      this.scrollTimeout = setTimeout(() => {\n        this.onScrollChange(event);\n        if (this.d_loading && this.showLoader && (!this._lazy || this._loading === undefined)) {\n          this.d_loading = false;\n          this.page = this.getPageByFirst();\n          this.cd.detectChanges();\n        }\n      }, this._delay);\n    } else {\n      !this.d_loading && this.onScrollChange(event);\n    }\n  }\n  bindResizeListener() {\n    if (isPlatformBrowser(this.platformId)) {\n      if (!this.windowResizeListener) {\n        this.zone.runOutsideAngular(() => {\n          const window = this.document.defaultView;\n          const event = DomHandler.isTouchDevice() ? 'orientationchange' : 'resize';\n          this.windowResizeListener = this.renderer.listen(window, event, this.onWindowResize.bind(this));\n        });\n      }\n    }\n  }\n  unbindResizeListener() {\n    if (this.windowResizeListener) {\n      this.windowResizeListener();\n      this.windowResizeListener = null;\n    }\n  }\n  onWindowResize() {\n    if (this.resizeTimeout) {\n      clearTimeout(this.resizeTimeout);\n    }\n    this.resizeTimeout = setTimeout(() => {\n      if (DomHandler.isVisible(this.elementViewChild?.nativeElement)) {\n        const [width, height] = [DomHandler.getWidth(this.elementViewChild?.nativeElement), DomHandler.getHeight(this.elementViewChild?.nativeElement)];\n        const [isDiffWidth, isDiffHeight] = [width !== this.defaultWidth, height !== this.defaultHeight];\n        const reinit = this.both ? isDiffWidth || isDiffHeight : this.horizontal ? isDiffWidth : this.vertical ? isDiffHeight : false;\n        reinit && this.zone.run(() => {\n          this.d_numToleratedItems = this._numToleratedItems;\n          this.defaultWidth = width;\n          this.defaultHeight = height;\n          this.defaultContentWidth = DomHandler.getWidth(this.contentEl);\n          this.defaultContentHeight = DomHandler.getHeight(this.contentEl);\n          this.init();\n        });\n      }\n    }, this._resizeDelay);\n  }\n  handleEvents(name, params) {\n    //@ts-ignore\n    return this.options && this.options[name] ? this.options[name](params) : this[name].emit(params);\n  }\n  getContentOptions() {\n    return {\n      contentStyleClass: `p-scroller-content ${this.d_loading ? 'p-scroller-loading' : ''}`,\n      items: this.loadedItems,\n      getItemOptions: index => this.getOptions(index),\n      loading: this.d_loading,\n      getLoaderOptions: (index, options) => this.getLoaderOptions(index, options),\n      itemSize: this._itemSize,\n      rows: this.loadedRows,\n      columns: this.loadedColumns,\n      spacerStyle: this.spacerStyle,\n      contentStyle: this.contentStyle,\n      vertical: this.vertical,\n      horizontal: this.horizontal,\n      both: this.both\n    };\n  }\n  getOptions(renderedIndex) {\n    const count = (this._items || []).length;\n    const index = this.both ? this.first.rows + renderedIndex : this.first + renderedIndex;\n    return {\n      index,\n      count,\n      first: index === 0,\n      last: index === count - 1,\n      even: index % 2 === 0,\n      odd: index % 2 !== 0\n    };\n  }\n  getLoaderOptions(index, extOptions) {\n    const count = this.loaderArr.length;\n    return {\n      index,\n      count,\n      first: index === 0,\n      last: index === count - 1,\n      even: index % 2 === 0,\n      odd: index % 2 !== 0,\n      ...extOptions\n    };\n  }\n  static ɵfac = function Scroller_Factory(t) {\n    return new (t || Scroller)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Scroller,\n    selectors: [[\"p-scroller\"]],\n    contentQueries: function Scroller_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function Scroller_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elementViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentViewChild = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-scroller-viewport\", \"p-element\"],\n    inputs: {\n      id: \"id\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      tabindex: \"tabindex\",\n      items: \"items\",\n      itemSize: \"itemSize\",\n      scrollHeight: \"scrollHeight\",\n      scrollWidth: \"scrollWidth\",\n      orientation: \"orientation\",\n      step: \"step\",\n      delay: \"delay\",\n      resizeDelay: \"resizeDelay\",\n      appendOnly: \"appendOnly\",\n      inline: \"inline\",\n      lazy: \"lazy\",\n      disabled: \"disabled\",\n      loaderDisabled: \"loaderDisabled\",\n      columns: \"columns\",\n      showSpacer: \"showSpacer\",\n      showLoader: \"showLoader\",\n      numToleratedItems: \"numToleratedItems\",\n      loading: \"loading\",\n      autoSize: \"autoSize\",\n      trackBy: \"trackBy\",\n      options: \"options\"\n    },\n    outputs: {\n      onLazyLoad: \"onLazyLoad\",\n      onScroll: \"onScroll\",\n      onScrollIndexChange: \"onScrollIndexChange\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c10,\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"disabledContainer\", \"\"], [3, \"ngStyle\", \"ngClass\", \"scroll\"], [\"element\", \"\"], [\"buildInContent\", \"\"], [\"class\", \"p-scroller-spacer\", 3, \"ngStyle\", 4, \"ngIf\"], [\"class\", \"p-scroller-loader\", 3, \"ngClass\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"p-scroller-content\", 3, \"ngClass\", \"ngStyle\"], [\"content\", \"\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"p-scroller-spacer\", 3, \"ngStyle\"], [1, \"p-scroller-loader\", 3, \"ngClass\"], [\"buildInLoader\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"buildInLoaderIcon\", \"\"], [3, \"styleClass\"], [4, \"ngIf\"]],\n    template: function Scroller_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, Scroller_ng_container_0_Template, 8, 16, \"ng-container\", 0);\n        i0.ɵɵtemplate(1, Scroller_ng_template_1_Template, 2, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx._disabled)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: function () {\n      return [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, SpinnerIcon];\n    },\n    styles: [\"@layer primeng{p-scroller{flex:1;outline:0 none}.p-scroller{position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;outline:0 none}.p-scroller-content{position:absolute;top:0;left:0;min-height:100%;min-width:100%;will-change:transform}.p-scroller-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0;pointer-events:none}.p-scroller-loader{position:sticky;top:0;left:0;width:100%;height:100%}.p-scroller-loader.p-component-overlay{display:flex;align-items:center;justify-content:center}.p-scroller-loading-icon{scale:2}.p-scroller-inline .p-scroller-content{position:static}}\\n\"],\n    encapsulation: 2\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Scroller, [{\n    type: Component,\n    args: [{\n      selector: 'p-scroller',\n      template: `\n        <ng-container *ngIf=\"!_disabled; else disabledContainer\">\n            <div\n                #element\n                [attr.id]=\"_id\"\n                [attr.tabindex]=\"tabindex\"\n                [ngStyle]=\"_style\"\n                [class]=\"_styleClass\"\n                [ngClass]=\"{ 'p-scroller': true, 'p-scroller-inline': inline, 'p-both-scroll': both, 'p-horizontal-scroll': horizontal }\"\n                (scroll)=\"onContainerScroll($event)\"\n                [attr.data-pc-name]=\"'scroller'\"\n                [attr.data-pc-section]=\"'root'\"\n            >\n                <ng-container *ngIf=\"contentTemplate; else buildInContent\">\n                    <ng-container *ngTemplateOutlet=\"contentTemplate; context: { $implicit: loadedItems, options: getContentOptions() }\"></ng-container>\n                </ng-container>\n                <ng-template #buildInContent>\n                    <div #content class=\"p-scroller-content\" [ngClass]=\"{ 'p-scroller-loading': d_loading }\" [ngStyle]=\"contentStyle\" [attr.data-pc-section]=\"'content'\">\n                        <ng-container *ngFor=\"let item of loadedItems; let index = index; trackBy: _trackBy || index\">\n                            <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item, options: getOptions(index) }\"></ng-container>\n                        </ng-container>\n                    </div>\n                </ng-template>\n                <div *ngIf=\"_showSpacer\" class=\"p-scroller-spacer\" [ngStyle]=\"spacerStyle\" [attr.data-pc-section]=\"'spacer'\"></div>\n                <div *ngIf=\"!loaderDisabled && _showLoader && d_loading\" class=\"p-scroller-loader\" [ngClass]=\"{ 'p-component-overlay': !loaderTemplate }\" [attr.data-pc-section]=\"'loader'\">\n                    <ng-container *ngIf=\"loaderTemplate; else buildInLoader\">\n                        <ng-container *ngFor=\"let item of loaderArr; let index = index\">\n                            <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: getLoaderOptions(index, both && { numCols: _numItemsInViewport.cols }) }\"></ng-container>\n                        </ng-container>\n                    </ng-container>\n                    <ng-template #buildInLoader>\n                        <ng-container *ngIf=\"loaderIconTemplate; else buildInLoaderIcon\">\n                            <ng-container *ngTemplateOutlet=\"loaderIconTemplate; context: { options: { styleClass: 'p-scroller-loading-icon' } }\"></ng-container>\n                        </ng-container>\n                        <ng-template #buildInLoaderIcon>\n                            <SpinnerIcon [styleClass]=\"'p-scroller-loading-icon pi-spin'\" [attr.data-pc-section]=\"'loadingIcon'\" />\n                        </ng-template>\n                    </ng-template>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #disabledContainer>\n            <ng-content></ng-content>\n            <ng-container *ngIf=\"contentTemplate\">\n                <ng-container *ngTemplateOutlet=\"contentTemplate; context: { $implicit: items, options: { rows: _items, columns: loadedColumns } }\"></ng-container>\n            </ng-container>\n        </ng-template>\n    `,\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-scroller-viewport p-element'\n      },\n      styles: [\"@layer primeng{p-scroller{flex:1;outline:0 none}.p-scroller{position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;outline:0 none}.p-scroller-content{position:absolute;top:0;left:0;min-height:100%;min-width:100%;will-change:transform}.p-scroller-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0;pointer-events:none}.p-scroller-loader{position:sticky;top:0;left:0;width:100%;height:100%}.p-scroller-loader.p-component-overlay{display:flex;align-items:center;justify-content:center}.p-scroller-loading-icon{scale:2}.p-scroller-inline .p-scroller-content{position:static}}\\n\"]\n    }]\n  }], () => [{\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.NgZone\n  }], {\n    id: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    items: [{\n      type: Input\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    scrollHeight: [{\n      type: Input\n    }],\n    scrollWidth: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }],\n    resizeDelay: [{\n      type: Input\n    }],\n    appendOnly: [{\n      type: Input\n    }],\n    inline: [{\n      type: Input\n    }],\n    lazy: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    loaderDisabled: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    showSpacer: [{\n      type: Input\n    }],\n    showLoader: [{\n      type: Input\n    }],\n    numToleratedItems: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    autoSize: [{\n      type: Input\n    }],\n    trackBy: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    onLazyLoad: [{\n      type: Output\n    }],\n    onScroll: [{\n      type: Output\n    }],\n    onScrollIndexChange: [{\n      type: Output\n    }],\n    elementViewChild: [{\n      type: ViewChild,\n      args: ['element']\n    }],\n    contentViewChild: [{\n      type: ViewChild,\n      args: ['content']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass ScrollerModule {\n  static ɵfac = function ScrollerModule_Factory(t) {\n    return new (t || ScrollerModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ScrollerModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, SharedModule, SpinnerIcon, SharedModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, SharedModule, SpinnerIcon],\n      exports: [Scroller, SharedModule],\n      declarations: [Scroller]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Scroller, ScrollerModule };","map":{"version":3,"names":["i1","isPlatformBrowser","DOCUMENT","CommonModule","i0","EventEmitter","PLATFORM_ID","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","Output","ViewChild","ContentChildren","NgModule","PrimeTemplate","SharedModule","DomHandler","SpinnerIcon","Scroller","document","platformId","renderer","cd","zone","id","_id","val","style","_style","styleClass","_styleClass","tabindex","_tabindex","items","_items","itemSize","_itemSize","scrollHeight","_scrollHeight","scrollWidth","_scrollWidth","orientation","_orientation","step","_step","delay","_delay","resizeDelay","_resizeDelay","appendOnly","_appendOnly","inline","_inline","lazy","_lazy","disabled","_disabled","loaderDisabled","_loaderDisabled","columns","_columns","showSpacer","_showSpacer","showLoader","_showLoader","numToleratedItems","_numToleratedItems","loading","_loading","autoSize","_autoSize","trackBy","_trackBy","options","_options","Object","entries","forEach","k","v","onLazyLoad","onScroll","onScrollIndexChange","elementViewChild","contentViewChild","templates","d_loading","d_numToleratedItems","contentEl","contentTemplate","itemTemplate","loaderTemplate","loaderIconTemplate","first","last","page","isRangeChanged","numItemsInViewport","lastScrollPos","lazyLoadState","loaderArr","spacerStyle","contentStyle","scrollTimeout","resizeTimeout","initialized","windowResizeListener","defaultWidth","defaultHeight","defaultContentWidth","defaultContentHeight","vertical","horizontal","both","loadedItems","slice","rows","map","item","cols","loadedRows","loadedColumns","isPageChanged","getPageByFirst","constructor","ngOnInit","setInitialState","ngOnChanges","simpleChanges","isLoadingChanged","previousValue","currentValue","top","left","isChanged","length","init","calculateAutoSize","ngAfterContentInit","getType","template","ngAfterViewInit","Promise","resolve","then","viewInit","ngAfterViewChecked","ngOnDestroy","unbindResizeListener","isVisible","nativeElement","setContentEl","getWidth","getHeight","setSize","calculateOptions","setSpacerSize","bindResizeListener","detectChanges","el","findSingle","getElementRef","Math","floor","scrollTo","scrollToIndex","index","behavior","calculateNumItems","contentPos","getContentPosition","calculateFirst","_index","_numT","calculateCoord","_first","_size","_cpos","newFirst","currentScrollLeft","scrollLeft","scrollInView","to","viewport","getRenderedRange","isToStart","isToEnd","pos","calculateFirstInViewport","_pos","firstInViewport","lastInViewport","scrollTop","scrollPos","contentWidth","offsetWidth","contentHeight","offsetHeight","calculateNumItemsInViewport","_contentSize","ceil","calculateNumToleratedItems","_numItems","calculateLast","_num","_isCols","getLast","Array","from","min","handleEvents","minHeight","minWidth","position","contain","width","height","isCols","getComputedStyle","parseFloat","paddingLeft","max","right","paddingRight","paddingTop","bottom","paddingBottom","x","y","parentElement","setProp","_name","_value","setContentPosition","calculateTranslateVal","setTransform","_x","_y","transform","translateVal","onScrollPositionChange","event","target","calculateScrollPos","calculateCurrentIndex","calculateTriggerIndex","_currentIndex","_last","_isScrollDownOrRight","_triggerIndex","lastValue","newLast","newScrollPos","isScrollDown","isScrollRight","currentIndex","triggerIndex","isScrollDownOrRight","onScrollChange","newState","isLazyStateChanged","onContainerScroll","originalEvent","clearTimeout","changed","setTimeout","undefined","runOutsideAngular","window","defaultView","isTouchDevice","listen","onWindowResize","bind","isDiffWidth","isDiffHeight","reinit","run","name","params","emit","getContentOptions","contentStyleClass","getItemOptions","getOptions","getLoaderOptions","renderedIndex","count","even","odd","extOptions","ɵfac","Renderer2","ChangeDetectorRef","NgZone","ɵcmp","NgClass","NgForOf","NgIf","NgTemplateOutlet","NgStyle","type","args","selector","changeDetection","Default","encapsulation","None","host","class","styles","Document","decorators","ScrollerModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["C:/Users/Administrator/Desktop/R&D/angular/NgRx-simple/node_modules/primeng/fesm2022/primeng-scroller.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { SpinnerIcon } from 'primeng/icons/spinner';\n\n/**\n * Scroller is a performance-approach to handle huge data efficiently.\n * @group Components\n */\nclass Scroller {\n    document;\n    platformId;\n    renderer;\n    cd;\n    zone;\n    /**\n     * Unique identifier of the element.\n     * @group Props\n     */\n    get id() {\n        return this._id;\n    }\n    set id(val) {\n        this._id = val;\n    }\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    get style() {\n        return this._style;\n    }\n    set style(val) {\n        this._style = val;\n    }\n    /**\n     * Style class of the element.\n     * @group Props\n     */\n    get styleClass() {\n        return this._styleClass;\n    }\n    set styleClass(val) {\n        this._styleClass = val;\n    }\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    get tabindex() {\n        return this._tabindex;\n    }\n    set tabindex(val) {\n        this._tabindex = val;\n    }\n    /**\n     * An array of objects to display.\n     * @group Props\n     */\n    get items() {\n        return this._items;\n    }\n    set items(val) {\n        this._items = val;\n    }\n    /**\n     * The height/width of item according to orientation.\n     * @group Props\n     */\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(val) {\n        this._itemSize = val;\n    }\n    /**\n     * Height of the scroll viewport.\n     * @group Props\n     */\n    get scrollHeight() {\n        return this._scrollHeight;\n    }\n    set scrollHeight(val) {\n        this._scrollHeight = val;\n    }\n    /**\n     * Width of the scroll viewport.\n     * @group Props\n     */\n    get scrollWidth() {\n        return this._scrollWidth;\n    }\n    set scrollWidth(val) {\n        this._scrollWidth = val;\n    }\n    /**\n     * The orientation of scrollbar.\n     * @group Props\n     */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(val) {\n        this._orientation = val;\n    }\n    /**\n     * Used to specify how many items to load in each load method in lazy mode.\n     * @group Props\n     */\n    get step() {\n        return this._step;\n    }\n    set step(val) {\n        this._step = val;\n    }\n    /**\n     * Delay in scroll before new data is loaded.\n     * @group Props\n     */\n    get delay() {\n        return this._delay;\n    }\n    set delay(val) {\n        this._delay = val;\n    }\n    /**\n     * Delay after window's resize finishes.\n     * @group Props\n     */\n    get resizeDelay() {\n        return this._resizeDelay;\n    }\n    set resizeDelay(val) {\n        this._resizeDelay = val;\n    }\n    /**\n     * Used to append each loaded item to top without removing any items from the DOM. Using very large data may cause the browser to crash.\n     * @group Props\n     */\n    get appendOnly() {\n        return this._appendOnly;\n    }\n    set appendOnly(val) {\n        this._appendOnly = val;\n    }\n    /**\n     * Specifies whether the scroller should be displayed inline or not.\n     * @group Props\n     */\n    get inline() {\n        return this._inline;\n    }\n    set inline(val) {\n        this._inline = val;\n    }\n    /**\n     * Defines if data is loaded and interacted with in lazy manner.\n     * @group Props\n     */\n    get lazy() {\n        return this._lazy;\n    }\n    set lazy(val) {\n        this._lazy = val;\n    }\n    /**\n     * If disabled, the scroller feature is eliminated and the content is displayed directly.\n     * @group Props\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(val) {\n        this._disabled = val;\n    }\n    /**\n     * Used to implement a custom loader instead of using the loader feature in the scroller.\n     * @group Props\n     */\n    get loaderDisabled() {\n        return this._loaderDisabled;\n    }\n    set loaderDisabled(val) {\n        this._loaderDisabled = val;\n    }\n    /**\n     * Columns to display.\n     * @group Props\n     */\n    get columns() {\n        return this._columns;\n    }\n    set columns(val) {\n        this._columns = val;\n    }\n    /**\n     * Used to implement a custom spacer instead of using the spacer feature in the scroller.\n     * @group Props\n     */\n    get showSpacer() {\n        return this._showSpacer;\n    }\n    set showSpacer(val) {\n        this._showSpacer = val;\n    }\n    /**\n     * Defines whether to show loader.\n     * @group Props\n     */\n    get showLoader() {\n        return this._showLoader;\n    }\n    set showLoader(val) {\n        this._showLoader = val;\n    }\n    /**\n     * Determines how many additional elements to add to the DOM outside of the view. According to the scrolls made up and down, extra items are added in a certain algorithm in the form of multiples of this number. Default value is half the number of items shown in the view.\n     * @group Props\n     */\n    get numToleratedItems() {\n        return this._numToleratedItems;\n    }\n    set numToleratedItems(val) {\n        this._numToleratedItems = val;\n    }\n    /**\n     * Defines whether the data is loaded.\n     * @group Props\n     */\n    get loading() {\n        return this._loading;\n    }\n    set loading(val) {\n        this._loading = val;\n    }\n    /**\n     * Defines whether to dynamically change the height or width of scrollable container.\n     * @group Props\n     */\n    get autoSize() {\n        return this._autoSize;\n    }\n    set autoSize(val) {\n        this._autoSize = val;\n    }\n    /**\n     * Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity.\n     * @group Props\n     */\n    get trackBy() {\n        return this._trackBy;\n    }\n    set trackBy(val) {\n        this._trackBy = val;\n    }\n    /**\n     * Defines whether to use the scroller feature. The properties of scroller component can be used like an object in it.\n     * @group Props\n     */\n    get options() {\n        return this._options;\n    }\n    set options(val) {\n        this._options = val;\n        if (val && typeof val === 'object') {\n            //@ts-ignore\n            Object.entries(val).forEach(([k, v]) => this[`_${k}`] !== v && (this[`_${k}`] = v));\n        }\n    }\n    /**\n     * Callback to invoke in lazy mode to load new data.\n     * @param {ScrollerLazyLoadEvent} event - Custom lazy load event.\n     * @group Emits\n     */\n    onLazyLoad = new EventEmitter();\n    /**\n     * Callback to invoke when scroll position changes.\n     * @param {ScrollerScrollEvent} event - Custom scroll event.\n     * @group Emits\n     */\n    onScroll = new EventEmitter();\n    /**\n     * Callback to invoke when scroll position and item's range in view changes.\n     * @param {ScrollerScrollEvent} event - Custom scroll index change event.\n     * @group Emits\n     */\n    onScrollIndexChange = new EventEmitter();\n    elementViewChild;\n    contentViewChild;\n    templates;\n    _id;\n    _style;\n    _styleClass;\n    _tabindex = 0;\n    _items;\n    _itemSize = 0;\n    _scrollHeight;\n    _scrollWidth;\n    _orientation = 'vertical';\n    _step = 0;\n    _delay = 0;\n    _resizeDelay = 10;\n    _appendOnly = false;\n    _inline = false;\n    _lazy = false;\n    _disabled = false;\n    _loaderDisabled = false;\n    _columns;\n    _showSpacer = true;\n    _showLoader = false;\n    _numToleratedItems;\n    _loading;\n    _autoSize = false;\n    _trackBy;\n    _options;\n    d_loading = false;\n    d_numToleratedItems;\n    contentEl;\n    contentTemplate;\n    itemTemplate;\n    loaderTemplate;\n    loaderIconTemplate;\n    first = 0;\n    last = 0;\n    page = 0;\n    isRangeChanged = false;\n    numItemsInViewport = 0;\n    lastScrollPos = 0;\n    lazyLoadState = {};\n    loaderArr = [];\n    spacerStyle = {};\n    contentStyle = {};\n    scrollTimeout;\n    resizeTimeout;\n    initialized = false;\n    windowResizeListener;\n    defaultWidth;\n    defaultHeight;\n    defaultContentWidth;\n    defaultContentHeight;\n    get vertical() {\n        return this._orientation === 'vertical';\n    }\n    get horizontal() {\n        return this._orientation === 'horizontal';\n    }\n    get both() {\n        return this._orientation === 'both';\n    }\n    get loadedItems() {\n        if (this._items && !this.d_loading) {\n            if (this.both)\n                return this._items.slice(this._appendOnly ? 0 : this.first.rows, this.last.rows).map((item) => (this._columns ? item : item.slice(this._appendOnly ? 0 : this.first.cols, this.last.cols)));\n            else if (this.horizontal && this._columns)\n                return this._items;\n            else\n                return this._items.slice(this._appendOnly ? 0 : this.first, this.last);\n        }\n        return [];\n    }\n    get loadedRows() {\n        return this.d_loading ? (this._loaderDisabled ? this.loaderArr : []) : this.loadedItems;\n    }\n    get loadedColumns() {\n        if (this._columns && (this.both || this.horizontal)) {\n            return this.d_loading && this._loaderDisabled ? (this.both ? this.loaderArr[0] : this.loaderArr) : this._columns.slice(this.both ? this.first.cols : this.first, this.both ? this.last.cols : this.last);\n        }\n        return this._columns;\n    }\n    get isPageChanged() {\n        return this._step ? this.page !== this.getPageByFirst() : true;\n    }\n    constructor(document, platformId, renderer, cd, zone) {\n        this.document = document;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.zone = zone;\n    }\n    ngOnInit() {\n        this.setInitialState();\n    }\n    ngOnChanges(simpleChanges) {\n        let isLoadingChanged = false;\n        if (simpleChanges.loading) {\n            const { previousValue, currentValue } = simpleChanges.loading;\n            if (this.lazy && previousValue !== currentValue && currentValue !== this.d_loading) {\n                this.d_loading = currentValue;\n                isLoadingChanged = true;\n            }\n        }\n        if (simpleChanges.orientation) {\n            this.lastScrollPos = this.both ? { top: 0, left: 0 } : 0;\n        }\n        if (simpleChanges.numToleratedItems) {\n            const { previousValue, currentValue } = simpleChanges.numToleratedItems;\n            if (previousValue !== currentValue && currentValue !== this.d_numToleratedItems) {\n                this.d_numToleratedItems = currentValue;\n            }\n        }\n        if (simpleChanges.options) {\n            const { previousValue, currentValue } = simpleChanges.options;\n            if (this.lazy && previousValue?.loading !== currentValue?.loading && currentValue?.loading !== this.d_loading) {\n                this.d_loading = currentValue.loading;\n                isLoadingChanged = true;\n            }\n            if (previousValue?.numToleratedItems !== currentValue?.numToleratedItems && currentValue?.numToleratedItems !== this.d_numToleratedItems) {\n                this.d_numToleratedItems = currentValue.numToleratedItems;\n            }\n        }\n        if (this.initialized) {\n            const isChanged = !isLoadingChanged && (simpleChanges.items?.previousValue?.length !== simpleChanges.items?.currentValue?.length || simpleChanges.itemSize || simpleChanges.scrollHeight || simpleChanges.scrollWidth);\n            if (isChanged) {\n                this.init();\n                this.calculateAutoSize();\n            }\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                    break;\n                case 'item':\n                    this.itemTemplate = item.template;\n                    break;\n                case 'loader':\n                    this.loaderTemplate = item.template;\n                    break;\n                case 'loadericon':\n                    this.loaderIconTemplate = item.template;\n                    break;\n                default:\n                    this.itemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    ngAfterViewInit() {\n        Promise.resolve().then(() => {\n            this.viewInit();\n        });\n    }\n    ngAfterViewChecked() {\n        if (!this.initialized) {\n            this.viewInit();\n        }\n    }\n    ngOnDestroy() {\n        this.unbindResizeListener();\n        this.contentEl = null;\n        this.initialized = false;\n    }\n    viewInit() {\n        if (isPlatformBrowser(this.platformId)) {\n            if (DomHandler.isVisible(this.elementViewChild?.nativeElement)) {\n                this.setInitialState();\n                this.setContentEl(this.contentEl);\n                this.init();\n                this.defaultWidth = DomHandler.getWidth(this.elementViewChild?.nativeElement);\n                this.defaultHeight = DomHandler.getHeight(this.elementViewChild?.nativeElement);\n                this.defaultContentWidth = DomHandler.getWidth(this.contentEl);\n                this.defaultContentHeight = DomHandler.getHeight(this.contentEl);\n                this.initialized = true;\n            }\n        }\n    }\n    init() {\n        if (!this._disabled) {\n            this.setSize();\n            this.calculateOptions();\n            this.setSpacerSize();\n            this.bindResizeListener();\n            this.cd.detectChanges();\n        }\n    }\n    setContentEl(el) {\n        this.contentEl = el || this.contentViewChild?.nativeElement || DomHandler.findSingle(this.elementViewChild?.nativeElement, '.p-scroller-content');\n    }\n    setInitialState() {\n        this.first = this.both ? { rows: 0, cols: 0 } : 0;\n        this.last = this.both ? { rows: 0, cols: 0 } : 0;\n        this.numItemsInViewport = this.both ? { rows: 0, cols: 0 } : 0;\n        this.lastScrollPos = this.both ? { top: 0, left: 0 } : 0;\n        this.d_loading = this._loading || false;\n        this.d_numToleratedItems = this._numToleratedItems;\n        this.loaderArr = [];\n        this.spacerStyle = {};\n        this.contentStyle = {};\n    }\n    getElementRef() {\n        return this.elementViewChild;\n    }\n    getPageByFirst() {\n        return Math.floor((this.first + this.d_numToleratedItems * 4) / (this._step || 1));\n    }\n    scrollTo(options) {\n        this.lastScrollPos = this.both ? { top: 0, left: 0 } : 0;\n        this.elementViewChild?.nativeElement?.scrollTo(options);\n    }\n    scrollToIndex(index, behavior = 'auto') {\n        const { numToleratedItems } = this.calculateNumItems();\n        const contentPos = this.getContentPosition();\n        const calculateFirst = (_index = 0, _numT) => (_index <= _numT ? 0 : _index);\n        const calculateCoord = (_first, _size, _cpos) => _first * _size + _cpos;\n        const scrollTo = (left = 0, top = 0) => this.scrollTo({ left, top, behavior });\n        let newFirst = 0;\n        if (this.both) {\n            newFirst = { rows: calculateFirst(index[0], numToleratedItems[0]), cols: calculateFirst(index[1], numToleratedItems[1]) };\n            scrollTo(calculateCoord(newFirst.cols, this._itemSize[1], contentPos.left), calculateCoord(newFirst.rows, this._itemSize[0], contentPos.top));\n        }\n        else {\n            newFirst = calculateFirst(index, numToleratedItems);\n            if (this.horizontal) {\n                scrollTo(calculateCoord(newFirst, this._itemSize, contentPos.left), 0);\n            }\n            if (this.vertical) {\n                const currentScrollLeft = this.elementViewChild?.nativeElement.scrollLeft;\n                scrollTo(currentScrollLeft, calculateCoord(newFirst, this._itemSize, contentPos.top));\n            }\n        }\n        this.isRangeChanged = this.first !== newFirst;\n        this.first = newFirst;\n    }\n    scrollInView(index, to, behavior = 'auto') {\n        if (to) {\n            const { first, viewport } = this.getRenderedRange();\n            const scrollTo = (left = 0, top = 0) => this.scrollTo({ left, top, behavior });\n            const isToStart = to === 'to-start';\n            const isToEnd = to === 'to-end';\n            if (isToStart) {\n                if (this.both) {\n                    if (viewport.first.rows - first.rows > index[0]) {\n                        scrollTo(viewport.first.cols * this._itemSize[1], (viewport.first.rows - 1) * this._itemSize[0]);\n                    }\n                    else if (viewport.first.cols - first.cols > index[1]) {\n                        scrollTo((viewport.first.cols - 1) * this._itemSize[1], viewport.first.rows * this._itemSize[0]);\n                    }\n                }\n                else {\n                    if (viewport.first - first > index) {\n                        const pos = (viewport.first - 1) * this._itemSize;\n                        this.horizontal ? scrollTo(pos, 0) : scrollTo(0, pos);\n                    }\n                }\n            }\n            else if (isToEnd) {\n                if (this.both) {\n                    if (viewport.last.rows - first.rows <= index[0] + 1) {\n                        scrollTo(viewport.first.cols * this._itemSize[1], (viewport.first.rows + 1) * this._itemSize[0]);\n                    }\n                    else if (viewport.last.cols - first.cols <= index[1] + 1) {\n                        scrollTo((viewport.first.cols + 1) * this._itemSize[1], viewport.first.rows * this._itemSize[0]);\n                    }\n                }\n                else {\n                    if (viewport.last - first <= index + 1) {\n                        const pos = (viewport.first + 1) * this._itemSize;\n                        this.horizontal ? scrollTo(pos, 0) : scrollTo(0, pos);\n                    }\n                }\n            }\n        }\n        else {\n            this.scrollToIndex(index, behavior);\n        }\n    }\n    getRenderedRange() {\n        const calculateFirstInViewport = (_pos, _size) => Math.floor(_pos / (_size || _pos));\n        let firstInViewport = this.first;\n        let lastInViewport = 0;\n        if (this.elementViewChild?.nativeElement) {\n            const { scrollTop, scrollLeft } = this.elementViewChild.nativeElement;\n            if (this.both) {\n                firstInViewport = { rows: calculateFirstInViewport(scrollTop, this._itemSize[0]), cols: calculateFirstInViewport(scrollLeft, this._itemSize[1]) };\n                lastInViewport = { rows: firstInViewport.rows + this.numItemsInViewport.rows, cols: firstInViewport.cols + this.numItemsInViewport.cols };\n            }\n            else {\n                const scrollPos = this.horizontal ? scrollLeft : scrollTop;\n                firstInViewport = calculateFirstInViewport(scrollPos, this._itemSize);\n                lastInViewport = firstInViewport + this.numItemsInViewport;\n            }\n        }\n        return {\n            first: this.first,\n            last: this.last,\n            viewport: {\n                first: firstInViewport,\n                last: lastInViewport\n            }\n        };\n    }\n    calculateNumItems() {\n        const contentPos = this.getContentPosition();\n        const contentWidth = (this.elementViewChild?.nativeElement ? this.elementViewChild.nativeElement.offsetWidth - contentPos.left : 0) || 0;\n        const contentHeight = (this.elementViewChild?.nativeElement ? this.elementViewChild.nativeElement.offsetHeight - contentPos.top : 0) || 0;\n        const calculateNumItemsInViewport = (_contentSize, _itemSize) => Math.ceil(_contentSize / (_itemSize || _contentSize));\n        const calculateNumToleratedItems = (_numItems) => Math.ceil(_numItems / 2);\n        const numItemsInViewport = this.both\n            ? { rows: calculateNumItemsInViewport(contentHeight, this._itemSize[0]), cols: calculateNumItemsInViewport(contentWidth, this._itemSize[1]) }\n            : calculateNumItemsInViewport(this.horizontal ? contentWidth : contentHeight, this._itemSize);\n        const numToleratedItems = this.d_numToleratedItems || (this.both ? [calculateNumToleratedItems(numItemsInViewport.rows), calculateNumToleratedItems(numItemsInViewport.cols)] : calculateNumToleratedItems(numItemsInViewport));\n        return { numItemsInViewport, numToleratedItems };\n    }\n    calculateOptions() {\n        const { numItemsInViewport, numToleratedItems } = this.calculateNumItems();\n        const calculateLast = (_first, _num, _numT, _isCols = false) => this.getLast(_first + _num + (_first < _numT ? 2 : 3) * _numT, _isCols);\n        const first = this.first;\n        const last = this.both\n            ? { rows: calculateLast(this.first.rows, numItemsInViewport.rows, numToleratedItems[0]), cols: calculateLast(this.first.cols, numItemsInViewport.cols, numToleratedItems[1], true) }\n            : calculateLast(this.first, numItemsInViewport, numToleratedItems);\n        this.last = last;\n        this.numItemsInViewport = numItemsInViewport;\n        this.d_numToleratedItems = numToleratedItems;\n        if (this.showLoader) {\n            this.loaderArr = this.both ? Array.from({ length: numItemsInViewport.rows }).map(() => Array.from({ length: numItemsInViewport.cols })) : Array.from({ length: numItemsInViewport });\n        }\n        if (this._lazy) {\n            Promise.resolve().then(() => {\n                this.lazyLoadState = {\n                    first: this._step ? (this.both ? { rows: 0, cols: first.cols } : 0) : first,\n                    last: Math.min(this._step ? this._step : this.last, this.items.length)\n                };\n                this.handleEvents('onLazyLoad', this.lazyLoadState);\n            });\n        }\n    }\n    calculateAutoSize() {\n        if (this._autoSize && !this.d_loading) {\n            Promise.resolve().then(() => {\n                if (this.contentEl) {\n                    this.contentEl.style.minHeight = this.contentEl.style.minWidth = 'auto';\n                    this.contentEl.style.position = 'relative';\n                    this.elementViewChild.nativeElement.style.contain = 'none';\n                    const [contentWidth, contentHeight] = [DomHandler.getWidth(this.contentEl), DomHandler.getHeight(this.contentEl)];\n                    contentWidth !== this.defaultContentWidth && (this.elementViewChild.nativeElement.style.width = '');\n                    contentHeight !== this.defaultContentHeight && (this.elementViewChild.nativeElement.style.height = '');\n                    const [width, height] = [DomHandler.getWidth(this.elementViewChild.nativeElement), DomHandler.getHeight(this.elementViewChild.nativeElement)];\n                    (this.both || this.horizontal) && (this.elementViewChild.nativeElement.style.width = width < this.defaultWidth ? width + 'px' : this._scrollWidth || this.defaultWidth + 'px');\n                    (this.both || this.vertical) && (this.elementViewChild.nativeElement.style.height = height < this.defaultHeight ? height + 'px' : this._scrollHeight || this.defaultHeight + 'px');\n                    this.contentEl.style.minHeight = this.contentEl.style.minWidth = '';\n                    this.contentEl.style.position = '';\n                    this.elementViewChild.nativeElement.style.contain = '';\n                }\n            });\n        }\n    }\n    getLast(last = 0, isCols = false) {\n        return this._items ? Math.min(isCols ? (this._columns || this._items[0]).length : this._items.length, last) : 0;\n    }\n    getContentPosition() {\n        if (this.contentEl) {\n            const style = getComputedStyle(this.contentEl);\n            const left = parseFloat(style.paddingLeft) + Math.max(parseFloat(style.left) || 0, 0);\n            const right = parseFloat(style.paddingRight) + Math.max(parseFloat(style.right) || 0, 0);\n            const top = parseFloat(style.paddingTop) + Math.max(parseFloat(style.top) || 0, 0);\n            const bottom = parseFloat(style.paddingBottom) + Math.max(parseFloat(style.bottom) || 0, 0);\n            return { left, right, top, bottom, x: left + right, y: top + bottom };\n        }\n        return { left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\n    }\n    setSize() {\n        if (this.elementViewChild?.nativeElement) {\n            const parentElement = this.elementViewChild.nativeElement.parentElement.parentElement;\n            const width = this._scrollWidth || `${this.elementViewChild.nativeElement.offsetWidth || parentElement.offsetWidth}px`;\n            const height = this._scrollHeight || `${this.elementViewChild.nativeElement.offsetHeight || parentElement.offsetHeight}px`;\n            const setProp = (_name, _value) => (this.elementViewChild.nativeElement.style[_name] = _value);\n            if (this.both || this.horizontal) {\n                setProp('height', height);\n                setProp('width', width);\n            }\n            else {\n                setProp('height', height);\n            }\n        }\n    }\n    setSpacerSize() {\n        if (this._items) {\n            const contentPos = this.getContentPosition();\n            const setProp = (_name, _value, _size, _cpos = 0) => (this.spacerStyle = { ...this.spacerStyle, ...{ [`${_name}`]: (_value || []).length * _size + _cpos + 'px' } });\n            if (this.both) {\n                setProp('height', this._items, this._itemSize[0], contentPos.y);\n                setProp('width', this._columns || this._items[1], this._itemSize[1], contentPos.x);\n            }\n            else {\n                this.horizontal ? setProp('width', this._columns || this._items, this._itemSize, contentPos.x) : setProp('height', this._items, this._itemSize, contentPos.y);\n            }\n        }\n    }\n    setContentPosition(pos) {\n        if (this.contentEl && !this._appendOnly) {\n            const first = pos ? pos.first : this.first;\n            const calculateTranslateVal = (_first, _size) => _first * _size;\n            const setTransform = (_x = 0, _y = 0) => (this.contentStyle = { ...this.contentStyle, ...{ transform: `translate3d(${_x}px, ${_y}px, 0)` } });\n            if (this.both) {\n                setTransform(calculateTranslateVal(first.cols, this._itemSize[1]), calculateTranslateVal(first.rows, this._itemSize[0]));\n            }\n            else {\n                const translateVal = calculateTranslateVal(first, this._itemSize);\n                this.horizontal ? setTransform(translateVal, 0) : setTransform(0, translateVal);\n            }\n        }\n    }\n    onScrollPositionChange(event) {\n        const target = event.target;\n        const contentPos = this.getContentPosition();\n        const calculateScrollPos = (_pos, _cpos) => (_pos ? (_pos > _cpos ? _pos - _cpos : _pos) : 0);\n        const calculateCurrentIndex = (_pos, _size) => Math.floor(_pos / (_size || _pos));\n        const calculateTriggerIndex = (_currentIndex, _first, _last, _num, _numT, _isScrollDownOrRight) => {\n            return _currentIndex <= _numT ? _numT : _isScrollDownOrRight ? _last - _num - _numT : _first + _numT - 1;\n        };\n        const calculateFirst = (_currentIndex, _triggerIndex, _first, _last, _num, _numT, _isScrollDownOrRight) => {\n            if (_currentIndex <= _numT)\n                return 0;\n            else\n                return Math.max(0, _isScrollDownOrRight ? (_currentIndex < _triggerIndex ? _first : _currentIndex - _numT) : _currentIndex > _triggerIndex ? _first : _currentIndex - 2 * _numT);\n        };\n        const calculateLast = (_currentIndex, _first, _last, _num, _numT, _isCols = false) => {\n            let lastValue = _first + _num + 2 * _numT;\n            if (_currentIndex >= _numT) {\n                lastValue += _numT + 1;\n            }\n            return this.getLast(lastValue, _isCols);\n        };\n        const scrollTop = calculateScrollPos(target.scrollTop, contentPos.top);\n        const scrollLeft = calculateScrollPos(target.scrollLeft, contentPos.left);\n        let newFirst = this.both ? { rows: 0, cols: 0 } : 0;\n        let newLast = this.last;\n        let isRangeChanged = false;\n        let newScrollPos = this.lastScrollPos;\n        if (this.both) {\n            const isScrollDown = this.lastScrollPos.top <= scrollTop;\n            const isScrollRight = this.lastScrollPos.left <= scrollLeft;\n            if (!this._appendOnly || (this._appendOnly && (isScrollDown || isScrollRight))) {\n                const currentIndex = { rows: calculateCurrentIndex(scrollTop, this._itemSize[0]), cols: calculateCurrentIndex(scrollLeft, this._itemSize[1]) };\n                const triggerIndex = {\n                    rows: calculateTriggerIndex(currentIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n                    cols: calculateTriggerIndex(currentIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n                };\n                newFirst = {\n                    rows: calculateFirst(currentIndex.rows, triggerIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n                    cols: calculateFirst(currentIndex.cols, triggerIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n                };\n                newLast = {\n                    rows: calculateLast(currentIndex.rows, newFirst.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0]),\n                    cols: calculateLast(currentIndex.cols, newFirst.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], true)\n                };\n                isRangeChanged = newFirst.rows !== this.first.rows || newLast.rows !== this.last.rows || newFirst.cols !== this.first.cols || newLast.cols !== this.last.cols || this.isRangeChanged;\n                newScrollPos = { top: scrollTop, left: scrollLeft };\n            }\n        }\n        else {\n            const scrollPos = this.horizontal ? scrollLeft : scrollTop;\n            const isScrollDownOrRight = this.lastScrollPos <= scrollPos;\n            if (!this._appendOnly || (this._appendOnly && isScrollDownOrRight)) {\n                const currentIndex = calculateCurrentIndex(scrollPos, this._itemSize);\n                const triggerIndex = calculateTriggerIndex(currentIndex, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n                newFirst = calculateFirst(currentIndex, triggerIndex, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n                newLast = calculateLast(currentIndex, newFirst, this.last, this.numItemsInViewport, this.d_numToleratedItems);\n                isRangeChanged = newFirst !== this.first || newLast !== this.last || this.isRangeChanged;\n                newScrollPos = scrollPos;\n            }\n        }\n        return {\n            first: newFirst,\n            last: newLast,\n            isRangeChanged,\n            scrollPos: newScrollPos\n        };\n    }\n    onScrollChange(event) {\n        const { first, last, isRangeChanged, scrollPos } = this.onScrollPositionChange(event);\n        if (isRangeChanged) {\n            const newState = { first, last };\n            this.setContentPosition(newState);\n            this.first = first;\n            this.last = last;\n            this.lastScrollPos = scrollPos;\n            this.handleEvents('onScrollIndexChange', newState);\n            if (this._lazy && this.isPageChanged) {\n                const lazyLoadState = {\n                    first: this._step ? Math.min(this.getPageByFirst() * this._step, this.items.length - this._step) : first,\n                    last: Math.min(this._step ? (this.getPageByFirst() + 1) * this._step : last, this.items.length)\n                };\n                const isLazyStateChanged = this.lazyLoadState.first !== lazyLoadState.first || this.lazyLoadState.last !== lazyLoadState.last;\n                isLazyStateChanged && this.handleEvents('onLazyLoad', lazyLoadState);\n                this.lazyLoadState = lazyLoadState;\n            }\n        }\n    }\n    onContainerScroll(event) {\n        this.handleEvents('onScroll', { originalEvent: event });\n        if (this._delay && this.isPageChanged) {\n            if (this.scrollTimeout) {\n                clearTimeout(this.scrollTimeout);\n            }\n            if (!this.d_loading && this.showLoader) {\n                const { isRangeChanged } = this.onScrollPositionChange(event);\n                const changed = isRangeChanged || (this._step ? this.isPageChanged : false);\n                if (changed) {\n                    this.d_loading = true;\n                    this.cd.detectChanges();\n                }\n            }\n            this.scrollTimeout = setTimeout(() => {\n                this.onScrollChange(event);\n                if (this.d_loading && this.showLoader && (!this._lazy || this._loading === undefined)) {\n                    this.d_loading = false;\n                    this.page = this.getPageByFirst();\n                    this.cd.detectChanges();\n                }\n            }, this._delay);\n        }\n        else {\n            !this.d_loading && this.onScrollChange(event);\n        }\n    }\n    bindResizeListener() {\n        if (isPlatformBrowser(this.platformId)) {\n            if (!this.windowResizeListener) {\n                this.zone.runOutsideAngular(() => {\n                    const window = this.document.defaultView;\n                    const event = DomHandler.isTouchDevice() ? 'orientationchange' : 'resize';\n                    this.windowResizeListener = this.renderer.listen(window, event, this.onWindowResize.bind(this));\n                });\n            }\n        }\n    }\n    unbindResizeListener() {\n        if (this.windowResizeListener) {\n            this.windowResizeListener();\n            this.windowResizeListener = null;\n        }\n    }\n    onWindowResize() {\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n        }\n        this.resizeTimeout = setTimeout(() => {\n            if (DomHandler.isVisible(this.elementViewChild?.nativeElement)) {\n                const [width, height] = [DomHandler.getWidth(this.elementViewChild?.nativeElement), DomHandler.getHeight(this.elementViewChild?.nativeElement)];\n                const [isDiffWidth, isDiffHeight] = [width !== this.defaultWidth, height !== this.defaultHeight];\n                const reinit = this.both ? isDiffWidth || isDiffHeight : this.horizontal ? isDiffWidth : this.vertical ? isDiffHeight : false;\n                reinit &&\n                    this.zone.run(() => {\n                        this.d_numToleratedItems = this._numToleratedItems;\n                        this.defaultWidth = width;\n                        this.defaultHeight = height;\n                        this.defaultContentWidth = DomHandler.getWidth(this.contentEl);\n                        this.defaultContentHeight = DomHandler.getHeight(this.contentEl);\n                        this.init();\n                    });\n            }\n        }, this._resizeDelay);\n    }\n    handleEvents(name, params) {\n        //@ts-ignore\n        return this.options && this.options[name] ? this.options[name](params) : this[name].emit(params);\n    }\n    getContentOptions() {\n        return {\n            contentStyleClass: `p-scroller-content ${this.d_loading ? 'p-scroller-loading' : ''}`,\n            items: this.loadedItems,\n            getItemOptions: (index) => this.getOptions(index),\n            loading: this.d_loading,\n            getLoaderOptions: (index, options) => this.getLoaderOptions(index, options),\n            itemSize: this._itemSize,\n            rows: this.loadedRows,\n            columns: this.loadedColumns,\n            spacerStyle: this.spacerStyle,\n            contentStyle: this.contentStyle,\n            vertical: this.vertical,\n            horizontal: this.horizontal,\n            both: this.both\n        };\n    }\n    getOptions(renderedIndex) {\n        const count = (this._items || []).length;\n        const index = this.both ? this.first.rows + renderedIndex : this.first + renderedIndex;\n        return {\n            index,\n            count,\n            first: index === 0,\n            last: index === count - 1,\n            even: index % 2 === 0,\n            odd: index % 2 !== 0\n        };\n    }\n    getLoaderOptions(index, extOptions) {\n        const count = this.loaderArr.length;\n        return {\n            index,\n            count,\n            first: index === 0,\n            last: index === count - 1,\n            even: index % 2 === 0,\n            odd: index % 2 !== 0,\n            ...extOptions\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Scroller, deps: [{ token: DOCUMENT }, { token: PLATFORM_ID }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.5\", type: Scroller, selector: \"p-scroller\", inputs: { id: \"id\", style: \"style\", styleClass: \"styleClass\", tabindex: \"tabindex\", items: \"items\", itemSize: \"itemSize\", scrollHeight: \"scrollHeight\", scrollWidth: \"scrollWidth\", orientation: \"orientation\", step: \"step\", delay: \"delay\", resizeDelay: \"resizeDelay\", appendOnly: \"appendOnly\", inline: \"inline\", lazy: \"lazy\", disabled: \"disabled\", loaderDisabled: \"loaderDisabled\", columns: \"columns\", showSpacer: \"showSpacer\", showLoader: \"showLoader\", numToleratedItems: \"numToleratedItems\", loading: \"loading\", autoSize: \"autoSize\", trackBy: \"trackBy\", options: \"options\" }, outputs: { onLazyLoad: \"onLazyLoad\", onScroll: \"onScroll\", onScrollIndexChange: \"onScrollIndexChange\" }, host: { classAttribute: \"p-scroller-viewport p-element\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"elementViewChild\", first: true, predicate: [\"element\"], descendants: true }, { propertyName: \"contentViewChild\", first: true, predicate: [\"content\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n        <ng-container *ngIf=\"!_disabled; else disabledContainer\">\n            <div\n                #element\n                [attr.id]=\"_id\"\n                [attr.tabindex]=\"tabindex\"\n                [ngStyle]=\"_style\"\n                [class]=\"_styleClass\"\n                [ngClass]=\"{ 'p-scroller': true, 'p-scroller-inline': inline, 'p-both-scroll': both, 'p-horizontal-scroll': horizontal }\"\n                (scroll)=\"onContainerScroll($event)\"\n                [attr.data-pc-name]=\"'scroller'\"\n                [attr.data-pc-section]=\"'root'\"\n            >\n                <ng-container *ngIf=\"contentTemplate; else buildInContent\">\n                    <ng-container *ngTemplateOutlet=\"contentTemplate; context: { $implicit: loadedItems, options: getContentOptions() }\"></ng-container>\n                </ng-container>\n                <ng-template #buildInContent>\n                    <div #content class=\"p-scroller-content\" [ngClass]=\"{ 'p-scroller-loading': d_loading }\" [ngStyle]=\"contentStyle\" [attr.data-pc-section]=\"'content'\">\n                        <ng-container *ngFor=\"let item of loadedItems; let index = index; trackBy: _trackBy || index\">\n                            <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item, options: getOptions(index) }\"></ng-container>\n                        </ng-container>\n                    </div>\n                </ng-template>\n                <div *ngIf=\"_showSpacer\" class=\"p-scroller-spacer\" [ngStyle]=\"spacerStyle\" [attr.data-pc-section]=\"'spacer'\"></div>\n                <div *ngIf=\"!loaderDisabled && _showLoader && d_loading\" class=\"p-scroller-loader\" [ngClass]=\"{ 'p-component-overlay': !loaderTemplate }\" [attr.data-pc-section]=\"'loader'\">\n                    <ng-container *ngIf=\"loaderTemplate; else buildInLoader\">\n                        <ng-container *ngFor=\"let item of loaderArr; let index = index\">\n                            <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: getLoaderOptions(index, both && { numCols: _numItemsInViewport.cols }) }\"></ng-container>\n                        </ng-container>\n                    </ng-container>\n                    <ng-template #buildInLoader>\n                        <ng-container *ngIf=\"loaderIconTemplate; else buildInLoaderIcon\">\n                            <ng-container *ngTemplateOutlet=\"loaderIconTemplate; context: { options: { styleClass: 'p-scroller-loading-icon' } }\"></ng-container>\n                        </ng-container>\n                        <ng-template #buildInLoaderIcon>\n                            <SpinnerIcon [styleClass]=\"'p-scroller-loading-icon pi-spin'\" [attr.data-pc-section]=\"'loadingIcon'\" />\n                        </ng-template>\n                    </ng-template>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #disabledContainer>\n            <ng-content></ng-content>\n            <ng-container *ngIf=\"contentTemplate\">\n                <ng-container *ngTemplateOutlet=\"contentTemplate; context: { $implicit: items, options: { rows: _items, columns: loadedColumns } }\"></ng-container>\n            </ng-container>\n        </ng-template>\n    `, isInline: true, styles: [\"@layer primeng{p-scroller{flex:1;outline:0 none}.p-scroller{position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;outline:0 none}.p-scroller-content{position:absolute;top:0;left:0;min-height:100%;min-width:100%;will-change:transform}.p-scroller-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0;pointer-events:none}.p-scroller-loader{position:sticky;top:0;left:0;width:100%;height:100%}.p-scroller-loader.p-component-overlay{display:flex;align-items:center;justify-content:center}.p-scroller-loading-icon{scale:2}.p-scroller-inline .p-scroller-content{position:static}}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(() => i1.NgClass), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgForOf), selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgIf), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgTemplateOutlet), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgStyle), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: i0.forwardRef(() => SpinnerIcon), selector: \"SpinnerIcon\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Scroller, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-scroller', template: `\n        <ng-container *ngIf=\"!_disabled; else disabledContainer\">\n            <div\n                #element\n                [attr.id]=\"_id\"\n                [attr.tabindex]=\"tabindex\"\n                [ngStyle]=\"_style\"\n                [class]=\"_styleClass\"\n                [ngClass]=\"{ 'p-scroller': true, 'p-scroller-inline': inline, 'p-both-scroll': both, 'p-horizontal-scroll': horizontal }\"\n                (scroll)=\"onContainerScroll($event)\"\n                [attr.data-pc-name]=\"'scroller'\"\n                [attr.data-pc-section]=\"'root'\"\n            >\n                <ng-container *ngIf=\"contentTemplate; else buildInContent\">\n                    <ng-container *ngTemplateOutlet=\"contentTemplate; context: { $implicit: loadedItems, options: getContentOptions() }\"></ng-container>\n                </ng-container>\n                <ng-template #buildInContent>\n                    <div #content class=\"p-scroller-content\" [ngClass]=\"{ 'p-scroller-loading': d_loading }\" [ngStyle]=\"contentStyle\" [attr.data-pc-section]=\"'content'\">\n                        <ng-container *ngFor=\"let item of loadedItems; let index = index; trackBy: _trackBy || index\">\n                            <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item, options: getOptions(index) }\"></ng-container>\n                        </ng-container>\n                    </div>\n                </ng-template>\n                <div *ngIf=\"_showSpacer\" class=\"p-scroller-spacer\" [ngStyle]=\"spacerStyle\" [attr.data-pc-section]=\"'spacer'\"></div>\n                <div *ngIf=\"!loaderDisabled && _showLoader && d_loading\" class=\"p-scroller-loader\" [ngClass]=\"{ 'p-component-overlay': !loaderTemplate }\" [attr.data-pc-section]=\"'loader'\">\n                    <ng-container *ngIf=\"loaderTemplate; else buildInLoader\">\n                        <ng-container *ngFor=\"let item of loaderArr; let index = index\">\n                            <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: getLoaderOptions(index, both && { numCols: _numItemsInViewport.cols }) }\"></ng-container>\n                        </ng-container>\n                    </ng-container>\n                    <ng-template #buildInLoader>\n                        <ng-container *ngIf=\"loaderIconTemplate; else buildInLoaderIcon\">\n                            <ng-container *ngTemplateOutlet=\"loaderIconTemplate; context: { options: { styleClass: 'p-scroller-loading-icon' } }\"></ng-container>\n                        </ng-container>\n                        <ng-template #buildInLoaderIcon>\n                            <SpinnerIcon [styleClass]=\"'p-scroller-loading-icon pi-spin'\" [attr.data-pc-section]=\"'loadingIcon'\" />\n                        </ng-template>\n                    </ng-template>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #disabledContainer>\n            <ng-content></ng-content>\n            <ng-container *ngIf=\"contentTemplate\">\n                <ng-container *ngTemplateOutlet=\"contentTemplate; context: { $implicit: items, options: { rows: _items, columns: loadedColumns } }\"></ng-container>\n            </ng-container>\n        </ng-template>\n    `, changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-scroller-viewport p-element'\n                    }, styles: [\"@layer primeng{p-scroller{flex:1;outline:0 none}.p-scroller{position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;outline:0 none}.p-scroller-content{position:absolute;top:0;left:0;min-height:100%;min-width:100%;will-change:transform}.p-scroller-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0;pointer-events:none}.p-scroller-loader{position:sticky;top:0;left:0;width:100%;height:100%}.p-scroller-loader.p-component-overlay{display:flex;align-items:center;justify-content:center}.p-scroller-loading-icon{scale:2}.p-scroller-inline .p-scroller-content{position:static}}\\n\"] }]\n        }], ctorParameters: () => [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }], propDecorators: { id: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], items: [{\n                type: Input\n            }], itemSize: [{\n                type: Input\n            }], scrollHeight: [{\n                type: Input\n            }], scrollWidth: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], resizeDelay: [{\n                type: Input\n            }], appendOnly: [{\n                type: Input\n            }], inline: [{\n                type: Input\n            }], lazy: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], loaderDisabled: [{\n                type: Input\n            }], columns: [{\n                type: Input\n            }], showSpacer: [{\n                type: Input\n            }], showLoader: [{\n                type: Input\n            }], numToleratedItems: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }], autoSize: [{\n                type: Input\n            }], trackBy: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], onLazyLoad: [{\n                type: Output\n            }], onScroll: [{\n                type: Output\n            }], onScrollIndexChange: [{\n                type: Output\n            }], elementViewChild: [{\n                type: ViewChild,\n                args: ['element']\n            }], contentViewChild: [{\n                type: ViewChild,\n                args: ['content']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass ScrollerModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: ScrollerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.5\", ngImport: i0, type: ScrollerModule, declarations: [Scroller], imports: [CommonModule, SharedModule, SpinnerIcon], exports: [Scroller, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: ScrollerModule, imports: [CommonModule, SharedModule, SpinnerIcon, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: ScrollerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, SharedModule, SpinnerIcon],\n                    exports: [Scroller, SharedModule],\n                    declarations: [Scroller]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Scroller, ScrollerModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}